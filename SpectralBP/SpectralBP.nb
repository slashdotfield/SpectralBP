(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    298278,       6009]
NotebookOptionsPosition[    286933,       5817]
NotebookOutlinePosition[    287275,       5832]
CellTagsIndexPosition[    287232,       5829]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["SpectralBP", "Title",
 CellChangeTimes->{{3.7604124121948085`*^9, 3.7604124274685183`*^9}, {
  3.7604124699629574`*^9, 3.760412488345841*^9}, {3.764996657914903*^9, 
  3.7649966593535414`*^9}},ExpressionUUID->"60066aca-edf5-4fec-8fdd-\
3defe3b5823d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<SpectralBP`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76041249467742*^9, 3.76041253551396*^9}, {
  3.760412933963925*^9, 3.760412934969675*^9}, {3.7649966646040673`*^9, 
  3.764996666384915*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6fd77285-1170-4c9f-a27b-55e81c756500"],

Cell[CellGroupData[{

Cell["Preamble", "Chapter",
 CellChangeTimes->{{3.7604130106804647`*^9, 
  3.760413031323423*^9}},ExpressionUUID->"4b3f4772-91a9-405c-84e3-\
5f0b6593b0a4"],

Cell[CellGroupData[{

Cell["Function usage", "Subsection",
 CellChangeTimes->{{3.76041303307821*^9, 3.760413035467126*^9}, {
  3.760415476073085*^9, 3.760415489998136*^9}, {3.760415522161061*^9, 
  3.7604155248416147`*^9}},ExpressionUUID->"e34c7213-76f6-47a3-ba87-\
2647a988e918"],

Cell[CellGroupData[{

Cell["Processing methods", "Subsubsection",
 CellChangeTimes->{{3.7605865032497225`*^9, 3.7605865172916603`*^9}, {
  3.760586633585314*^9, 
  3.7605866342141933`*^9}},ExpressionUUID->"9489ad86-9586-4e10-9376-\
90f9b95ae0bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DeconstructEquation", "::", "usage"}], " ", "=", " ", 
  "\"\<DeconstructEquation[eqn,Nmax]. Breaks down a set of ODEs into a list \
of matrices using a Bernstein polynomial basis of order Nmax\>\""}], "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MToLinear", "::", "usage"}], " ", "=", " ", 
  "\"\<MToLinear[M]. Converts the polynomial eigenproblem to a linear \
eigenproblem\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MListToLinear", "::", "usage"}], " ", "=", " ", 
  "\"\<MListToLinear[MList]. Converts a eigenproblem of several dependent \
variables to a linear eigenproblem.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetDerMatrices", "::", "usage"}], " ", "=", " ", 
  "\"\<GetDerMatrices[Nmax,dermax,lbpower,ubpower,method,R,prec]. Computes \
the generic form of the function and its derivatives as a spectral \
matrix.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FuncToVector", "::", "usage"}], " ", "=", " ", 
  "\"\<FuncToVector[f,var,Nmax,ulb,uub,lbpower,ubpower,method,prec]. Computes \
the corresponding vector form of the function.\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.760845470576688*^9, 3.7608454863478675`*^9}, {
   3.7608455320926924`*^9, 3.7608455351442914`*^9}, {3.7608455849673066`*^9, 
   3.7608459971797657`*^9}, 3.760937957766651*^9, 3.761442222994979*^9, {
   3.7614449397659683`*^9, 3.761445018207979*^9}, {3.7614450622946615`*^9, 
   3.7614451015717936`*^9}, {3.765427030755821*^9, 3.7654270663925323`*^9}, {
   3.766573120991587*^9, 3.7665732526965656`*^9}, {3.7665733480729723`*^9, 
   3.766573408390237*^9}, {3.766573460526563*^9, 3.7665735116357594`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"bcf3fe8b-b226-4c69-b39f-d954c0037178"],

Cell[BoxData["\<\"DeconstructEquation[eqn,Nmax]. Breaks down a set of ODEs \
into a list of matrices using a Bernstein polynomial basis of order \
Nmax\"\>"], "Output",
 CellChangeTimes->{
  3.7666302715365644`*^9, 3.7668377866600437`*^9, 3.76683988791716*^9, 
   3.766849451580484*^9, 3.766871190004557*^9, 3.7668752457880163`*^9, 
   3.766875355132485*^9, 3.7668754707337236`*^9, 3.7668755245300617`*^9, 
   3.766875576902398*^9, 3.7668767445764275`*^9, 3.7668833958190107`*^9, 
   3.7668865560855126`*^9, 3.766886662933098*^9, 3.766901957724019*^9, {
   3.7669019911812625`*^9, 3.7669019971466484`*^9}, 3.766980401118812*^9, 
   3.7669809619505453`*^9, 3.7669823201151543`*^9, 3.7670097705740395`*^9, 
   3.790491381796193*^9, 3.7905569598769436`*^9, 3.79241700936209*^9, 
   3.793263065838316*^9, 3.793263155136429*^9, 3.793263290019007*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"93e34cee-3c2b-461d-889e-9ee7c125ad10"],

Cell[BoxData["\<\"MToLinear[M]. Converts the polynomial eigenproblem to a \
linear eigenproblem\"\>"], "Output",
 CellChangeTimes->{
  3.7666302715365644`*^9, 3.7668377866600437`*^9, 3.76683988791716*^9, 
   3.766849451580484*^9, 3.766871190004557*^9, 3.7668752457880163`*^9, 
   3.766875355132485*^9, 3.7668754707337236`*^9, 3.7668755245300617`*^9, 
   3.766875576902398*^9, 3.7668767445764275`*^9, 3.7668833958190107`*^9, 
   3.7668865560855126`*^9, 3.766886662933098*^9, 3.766901957724019*^9, {
   3.7669019911812625`*^9, 3.7669019971466484`*^9}, 3.766980401118812*^9, 
   3.7669809619505453`*^9, 3.7669823201151543`*^9, 3.7670097705740395`*^9, 
   3.790491381796193*^9, 3.7905569598769436`*^9, 3.79241700936209*^9, 
   3.793263065838316*^9, 3.793263155136429*^9, 3.7932632900239234`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"4d04fe34-cfbf-4f01-819d-b4e7aa65ab20"],

Cell[BoxData["\<\"MListToLinear[MList]. Converts a eigenproblem of several \
dependent variables to a linear eigenproblem.\"\>"], "Output",
 CellChangeTimes->{
  3.7666302715365644`*^9, 3.7668377866600437`*^9, 3.76683988791716*^9, 
   3.766849451580484*^9, 3.766871190004557*^9, 3.7668752457880163`*^9, 
   3.766875355132485*^9, 3.7668754707337236`*^9, 3.7668755245300617`*^9, 
   3.766875576902398*^9, 3.7668767445764275`*^9, 3.7668833958190107`*^9, 
   3.7668865560855126`*^9, 3.766886662933098*^9, 3.766901957724019*^9, {
   3.7669019911812625`*^9, 3.7669019971466484`*^9}, 3.766980401118812*^9, 
   3.7669809619505453`*^9, 3.7669823201151543`*^9, 3.7670097705740395`*^9, 
   3.790491381796193*^9, 3.7905569598769436`*^9, 3.79241700936209*^9, 
   3.793263065838316*^9, 3.793263155136429*^9, 3.7932632900289087`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"c9206fe4-513f-4fbd-af48-14331a20d5d3"],

Cell[BoxData["\<\"GetDerMatrices[Nmax,dermax,lbpower,ubpower,method,R,prec]. \
Computes the generic form of the function and its derivatives as a spectral \
matrix.\"\>"], "Output",
 CellChangeTimes->{
  3.7666302715365644`*^9, 3.7668377866600437`*^9, 3.76683988791716*^9, 
   3.766849451580484*^9, 3.766871190004557*^9, 3.7668752457880163`*^9, 
   3.766875355132485*^9, 3.7668754707337236`*^9, 3.7668755245300617`*^9, 
   3.766875576902398*^9, 3.7668767445764275`*^9, 3.7668833958190107`*^9, 
   3.7668865560855126`*^9, 3.766886662933098*^9, 3.766901957724019*^9, {
   3.7669019911812625`*^9, 3.7669019971466484`*^9}, 3.766980401118812*^9, 
   3.7669809619505453`*^9, 3.7669823201151543`*^9, 3.7670097705740395`*^9, 
   3.790491381796193*^9, 3.7905569598769436`*^9, 3.79241700936209*^9, 
   3.793263065838316*^9, 3.793263155136429*^9, 3.7932632900319996`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"f0c662ea-27bb-40b5-ad89-dfda56a9c8f2"],

Cell[BoxData["\<\"FuncToVector[f,var,Nmax,ulb,uub,lbpower,ubpower,method,prec]\
. Computes the corresponding vector form of the function.\"\>"], "Output",
 CellChangeTimes->{
  3.7666302715365644`*^9, 3.7668377866600437`*^9, 3.76683988791716*^9, 
   3.766849451580484*^9, 3.766871190004557*^9, 3.7668752457880163`*^9, 
   3.766875355132485*^9, 3.7668754707337236`*^9, 3.7668755245300617`*^9, 
   3.766875576902398*^9, 3.7668767445764275`*^9, 3.7668833958190107`*^9, 
   3.7668865560855126`*^9, 3.766886662933098*^9, 3.766901957724019*^9, {
   3.7669019911812625`*^9, 3.7669019971466484`*^9}, 3.766980401118812*^9, 
   3.7669809619505453`*^9, 3.7669823201151543`*^9, 3.7670097705740395`*^9, 
   3.790491381796193*^9, 3.7905569598769436`*^9, 3.79241700936209*^9, 
   3.793263065838316*^9, 3.793263155136429*^9, 3.793263290035969*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"d6822eb4-0516-42ec-bf9e-c3f7501a8a74"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalue methods", "Subsubsection",
 CellChangeTimes->{{3.760586621015895*^9, 3.7605866313046317`*^9}, {
  3.7618021397034955`*^9, 
  3.761802152964078*^9}},ExpressionUUID->"c6d13de3-ad48-41dd-9b08-\
a8b32d3ccd06"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GetModes", "::", "usage"}], " ", "=", " ", 
  "\"\<GetModes[eqn,n]. Generates the spectrum of eqn using a Bernstein \
polynomial basis of order n.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetAccurateModes", "::", "usage"}], " ", "=", " ", 
  "\"\<GetAccurateModes[eqn,n1,n2]. Compares the spectrum of two different \
grid, and keeps the eigenvalues that agree up to a default value of 2 digits.\
\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompareModes", "::", "usage"}], " ", "=", " ", 
  "\"\<CompareModes[spectrum1,spectrum2]. Compares two spectra, and keeps the \
eigenvalues that agree up to a default value of 2 digits.\>\""}], "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagPrecision", "::", "usage"}], " ", "=", " ", 
  "\"\<MagPrecision[\[Omega]test,\[Omega]ref]. Returns the maximum number of \
digits the magnitude of \[Omega]test agrees with its closest counterpart in \
the list \[Omega]ref.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IndivPrecision", "::", "usage"}], " ", "=", " ", 
  "\"\<IndivPrecision[\[Omega]test,\[Omega]ref]. Returns the maximum number \
of digits that the real and imaginary parts of \n\[Omega]test agrees with its \
closest counterpart in the list \[Omega]ref.\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.760415565796201*^9, 3.760415674620253*^9}, {
   3.7605100277083716`*^9, 3.760510127752332*^9}, 3.760514361615922*^9, {
   3.7605148273668623`*^9, 3.76051487046704*^9}, {3.760515665285138*^9, 
   3.7605157618965454`*^9}, {3.7605166385624595`*^9, 3.760516639741025*^9}, {
   3.7605170999430585`*^9, 3.7605171041268425`*^9}, {3.760521510930789*^9, 
   3.7605215581138935`*^9}, {3.7605215891386843`*^9, 
   3.7605215911539974`*^9}, {3.7605216377980537`*^9, 
   3.7605216720782127`*^9}, {3.760521799577363*^9, 3.760521890393282*^9}, {
   3.7605275825017433`*^9, 3.760527604887557*^9}, {3.760586537076645*^9, 
   3.760586537985565*^9}, {3.7605866575289183`*^9, 3.760586658023343*^9}, {
   3.7607610795398874`*^9, 3.7607610807227235`*^9}, {3.7607612163890057`*^9, 
   3.760761425200755*^9}, {3.7607615030406113`*^9, 3.7607615090226173`*^9}, {
   3.766573582555318*^9, 3.76657371583609*^9}, {3.766573747057712*^9, 
   3.7665737681496334`*^9}, {3.766574636133355*^9, 3.7665746417281847`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"504c6edf-8ee0-4715-9cce-7325d3379f8c"],

Cell[BoxData["\<\"GetModes[eqn,n]. Generates the spectrum of eqn using a \
Bernstein polynomial basis of order n.\"\>"], "Output",
 CellChangeTimes->{
  3.766630271574332*^9, 3.7668377867186017`*^9, 3.766839887949896*^9, 
   3.766849451737219*^9, 3.7668711900863647`*^9, 3.7668752458916807`*^9, 
   3.766875355211844*^9, 3.766875470801676*^9, 3.766875524592557*^9, 
   3.766875576997628*^9, 3.7668767446503334`*^9, 3.766883395899361*^9, 
   3.766886556156441*^9, 3.76688666302188*^9, 3.7669019578911743`*^9, {
   3.766901991329567*^9, 3.7669019972612247`*^9}, 3.766980401179819*^9, 
   3.7669809621102567`*^9, 3.7669823202034426`*^9, 3.7670097706271105`*^9, 
   3.790491381871559*^9, 3.7905569599866486`*^9, 3.79241700951962*^9, 
   3.793263065929073*^9, 3.7932631558986564`*^9, 3.793263290831808*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"9e65b7e3-0506-4f5a-86a9-9fd775c613cb"],

Cell[BoxData["\<\"GetAccurateModes[eqn,n1,n2]. Compares the spectrum of two \
different grid, and keeps the eigenvalues that agree up to a default value of \
2 digits.\"\>"], "Output",
 CellChangeTimes->{
  3.766630271574332*^9, 3.7668377867186017`*^9, 3.766839887949896*^9, 
   3.766849451737219*^9, 3.7668711900863647`*^9, 3.7668752458916807`*^9, 
   3.766875355211844*^9, 3.766875470801676*^9, 3.766875524592557*^9, 
   3.766875576997628*^9, 3.7668767446503334`*^9, 3.766883395899361*^9, 
   3.766886556156441*^9, 3.76688666302188*^9, 3.7669019578911743`*^9, {
   3.766901991329567*^9, 3.7669019972612247`*^9}, 3.766980401179819*^9, 
   3.7669809621102567`*^9, 3.7669823202034426`*^9, 3.7670097706271105`*^9, 
   3.790491381871559*^9, 3.7905569599866486`*^9, 3.79241700951962*^9, 
   3.793263065929073*^9, 3.7932631558986564`*^9, 3.7932632908366957`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"0647c1b3-4865-45aa-bc04-d6f5d8cc767a"],

Cell[BoxData["\<\"CompareModes[spectrum1,spectrum2]. Compares two spectra, \
and keeps the eigenvalues that agree up to a default value of 2 \
digits.\"\>"], "Output",
 CellChangeTimes->{
  3.766630271574332*^9, 3.7668377867186017`*^9, 3.766839887949896*^9, 
   3.766849451737219*^9, 3.7668711900863647`*^9, 3.7668752458916807`*^9, 
   3.766875355211844*^9, 3.766875470801676*^9, 3.766875524592557*^9, 
   3.766875576997628*^9, 3.7668767446503334`*^9, 3.766883395899361*^9, 
   3.766886556156441*^9, 3.76688666302188*^9, 3.7669019578911743`*^9, {
   3.766901991329567*^9, 3.7669019972612247`*^9}, 3.766980401179819*^9, 
   3.7669809621102567`*^9, 3.7669823202034426`*^9, 3.7670097706271105`*^9, 
   3.790491381871559*^9, 3.7905569599866486`*^9, 3.79241700951962*^9, 
   3.793263065929073*^9, 3.7932631558986564`*^9, 3.793263290840685*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"eb541917-c8dd-4662-99a3-aad6631c175e"],

Cell[BoxData["\<\"MagPrecision[\[Omega]test,\[Omega]ref]. Returns the maximum \
number of digits the magnitude of \[Omega]test agrees with its closest \
counterpart in the list \[Omega]ref.\"\>"], "Output",
 CellChangeTimes->{
  3.766630271574332*^9, 3.7668377867186017`*^9, 3.766839887949896*^9, 
   3.766849451737219*^9, 3.7668711900863647`*^9, 3.7668752458916807`*^9, 
   3.766875355211844*^9, 3.766875470801676*^9, 3.766875524592557*^9, 
   3.766875576997628*^9, 3.7668767446503334`*^9, 3.766883395899361*^9, 
   3.766886556156441*^9, 3.76688666302188*^9, 3.7669019578911743`*^9, {
   3.766901991329567*^9, 3.7669019972612247`*^9}, 3.766980401179819*^9, 
   3.7669809621102567`*^9, 3.7669823202034426`*^9, 3.7670097706271105`*^9, 
   3.790491381871559*^9, 3.7905569599866486`*^9, 3.79241700951962*^9, 
   3.793263065929073*^9, 3.7932631558986564`*^9, 3.793263290843678*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"1a5c7ad9-58ae-4583-a5f4-6157f72885a2"],

Cell[BoxData["\<\"IndivPrecision[\[Omega]test,\[Omega]ref]. Returns the \
maximum number of digits that the real and imaginary parts of \\n\[Omega]test \
agrees with its closest counterpart in the list \[Omega]ref.\"\>"], "Output",
 CellChangeTimes->{
  3.766630271574332*^9, 3.7668377867186017`*^9, 3.766839887949896*^9, 
   3.766849451737219*^9, 3.7668711900863647`*^9, 3.7668752458916807`*^9, 
   3.766875355211844*^9, 3.766875470801676*^9, 3.766875524592557*^9, 
   3.766875576997628*^9, 3.7668767446503334`*^9, 3.766883395899361*^9, 
   3.766886556156441*^9, 3.76688666302188*^9, 3.7669019578911743`*^9, {
   3.766901991329567*^9, 3.7669019972612247`*^9}, 3.766980401179819*^9, 
   3.7669809621102567`*^9, 3.7669823202034426`*^9, 3.7670097706271105`*^9, 
   3.790491381871559*^9, 3.7905569599866486`*^9, 3.79241700951962*^9, 
   3.793263065929073*^9, 3.7932631558986564`*^9, 3.793263290847683*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"af954d3c-3eef-4e05-9a8f-62d1d523e3b9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenfunction methods", "Subsubsection",
 CellChangeTimes->{{3.761802161037923*^9, 
  3.761802164593772*^9}},ExpressionUUID->"fc13ba7f-ebc0-4e02-8201-\
04227a8970be"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GetEigenvectors", "::", "usage"}], " ", "=", " ", 
  "\"\<GetEigenvectors[eqn,spectrum,Nmax]. Assumes that the list spectrum \
contains the eigenvalues of eqn \nusing a spectral basis of order N, and \
returns the corresponding eigenvectors.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetEigenvector", "::", "usage"}], " ", "=", " ", 
  "\"\<GetEigenvector[MList,\[Omega],normalization,prec]. Calculates the \
eigenvector of the eigenproblem (MList, \[Omega]), to machine precision prec.\
\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetEigenfunctions", "::", "usage"}], " ", "=", " ", 
  "\"\<GetEigenfunctions[eqn,spectrum,Nmax,var]. Calculates the \
eigenfunctions as a sum of Bernstein polynomials, from solving the \
eigenvectors of a list of eigenvalues.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompareEigenfunctions", "::", "usage"}], "=", 
  "\"\<CompareEigenfunctions[eqn,spectra,Nmaxes]. Compares the L2-norm of the \
difference between eigenfunctions as a test for convergence.\>\""}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.761807933908701*^9, 3.761807947479915*^9}, {
  3.761808018585588*^9, 3.761808116740611*^9}, {3.761808162129237*^9, 
  3.7618082774156017`*^9}, {3.7618083080812545`*^9, 3.7618083723703723`*^9}, {
  3.7618084029482985`*^9, 3.761808432792164*^9}, {3.766573799008918*^9, 
  3.766573804838285*^9}, {3.76657383872784*^9, 3.7665739951014433`*^9}, {
  3.7665741208412023`*^9, 3.766574158579886*^9}, {3.7668754280379677`*^9, 
  3.7668754670900292`*^9}, {3.7921974419876604`*^9, 3.7921974529148865`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"96420ae7-3cf1-4434-805e-ae15a65aca30"],

Cell[BoxData["\<\"GetEigenvectors[eqn,spectrum,Nmax]. Assumes that the list \
spectrum contains the eigenvalues of eqn \\nusing a spectral basis of order \
N, and returns the corresponding eigenvectors.\"\>"], "Output",
 CellChangeTimes->{
  3.7666302716211967`*^9, 3.766837786774121*^9, 3.7668398879791927`*^9, 
   3.766849451810131*^9, 3.766871190155308*^9, 3.766875245962607*^9, 
   3.7668753553060837`*^9, {3.7668754708641715`*^9, 3.766875472638221*^9}, 
   3.7668755246525736`*^9, 3.766875577121629*^9, 3.7668767447172904`*^9, 
   3.766883395977232*^9, 3.7668865562288895`*^9, 3.766886663102234*^9, 
   3.7669019580082293`*^9, {3.766901991464979*^9, 3.766901997381753*^9}, 
   3.766980401244116*^9, 3.766980962259554*^9, 3.7669823202882576`*^9, 
   3.767009770676626*^9, 3.790491381946906*^9, 3.7905569601003447`*^9, 
   3.7924170095914297`*^9, 3.793263065978485*^9, 3.793263155941572*^9, 
   3.793263290876155*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"47db8613-14a4-4ceb-86e3-4a7874aed6e9"],

Cell[BoxData["\<\"GetEigenvector[MList,\[Omega],normalization,prec]. \
Calculates the eigenvector of the eigenproblem (MList, \[Omega]), to machine \
precision prec.\"\>"], "Output",
 CellChangeTimes->{
  3.7666302716211967`*^9, 3.766837786774121*^9, 3.7668398879791927`*^9, 
   3.766849451810131*^9, 3.766871190155308*^9, 3.766875245962607*^9, 
   3.7668753553060837`*^9, {3.7668754708641715`*^9, 3.766875472638221*^9}, 
   3.7668755246525736`*^9, 3.766875577121629*^9, 3.7668767447172904`*^9, 
   3.766883395977232*^9, 3.7668865562288895`*^9, 3.766886663102234*^9, 
   3.7669019580082293`*^9, {3.766901991464979*^9, 3.766901997381753*^9}, 
   3.766980401244116*^9, 3.766980962259554*^9, 3.7669823202882576`*^9, 
   3.767009770676626*^9, 3.790491381946906*^9, 3.7905569601003447`*^9, 
   3.7924170095914297`*^9, 3.793263065978485*^9, 3.793263155941572*^9, 
   3.79326329088017*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9a6f3fdc-68ed-4641-ab8b-d7387fa0afd6"],

Cell[BoxData["\<\"GetEigenfunctions[eqn,spectrum,Nmax,var]. Calculates the \
eigenfunctions as a sum of Bernstein polynomials, from solving the \
eigenvectors of a list of eigenvalues.\"\>"], "Output",
 CellChangeTimes->{
  3.7666302716211967`*^9, 3.766837786774121*^9, 3.7668398879791927`*^9, 
   3.766849451810131*^9, 3.766871190155308*^9, 3.766875245962607*^9, 
   3.7668753553060837`*^9, {3.7668754708641715`*^9, 3.766875472638221*^9}, 
   3.7668755246525736`*^9, 3.766875577121629*^9, 3.7668767447172904`*^9, 
   3.766883395977232*^9, 3.7668865562288895`*^9, 3.766886663102234*^9, 
   3.7669019580082293`*^9, {3.766901991464979*^9, 3.766901997381753*^9}, 
   3.766980401244116*^9, 3.766980962259554*^9, 3.7669823202882576`*^9, 
   3.767009770676626*^9, 3.790491381946906*^9, 3.7905569601003447`*^9, 
   3.7924170095914297`*^9, 3.793263065978485*^9, 3.793263155941572*^9, 
   3.7932632908851314`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"23e2166f-23e2-4db5-aaa7-6a582672930e"],

Cell[BoxData["\<\"CompareEigenfunctions[eqn,spectra,Nmaxes]. Compares the \
L2-norm of the difference between eigenfunctions as a test for convergence.\"\
\>"], "Output",
 CellChangeTimes->{
  3.7666302716211967`*^9, 3.766837786774121*^9, 3.7668398879791927`*^9, 
   3.766849451810131*^9, 3.766871190155308*^9, 3.766875245962607*^9, 
   3.7668753553060837`*^9, {3.7668754708641715`*^9, 3.766875472638221*^9}, 
   3.7668755246525736`*^9, 3.766875577121629*^9, 3.7668767447172904`*^9, 
   3.766883395977232*^9, 3.7668865562288895`*^9, 3.766886663102234*^9, 
   3.7669019580082293`*^9, {3.766901991464979*^9, 3.766901997381753*^9}, 
   3.766980401244116*^9, 3.766980962259554*^9, 3.7669823202882576`*^9, 
   3.767009770676626*^9, 3.790491381946906*^9, 3.7905569601003447`*^9, 
   3.7924170095914297`*^9, 3.793263065978485*^9, 3.793263155941572*^9, 
   3.79326329088815*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"321f86cd-3b25-4848-85b6-15e01f1ee4b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintAll", "::", "usage"}], " ", "=", " ", 
  "\"\<PrintAll[eqn,{eigenhigh,eigenlow},N]. Prints a frequency plot in the \
complex plane, a table of frequencies common to both eigenhigh and eigenlow,\n\
 and plot of corresponding eigenfunctions.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintFrequencies", "::", "usage"}], " ", "=", " ", 
  "\"\<PrintFrequencies[spectrum]. Prints a frequency plot in the complex \
plane.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintTable", "::", "usage"}], " ", "=", " ", 
  "\"\<PrintTable[{eigenhigh,eigenlow}]. Prints a table of frequencies common \
to both eigenhigh and eigenlow, keeping the digits that they agree in.\n\
Separates damped and overdamped modes.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintEigenfunctions", "::", "usage"}], " ", "=", " ", 
  "\"\<PrintEigenfunctions[eqn,spectrum,N]. Assumes that the list spectrum \
contains the eigenvalues of eqn \nusing a spectral basis of order N. Returns \
a plot of the real and imaginary parts of the corresponding eigenfunctions.\>\
\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CleanDigits", "::", "usage"}], " ", "=", " ", 
  "\"\<CleanDigits[\[Omega]test,\[Omega]ref]. Returns the eigenvalue \
\[Omega]test to the precision that it shares the most digits of some \
eigenvalue in \[Omega]ref.\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7618086100857716`*^9, 3.7618089357904067`*^9}, {
  3.766574237557514*^9, 3.7665744338790693`*^9}, {3.766575175982936*^9, 
  3.766575175998558*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"52b83ac6-e2f9-430b-8a92-fbaef1b932aa"],

Cell[BoxData["\<\"PrintAll[eqn,{eigenhigh,eigenlow},N]. Prints a frequency \
plot in the complex plane, a table of frequencies common to both eigenhigh \
and eigenlow,\\n and plot of corresponding eigenfunctions.\"\>"], "Output",
 CellChangeTimes->{
  3.76663027167457*^9, 3.766837786841578*^9, 3.766839888003496*^9, 
   3.7668494518721294`*^9, 3.766871190222765*^9, 3.7668752460305595`*^9, 
   3.7668753553785*^9, 3.7668754709246845`*^9, 3.7668755247111015`*^9, 
   3.76687557722678*^9, 3.7668767447837543`*^9, 3.7668833960496483`*^9, 
   3.766886556295817*^9, 3.766886663181097*^9, 3.7669019581178455`*^9, {
   3.766901991599887*^9, 3.7669019974854193`*^9}, 3.7669804013191957`*^9, 
   3.766980962422241*^9, 3.766982320381505*^9, 3.767009770728181*^9, 
   3.7904913820222993`*^9, 3.790556960204067*^9, 3.792417009654369*^9, 
   3.7932630660275307`*^9, 3.7932631559854236`*^9, 3.7932632909170465`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"64545b22-41e3-41e1-9bf7-595f4b17d7f1"],

Cell[BoxData["\<\"PrintFrequencies[spectrum]. Prints a frequency plot in the \
complex plane.\"\>"], "Output",
 CellChangeTimes->{
  3.76663027167457*^9, 3.766837786841578*^9, 3.766839888003496*^9, 
   3.7668494518721294`*^9, 3.766871190222765*^9, 3.7668752460305595`*^9, 
   3.7668753553785*^9, 3.7668754709246845`*^9, 3.7668755247111015`*^9, 
   3.76687557722678*^9, 3.7668767447837543`*^9, 3.7668833960496483`*^9, 
   3.766886556295817*^9, 3.766886663181097*^9, 3.7669019581178455`*^9, {
   3.766901991599887*^9, 3.7669019974854193`*^9}, 3.7669804013191957`*^9, 
   3.766980962422241*^9, 3.766982320381505*^9, 3.767009770728181*^9, 
   3.7904913820222993`*^9, 3.790556960204067*^9, 3.792417009654369*^9, 
   3.7932630660275307`*^9, 3.7932631559854236`*^9, 3.793263290921036*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"61a225de-c00f-43ea-a6c4-cb0822e2f577"],

Cell[BoxData["\<\"PrintTable[{eigenhigh,eigenlow}]. Prints a table of \
frequencies common to both eigenhigh and eigenlow, keeping the digits that \
they agree in.\\nSeparates damped and overdamped modes.\"\>"], "Output",
 CellChangeTimes->{
  3.76663027167457*^9, 3.766837786841578*^9, 3.766839888003496*^9, 
   3.7668494518721294`*^9, 3.766871190222765*^9, 3.7668752460305595`*^9, 
   3.7668753553785*^9, 3.7668754709246845`*^9, 3.7668755247111015`*^9, 
   3.76687557722678*^9, 3.7668767447837543`*^9, 3.7668833960496483`*^9, 
   3.766886556295817*^9, 3.766886663181097*^9, 3.7669019581178455`*^9, {
   3.766901991599887*^9, 3.7669019974854193`*^9}, 3.7669804013191957`*^9, 
   3.766980962422241*^9, 3.766982320381505*^9, 3.767009770728181*^9, 
   3.7904913820222993`*^9, 3.790556960204067*^9, 3.792417009654369*^9, 
   3.7932630660275307`*^9, 3.7932631559854236`*^9, 3.7932632909260206`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d7a54e86-e24c-435b-b738-19adb4234176"],

Cell[BoxData["\<\"PrintEigenfunctions[eqn,spectrum,N]. Assumes that the list \
spectrum contains the eigenvalues of eqn \\nusing a spectral basis of order \
N. Returns a plot of the real and imaginary parts of the corresponding \
eigenfunctions.\"\>"], "Output",
 CellChangeTimes->{
  3.76663027167457*^9, 3.766837786841578*^9, 3.766839888003496*^9, 
   3.7668494518721294`*^9, 3.766871190222765*^9, 3.7668752460305595`*^9, 
   3.7668753553785*^9, 3.7668754709246845`*^9, 3.7668755247111015`*^9, 
   3.76687557722678*^9, 3.7668767447837543`*^9, 3.7668833960496483`*^9, 
   3.766886556295817*^9, 3.766886663181097*^9, 3.7669019581178455`*^9, {
   3.766901991599887*^9, 3.7669019974854193`*^9}, 3.7669804013191957`*^9, 
   3.766980962422241*^9, 3.766982320381505*^9, 3.767009770728181*^9, 
   3.7904913820222993`*^9, 3.790556960204067*^9, 3.792417009654369*^9, 
   3.7932630660275307`*^9, 3.7932631559854236`*^9, 3.793263290929452*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"fe3c309a-cb80-458f-ab3b-404c845cac83"],

Cell[BoxData["\<\"CleanDigits[\[Omega]test,\[Omega]ref]. Returns the \
eigenvalue \[Omega]test to the precision that it shares the most digits of \
some eigenvalue in \[Omega]ref.\"\>"], "Output",
 CellChangeTimes->{
  3.76663027167457*^9, 3.766837786841578*^9, 3.766839888003496*^9, 
   3.7668494518721294`*^9, 3.766871190222765*^9, 3.7668752460305595`*^9, 
   3.7668753553785*^9, 3.7668754709246845`*^9, 3.7668755247111015`*^9, 
   3.76687557722678*^9, 3.7668767447837543`*^9, 3.7668833960496483`*^9, 
   3.766886556295817*^9, 3.766886663181097*^9, 3.7669019581178455`*^9, {
   3.766901991599887*^9, 3.7669019974854193`*^9}, 3.7669804013191957`*^9, 
   3.766980962422241*^9, 3.766982320381505*^9, 3.767009770728181*^9, 
   3.7904913820222993`*^9, 3.790556960204067*^9, 3.792417009654369*^9, 
   3.7932630660275307`*^9, 3.7932631559854236`*^9, 3.7932632909330025`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"fea95aab-7982-4c23-aba8-a3472f753fc8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error handling", "Subsubsection",
 CellChangeTimes->{{3.761445278890586*^9, 3.7614452867878103`*^9}, 
   3.7618533881867895`*^9},ExpressionUUID->"e76cdf6b-1792-426f-bf50-\
92dc05a5ef97"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ThrowAbort", "::", "usage"}], " ", "=", " ", 
  "\"\<ThrowAbort[message,args].\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CatchAbort", "::", "usage"}], " ", "=", " ", 
  "\"\<CatchAbort[exp].\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7614452927215853`*^9, 3.761445350669321*^9}, {
  3.7665744470389695`*^9, 3.766574462009471*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"f36e81bf-b4d5-428c-aab5-f88496834682"],

Cell[BoxData["\<\"ThrowAbort[message,args].\"\>"], "Output",
 CellChangeTimes->{
  3.7666302717214346`*^9, 3.7668377868996096`*^9, 3.7668398880347123`*^9, 
   3.7668494519460335`*^9, 3.766871190292202*^9, 3.766875246113887*^9, 
   3.766875355449924*^9, 3.7668754709916706`*^9, 3.7668755247730813`*^9, 
   3.766875577317547*^9, 3.7668767448561707`*^9, 3.7668833961265287`*^9, 
   3.766886556373224*^9, 3.766886663265417*^9, 3.766901958269125*^9, {
   3.7669019919535356`*^9, 3.766901997593048*^9}, 3.766980401377228*^9, 
   3.7669809625715494`*^9, 3.766982320464834*^9, 3.76700977077927*^9, 
   3.790491382119548*^9, 3.790556960313774*^9, 3.7924170097282724`*^9, 
   3.7932630660797772`*^9, 3.793263156029607*^9, 3.793263291076248*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"21b88af3-1576-450b-9e3f-f9d9d8226bd0"],

Cell[BoxData["\<\"CatchAbort[exp].\"\>"], "Output",
 CellChangeTimes->{
  3.7666302717214346`*^9, 3.7668377868996096`*^9, 3.7668398880347123`*^9, 
   3.7668494519460335`*^9, 3.766871190292202*^9, 3.766875246113887*^9, 
   3.766875355449924*^9, 3.7668754709916706`*^9, 3.7668755247730813`*^9, 
   3.766875577317547*^9, 3.7668767448561707`*^9, 3.7668833961265287`*^9, 
   3.766886556373224*^9, 3.766886663265417*^9, 3.766901958269125*^9, {
   3.7669019919535356`*^9, 3.766901997593048*^9}, 3.766980401377228*^9, 
   3.7669809625715494`*^9, 3.766982320464834*^9, 3.76700977077927*^9, 
   3.790491382119548*^9, 3.790556960313774*^9, 3.7924170097282724`*^9, 
   3.7932630660797772`*^9, 3.793263156029607*^9, 3.7932632910812006`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"f96ca994-b407-4c55-8142-3d7ddadf480a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Global variables", "Subsection",
 CellChangeTimes->{{3.760415803648546*^9, 
  3.760415806830267*^9}},ExpressionUUID->"14431fc1-2e2a-430a-ae65-\
719e32909d6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7605072310172157`*^9, 3.7605072437036734`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"3252c71e-b011-419e-880c-9035380a8c55"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculations", "Chapter",
 CellChangeTimes->{{3.7605062478037047`*^9, 3.760506260536406*^9}, {
  3.7605062988028445`*^9, 3.7605063243480363`*^9}, {3.7605070865502653`*^9, 
  3.7605070947617683`*^9}},ExpressionUUID->"4067eb94-9949-4a42-8e39-\
09a8960e6e8f"],

Cell[CellGroupData[{

Cell["Processing methods", "Section",
 CellChangeTimes->{{3.760506380567328*^9, 3.7605063857346673`*^9}, {
  3.7605064464547005`*^9, 3.760506507151002*^9}, {3.760587325909015*^9, 
  3.7605873277292314`*^9}},ExpressionUUID->"53d2a1a5-ba84-4d30-8a6e-\
924f5c6a2c92"],

Cell["\<\
In this section, we break down the equation so that it may converted into a \
matrix eigenproblem. Current things to do: (1) make it accept a coupled set \
of ODE\[CloseCurlyQuote]s (2) make it accept non-polynomial type coefficient \
functions (3) make it accept numerical backgrounds.\
\>", "Text",
 CellChangeTimes->{{3.7605065133295*^9, 3.7605065810349884`*^9}, {
  3.760506644322522*^9, 3.760506707028924*^9}, {3.7605071095981817`*^9, 
  3.7605071249230433`*^9}},ExpressionUUID->"bd62bfeb-0cce-40c4-9ebc-\
94a58d20c3e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"02", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DeconstructEquation", "[", 
     RowBox[{"equation_List", ",", "Nmax_", ",", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{"BoundaryOptions", ",", "NumericalOptions"}], "}"}], 
        "]"}]}]}], "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eqn", ",", "funclist", ",", "f", ",", "fVector", ",", "var", ",", 
        "\[Omega]", ",", "\[Omega]max", ",", "dermax", ",", "funcmax", ",", 
        "\[Omega]coefficients", ",", "dercoefficients", ",", "MList", ",", 
        "DerMatrices", ",", "ulb", ",", "uub", ",", "testlist", ",", 
        RowBox[{"prec", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}], " ", 
            "\[Equal]", " ", "0"}], ",", " ", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"2", "*", "Nmax"}], ",", "$MinPrecision"}], "]"}], ",", 
           " ", 
           RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}]}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"method", "=", 
         RowBox[{"OptionValue", "[", "CollocationGrid", "]"}]}], ",", 
        RowBox[{"lbpower", "=", 
         RowBox[{"OptionValue", "[", "LBPower", "]"}]}], ",", 
        RowBox[{"ubpower", "=", 
         RowBox[{"OptionValue", "[", "UBPower", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ulb", " ", "=", " ", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "LowerBound", "]"}], ",", "prec"}], 
         "]"}]}], ";", 
       RowBox[{"uub", "=", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "UpperBound", "]"}], ",", "prec"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqn", " ", "=", " ", 
        RowBox[{"Expand", "@", "equation"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"find", " ", "independent", " ", "variable"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"testlist", " ", "=", " ", 
        RowBox[{"Union", "[", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"eqn", ",", 
            RowBox[{
             RowBox[{"\[Phi]_Symbol", "[", "u_Symbol", "]"}], "\[Rule]", " ", 
             "u"}], ",", " ", "\[Infinity]"}], "]"}], ",", 
          RowBox[{"Cases", "[", 
           RowBox[{"eqn", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "n_", "]"}], "[", "\[Phi]_Symbol", 
               "]"}], "[", "u_Symbol", "]"}], "\[Rule]", " ", "u"}], ",", 
            "\[Infinity]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], "<", "1"}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{"DeconstructEquation", "::", "novariables"}], "]"}], ";"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], ">", "1"}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{
            RowBox[{"DeconstructEquation", "::", "manyvariables"}], ",", 
            "testlist"}], "]"}], ";"}], ",", "\[IndentingNewLine]", "True", 
         ",", 
         RowBox[{
          RowBox[{"var", " ", "=", " ", 
           RowBox[{"Last", "@", "testlist"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"find", " ", "eigenvariable"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"testlist", " ", "=", " ", 
        RowBox[{
         RowBox[{"Union", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"eqn", ",", " ", "_Symbol", ",", " ", "\[Infinity]"}], 
           "]"}], "]"}], " ", "//", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"#", ",", "var"}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], "<", "1"}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{"DeconstructEquation", "::", "noeigenvalues"}], "]"}], 
          ";"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], ">", "1"}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{
            RowBox[{"DeconstructEquation", "::", "manyeigenvalues"}], ",", 
            "testlist"}], "]"}], ";"}], ",", "\[IndentingNewLine]", "True", 
         ",", " ", 
         RowBox[{
          RowBox[{"\[Omega]", " ", "=", " ", 
           RowBox[{"Last", "@", "testlist"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"find", " ", "dependent", " ", "functions"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"testlist", " ", "=", "  ", 
        RowBox[{"Union", "[", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"eqn", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Phi]_Symbol", "[", "var", "]"}], "/;", 
              RowBox[{
               RowBox[{"Context", "[", "\[Phi]", "]"}], "\[NotEqual]", " ", 
               "\"\<System`\>\""}]}], "\[Rule]", "  ", "\[Phi]"}], ",", 
            "\[Infinity]"}], "]"}], ",", 
          RowBox[{"Cases", "[", 
           RowBox[{"eqn", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "n_", "]"}], "[", "\[Phi]_Symbol", 
               "]"}], "[", "var", "]"}], "\[Rule]", " ", "\[Phi]"}], ",", 
            "\[Infinity]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], "<", 
          RowBox[{"Length", "[", "eqn", "]"}]}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{
            RowBox[{"DeconstructEquation", "::", "underdetermined"}], ",", 
            "testlist", ",", 
            RowBox[{"Length", "[", "eqn", "]"}]}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], ">", 
          RowBox[{"Length", "[", "eqn", "]"}]}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{
            RowBox[{"DeconstructEquation", "::", "overdetermined"}], ",", 
            "testlist", ",", 
            RowBox[{"Length", "[", "eqn", "]"}]}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", "True", ",", " ", 
         RowBox[{
          RowBox[{"funclist", " ", "=", " ", "testlist"}], ";"}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"funcmax", " ", "=", " ", 
        RowBox[{"Length", "[", "funclist", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Omega]max", " ", "=", " ", 
        RowBox[{"Max", "@", 
         RowBox[{"Cases", "[", 
          RowBox[{"eqn", ",", 
           RowBox[{
            SuperscriptBox["\[Omega]", 
             RowBox[{"n_:", "1"}]], "\[Rule]", "n"}], ",", "\[Infinity]"}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dermax", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{"eqn", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Derivative", "[", "n_", "]"}], "[", "#", "]"}], 
                 "[", "var", "]"}], "\[Rule]", "n"}], ",", "\[Infinity]"}], 
              "]"}], "&"}], "/@", "funclist"}], "//", "Max"}], ")"}], "/.", 
         RowBox[{
          RowBox[{"-", "Infinity"}], "\[Rule]", "0"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\[Omega]coefficients", " ", "=", " ", 
        RowBox[{"CoefficientList", "[", 
         RowBox[{"eqn", ",", "\[Omega]", ",", 
          RowBox[{"\[Omega]max", "+", "1"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dercoefficients", " ", "=", " ", 
        RowBox[{"CatchAbort", "[", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"FuncToVector", "[", 
            RowBox[{
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{"\[Omega]coefficients", "\[LeftDoubleBracket]", 
                RowBox[{"eqnindex", ",", "\[Omega]index"}], 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Derivative", "[", "derindex", "]"}], "[", 
                 RowBox[{
                 "funclist", "\[LeftDoubleBracket]", "funcindex", 
                  "\[RightDoubleBracket]"}], "]"}], "[", "var", "]"}]}], 
              "]"}], ",", "var", ",", "Nmax", ",", "ulb", ",", "uub", ",", 
             "lbpower", ",", "ubpower", ",", "method", ",", "prec"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"eqnindex", ",", "funcmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"funcindex", ",", "funcmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]index", ",", 
             RowBox[{"\[Omega]max", "+", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"derindex", ",", "0", ",", "dermax"}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"DerMatrices", " ", "=", 
        RowBox[{"CatchAbort", "[", "\[IndentingNewLine]", 
         RowBox[{"GetDerMatrices", "[", 
          RowBox[{
          "Nmax", ",", " ", "dermax", ",", "lbpower", ",", "ubpower", ",", 
           "method", ",", 
           RowBox[{"(", 
            RowBox[{"uub", "-", "ulb"}], ")"}], ",", "prec"}], "]"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"MList", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Sum", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Switch", "[", 
             RowBox[{
              RowBox[{"dercoefficients", "\[LeftDoubleBracket]", 
               RowBox[{
               "eqnindex", ",", "funcindex", ",", "\[Omega]index", ",", 
                "derindex"}], "\[RightDoubleBracket]"}], ",", 
              "\[IndentingNewLine]", "0", ",", "0", ",", 
              "\[IndentingNewLine]", "_", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"dercoefficients", "\[LeftDoubleBracket]", 
                  RowBox[{
                  "eqnindex", ",", "funcindex", ",", "\[Omega]index", ",", 
                   "derindex", ",", 
                   RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "*", 
                 
                 RowBox[{"DerMatrices", "\[LeftDoubleBracket]", 
                  RowBox[{"derindex", ",", 
                   RowBox[{"j", "+", "1"}], ",", 
                   RowBox[{"k", "+", "1"}]}], "\[RightDoubleBracket]"}]}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "0", ",", "Nmax"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"derindex", ",", 
              RowBox[{"dermax", "+", "1"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"eqnindex", ",", "funcmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"funcindex", ",", "funcmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]index", ",", 
            RowBox[{"\[Omega]max", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "MList"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DeconstructEquation", "[", 
     RowBox[{"equation_", ",", "Nmax_", ",", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{"BoundaryOptions", ",", "NumericalOptions"}], "}"}], 
        "]"}]}]}], "]"}], ":=", 
    RowBox[{"DeconstructEquation", "[", 
     RowBox[{
      RowBox[{"{", "equation", "}"}], ",", "Nmax", ",", "opts"}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7605071305734377`*^9, 3.7605071766654735`*^9}, {
   3.760507308091061*^9, 3.7605074144086056`*^9}, {3.760507450391794*^9, 
   3.7605075897517014`*^9}, {3.760507709347789*^9, 3.7605077492713585`*^9}, {
   3.7605078931653996`*^9, 3.76050794620221*^9}, {3.760508197835288*^9, 
   3.760508201736725*^9}, 3.7605082375915017`*^9, {3.7605082755380983`*^9, 
   3.760508350805087*^9}, {3.7605085747943935`*^9, 3.7605085850078297`*^9}, {
   3.76050871024407*^9, 3.7605087124647923`*^9}, {3.760508893142378*^9, 
   3.760508971039713*^9}, {3.7605091065407705`*^9, 3.7605092038878016`*^9}, {
   3.760509311780097*^9, 3.760509312233321*^9}, {3.760509354927404*^9, 
   3.7605094033469567`*^9}, {3.760509433710168*^9, 3.7605094596276736`*^9}, {
   3.760509496058609*^9, 3.7605095202503357`*^9}, {3.760509755481698*^9, 
   3.7605097588846564`*^9}, {3.760509968508314*^9, 3.760510011969859*^9}, {
   3.7605100585852585`*^9, 3.7605100603348155`*^9}, {3.7605101774042583`*^9, 
   3.760510419638666*^9}, {3.760510507138539*^9, 3.760510567577944*^9}, {
   3.7605111006934214`*^9, 3.760511135275504*^9}, {3.760511211045385*^9, 
   3.760511421806617*^9}, {3.760511494842754*^9, 3.760511503282479*^9}, {
   3.760511551467964*^9, 3.7605115623192987`*^9}, {3.7605116167974205`*^9, 
   3.7605116427033367`*^9}, {3.7605118773510494`*^9, 3.76051190788736*^9}, 
   3.7605119400586667`*^9, {3.760512017257556*^9, 3.760512032712228*^9}, {
   3.760512111079768*^9, 3.760512131841408*^9}, {3.7605122059368963`*^9, 
   3.7605122061972814`*^9}, {3.7605123394212413`*^9, 3.760512392024479*^9}, {
   3.7605124468212957`*^9, 3.7605125428191013`*^9}, {3.7605126242241845`*^9, 
   3.760512638781122*^9}, {3.7605135770633793`*^9, 3.760513662656521*^9}, {
   3.7605137033928795`*^9, 3.7605137076126475`*^9}, {3.760513760100876*^9, 
   3.7605137653593693`*^9}, {3.7605138358366528`*^9, 3.760513855331987*^9}, {
   3.7605139073597145`*^9, 3.760513942702474*^9}, {3.7605140672986317`*^9, 
   3.760514090421322*^9}, {3.760838532087802*^9, 3.7608385848459945`*^9}, {
   3.7608386528665485`*^9, 3.7608386765571747`*^9}, {3.760838992047846*^9, 
   3.760839102441679*^9}, {3.76083942081308*^9, 3.760839423030616*^9}, {
   3.7608399773457465`*^9, 3.760840004828557*^9}, 3.7608400438356824`*^9, {
   3.7608404058744574`*^9, 3.760840410388382*^9}, {3.7608404657032657`*^9, 
   3.7608404778128743`*^9}, {3.7608405620644865`*^9, 
   3.7608406970543756`*^9}, {3.7608420159226856`*^9, 
   3.7608420190423393`*^9}, {3.7608421502259827`*^9, 3.760842238564177*^9}, 
   3.7608423970290236`*^9, {3.760842586847891*^9, 3.7608425869473157`*^9}, {
   3.7608453783033524`*^9, 3.760845439162511*^9}, 3.760846787714517*^9, {
   3.760855013588627*^9, 3.760855084549029*^9}, {3.760855179716465*^9, 
   3.760855183054916*^9}, {3.760855222552888*^9, 3.760855247849246*^9}, 
   3.7608558653068438`*^9, {3.7608578243479786`*^9, 3.7608578282548494`*^9}, {
   3.760926582053034*^9, 3.760926614756548*^9}, {3.7609266492772284`*^9, 
   3.7609267232592907`*^9}, {3.7609270617848845`*^9, 3.760927082220215*^9}, {
   3.760927120841707*^9, 3.7609271315171833`*^9}, {3.7609274313062754`*^9, 
   3.7609274482030764`*^9}, {3.7609276654361916`*^9, 3.760927665714447*^9}, {
   3.7609286068545027`*^9, 3.7609286330234776`*^9}, {3.760928754459618*^9, 
   3.7609287578635097`*^9}, {3.760928822361968*^9, 3.7609288477540417`*^9}, {
   3.760929274353485*^9, 3.760929274668642*^9}, {3.760929533392524*^9, 
   3.760929547355174*^9}, {3.7609296639382997`*^9, 3.7609296814225254`*^9}, 
   3.760930067050488*^9, {3.760930309272317*^9, 3.760930343548625*^9}, {
   3.7609304356372757`*^9, 3.760930448652459*^9}, 3.760930728684373*^9, 
   3.7609308970280027`*^9, {3.76093100182768*^9, 3.7609310062678003`*^9}, {
   3.7609310686109943`*^9, 3.760931072988284*^9}, 3.7609332318011894`*^9, {
   3.7609336265493374`*^9, 3.7609336303940225`*^9}, {3.760933944551612*^9, 
   3.7609340089862423`*^9}, {3.760935689598399*^9, 3.7609357111776724`*^9}, 
   3.760935768650967*^9, {3.7609373882551646`*^9, 3.7609374251783924`*^9}, {
   3.7609374664898777`*^9, 3.7609374915438538`*^9}, {3.7609375577597203`*^9, 
   3.760937620106964*^9}, {3.7609378181960187`*^9, 3.76093786050883*^9}, {
   3.7609379052072563`*^9, 3.7609379445918956`*^9}, {3.76093919991734*^9, 
   3.7609392031696434`*^9}, {3.760939674940596*^9, 3.7609396751091433`*^9}, {
   3.760941886613125*^9, 3.760941886768707*^9}, {3.7609536763706684`*^9, 
   3.7609537085117283`*^9}, {3.760956771554326*^9, 3.7609567958885717`*^9}, {
   3.7609583325231404`*^9, 3.7609583379912095`*^9}, {3.760958369224448*^9, 
   3.760958385174887*^9}, {3.7609584292411046`*^9, 3.7609584331709156`*^9}, {
   3.760958538511673*^9, 3.7609586302851667`*^9}, {3.760958707224074*^9, 
   3.7609587231295276`*^9}, {3.7609590789431744`*^9, 3.760959083729056*^9}, 
   3.760963754987327*^9, {3.760967544345724*^9, 3.7609675444813614`*^9}, {
   3.7609988481307383`*^9, 3.760998971768467*^9}, {3.7609990073526487`*^9, 
   3.760999011269352*^9}, {3.761000905955449*^9, 3.7610009393191943`*^9}, {
   3.7610152578196926`*^9, 3.761015288928218*^9}, {3.761015362661807*^9, 
   3.761015366875856*^9}, {3.761173535138077*^9, 3.7611735397112455`*^9}, {
   3.761216561799449*^9, 3.761216562956354*^9}, {3.7612172686677895`*^9, 
   3.7612172688213477`*^9}, {3.7612215976174355`*^9, 3.761221597760688*^9}, {
   3.76122297474642*^9, 3.761222974926236*^9}, {3.7612255257920675`*^9, 
   3.761225525954208*^9}, {3.761225683384142*^9, 3.761225683533208*^9}, {
   3.761225919371533*^9, 3.761225931710574*^9}, {3.7612259785464563`*^9, 
   3.7612260787354727`*^9}, {3.7612261094719505`*^9, 
   3.7612261126154146`*^9}, {3.76122618627763*^9, 3.7612261876295743`*^9}, {
   3.761226494131132*^9, 3.7612264943122296`*^9}, {3.7612266647886763`*^9, 
   3.7612266650685253`*^9}, {3.7612269229672112`*^9, 3.761226923892068*^9}, {
   3.761227124053991*^9, 3.761227124380339*^9}, {3.761227311627122*^9, 
   3.7612273120471506`*^9}, {3.7612275067642665`*^9, 
   3.7612275072133226`*^9}, {3.7612277302019067`*^9, 
   3.7612277311036577`*^9}, {3.7612281214160643`*^9, 3.76122812156305*^9}, {
   3.7612285240252695`*^9, 3.7612285241691875`*^9}, {3.7612310743745413`*^9, 
   3.7612310746246276`*^9}, {3.761231956543702*^9, 3.7612319566685333`*^9}, {
   3.7612331242334957`*^9, 3.761233124639639*^9}, {3.7612367369040685`*^9, 
   3.761236737341465*^9}, {3.761237615944632*^9, 3.7612376161686826`*^9}, {
   3.761237766599429*^9, 3.7612378071422367`*^9}, {3.7612379270648155`*^9, 
   3.7612379401585913`*^9}, 3.76123821125278*^9, {3.7612781637365026`*^9, 
   3.7612782227719173`*^9}, {3.761310920399017*^9, 3.761310925152393*^9}, {
   3.7613113218402247`*^9, 3.7613113242135344`*^9}, {3.761311383518917*^9, 
   3.761311389280741*^9}, {3.7613119295387707`*^9, 3.7613119460276885`*^9}, {
   3.7613121852757397`*^9, 3.761312192632063*^9}, {3.7613122594769387`*^9, 
   3.761312259824011*^9}, {3.7613646007662687`*^9, 3.761364602833099*^9}, {
   3.761364708487928*^9, 3.7613647438703146`*^9}, {3.76136528815864*^9, 
   3.7613653051740055`*^9}, {3.761365391559524*^9, 3.761365429697627*^9}, {
   3.7613665021403646`*^9, 3.7613665560362077`*^9}, {3.761387055307186*^9, 
   3.761387101269478*^9}, {3.7613879868864994`*^9, 3.761387987543782*^9}, {
   3.761428266556103*^9, 3.7614284128652015`*^9}, {3.761430655295049*^9, 
   3.76143071097244*^9}, {3.7614307855869584`*^9, 3.761430957880088*^9}, {
   3.761431029451233*^9, 3.761431030005839*^9}, {3.7614310620141306`*^9, 
   3.7614310913261642`*^9}, {3.761431127303587*^9, 3.761431149453652*^9}, {
   3.761431183049942*^9, 3.7614312190104837`*^9}, {3.761431490324085*^9, 
   3.761431521006873*^9}, 3.7614316929142714`*^9, {3.761432442101051*^9, 
   3.7614324493290343`*^9}, {3.7614324796519585`*^9, 
   3.7614325418339643`*^9}, {3.761432638130011*^9, 3.761432681417021*^9}, {
   3.761432715945758*^9, 3.761432718622528*^9}, {3.761433187456453*^9, 
   3.7614331912676744`*^9}, {3.76143323997148*^9, 3.761433351577855*^9}, {
   3.7614335261776543`*^9, 3.7614335747082405`*^9}, {3.7614336808052783`*^9, 
   3.7614337318912773`*^9}, {3.7614387874857564`*^9, 3.761438793124099*^9}, {
   3.761438932137396*^9, 3.761438934581164*^9}, {3.7614389830687*^9, 
   3.7614391588918757`*^9}, {3.7614391939663787`*^9, 3.761439337414113*^9}, {
   3.761439410920113*^9, 3.761439515214501*^9}, {3.7614396152904243`*^9, 
   3.7614398150529337`*^9}, {3.7614403509143686`*^9, 3.761440351456914*^9}, {
   3.761440403404443*^9, 3.7614404109555798`*^9}, {3.7614404930697665`*^9, 
   3.7614405099909573`*^9}, {3.761440660305608*^9, 3.7614406664059377`*^9}, {
   3.7614409689672117`*^9, 3.7614409714836535`*^9}, {3.7614411469984035`*^9, 
   3.761441148895515*^9}, {3.7614412557655888`*^9, 3.761441256074442*^9}, {
   3.761441430305482*^9, 3.7614414441870832`*^9}, {3.7614419423172927`*^9, 
   3.7614419445990105`*^9}, {3.7614420317855844`*^9, 3.761442032292264*^9}, {
   3.7614420861643066`*^9, 3.761442109147765*^9}, {3.7614421694636717`*^9, 
   3.761442173141592*^9}, {3.7614425640517817`*^9, 3.7614425993071055`*^9}, {
   3.761442805006547*^9, 3.7614428257200956`*^9}, {3.7614428709308677`*^9, 
   3.76144287343878*^9}, {3.761443030789697*^9, 3.7614430462848005`*^9}, {
   3.7614444147019672`*^9, 3.7614444329976673`*^9}, {3.761489297125537*^9, 
   3.761489307421328*^9}, {3.761847662218302*^9, 3.76184766798814*^9}, {
   3.7618496490523734`*^9, 3.761849651267536*^9}, {3.7618497471101794`*^9, 
   3.761849748956783*^9}, 3.761851330794072*^9, {3.764996721074999*^9, 
   3.764996751856533*^9}, {3.764996823254732*^9, 3.764996834383881*^9}, {
   3.7649982930058355`*^9, 3.7649983147020764`*^9}, {3.7649984046250896`*^9, 
   3.764998416745946*^9}, {3.765003133571111*^9, 3.7650031343420916`*^9}, {
   3.765004282251667*^9, 3.765004298415744*^9}, {3.765413356885887*^9, 
   3.765413467774376*^9}, {3.765413917747986*^9, 3.765414046518321*^9}, {
   3.765414092242058*^9, 3.765414256471225*^9}, {3.765414570097617*^9, 
   3.7654146748895426`*^9}, {3.765414724248556*^9, 3.7654147304828863`*^9}, {
   3.7654149210388927`*^9, 3.765414924927493*^9}, {3.7654151923118253`*^9, 
   3.7654151947587547`*^9}, {3.7654169648815937`*^9, 
   3.7654170004614544`*^9}, {3.7654184529262953`*^9, 3.765418566547474*^9}, {
   3.765418694269947*^9, 3.765418743256954*^9}, 3.765418816685608*^9, {
   3.7654189102982893`*^9, 3.76541891109416*^9}, {3.765419022225997*^9, 
   3.7654190675588093`*^9}, {3.765419179382761*^9, 3.765419181091192*^9}, {
   3.765419898686285*^9, 3.7654199407109146`*^9}, {3.765420184025226*^9, 
   3.7654201916059556`*^9}, {3.7654202738539023`*^9, 3.76542028160717*^9}, {
   3.7654244308496914`*^9, 3.765424438416461*^9}, {3.765426853331251*^9, 
   3.765426909836157*^9}, {3.7654269972364507`*^9, 3.7654269996390257`*^9}, {
   3.765428184570918*^9, 3.7654281873584633`*^9}, {3.7654285172383995`*^9, 
   3.7654285201455956`*^9}, 3.7654285843110175`*^9, {3.7660947747232513`*^9, 
   3.7660947748858433`*^9}, {3.7660948310427065`*^9, 
   3.7660948727960443`*^9}, {3.7660950151564617`*^9, 3.766095085054548*^9}, {
   3.766095186654908*^9, 3.7660951879354844`*^9}, {3.7660956872179766`*^9, 
   3.7660956939130764`*^9}, {3.766095758764688*^9, 3.76609582695241*^9}, {
   3.766095920492301*^9, 3.7660959646612053`*^9}, {3.7661077529320188`*^9, 
   3.7661078708737173`*^9}, {3.7661081757270956`*^9, 3.766108179018268*^9}, {
   3.7661083304853044`*^9, 3.7661085287213297`*^9}, {3.7661085619943686`*^9, 
   3.7661086358937893`*^9}, {3.7661162191396303`*^9, 
   3.7661162338593035`*^9}, {3.766116399964204*^9, 3.766116404799249*^9}, {
   3.7661166235773244`*^9, 3.7661166299582653`*^9}, {3.7661166960695066`*^9, 
   3.766116698254664*^9}, {3.766119470596963*^9, 3.7661195093413997`*^9}, {
   3.766119584028721*^9, 3.766119592124073*^9}, {3.7661197243894453`*^9, 
   3.766119728952219*^9}, {3.766119812198679*^9, 3.76611981561355*^9}, 
   3.7661199554925385`*^9, {3.7661203909643*^9, 3.766120395746547*^9}, {
   3.7661843594140224`*^9, 3.766184359580763*^9}, {3.766186191051179*^9, 
   3.7661861943085303`*^9}, {3.7661862383881283`*^9, 3.766186290062936*^9}, {
   3.7661863214540453`*^9, 3.7661863332313356`*^9}, {3.7662828165252953`*^9, 
   3.7662828498617983`*^9}, {3.7665731210384493`*^9, 3.766573121085314*^9}, {
   3.7665732076608686`*^9, 3.766573217349533*^9}, {3.7665744470389695`*^9, 
   3.7665744551481156`*^9}, {3.766998762604661*^9, 3.766998805849501*^9}, {
   3.767511709744541*^9, 3.7675117134396544`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"bdad043b-15b8-4717-ade8-160a72fd37af"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DeconstructEquation", "::", "novariables"}], "=", " ", 
  "\"\<No independent variables detected.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeconstructEquation", "::", "manyvariables"}], " ", "=", " ", 
  "\"\<Too many independent variables detected. `1` detected, expecting \
1.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeconstructEquation", "::", "noeigenvalues"}], " ", "=", " ", 
  "\"\<No free parameter detected.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeconstructEquation", "::", "manyeigenvalues"}], " ", "=", " ", 
  "\"\<Too many free parameters detected. `1` detected, expecting 1.\>\""}], \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeconstructEquation", "::", "underdetermined"}], " ", "=", " ", 
  "\"\<Problem is underdetermined. `1` dependent variables detected, \
expecting `2`.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeconstructEquation", "::", "overdetermined"}], " ", "=", " ", 
  "\"\<Problem is overdetermined. `1` dependent variables detected, expecting \
`2`.\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7654196914224606`*^9, 3.7654196944673185`*^9}, {
  3.765419758414327*^9, 3.7654198859453545`*^9}, {3.765419944158693*^9, 
  3.76542005329093*^9}, {3.7665731211009617`*^9, 3.7665731211009617`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"141a8396-d8dc-4ead-8786-790d2b20e4ea"],

Cell[BoxData["\<\"No independent variables detected.\"\>"], "Output",
 CellChangeTimes->{{3.7654200615487933`*^9, 3.7654200634576883`*^9}, 
   3.765420209946913*^9, 3.7654205539969807`*^9, 3.7654249125607495`*^9, 
   3.765426926674144*^9, 3.7654275709873595`*^9, 3.7654281939897327`*^9, {
   3.7654284466600957`*^9, 3.7654284651426725`*^9}, 3.7654285888379135`*^9, 
   3.765428636263098*^9, 3.765429069472234*^9, 3.7654303137699122`*^9, 
   3.765433429613163*^9, 3.765433600754799*^9, 3.7657086513725986`*^9, 
   3.765708909840319*^9, 3.7657090950366116`*^9, 3.765709309571218*^9, 
   3.765709463339085*^9, 3.7657096599639454`*^9, 3.7657098005427055`*^9, 
   3.7657178822344165`*^9, 3.766093510510876*^9, 3.766115723562358*^9, 
   3.766116202285691*^9, 3.7661164148802967`*^9, 3.766116626748843*^9, 
   3.766116708212043*^9, 3.7661195193486185`*^9, 3.7661196031296206`*^9, 
   3.766119738944504*^9, 3.7661198255120564`*^9, 3.76611988632347*^9, 
   3.766119970551279*^9, 3.7661204363270187`*^9, 3.7661380781481314`*^9, 
   3.7661423017048206`*^9, 3.7661481820597725`*^9, 3.766152128718112*^9, 
   3.766189932074254*^9, {3.7661966397287617`*^9, 3.7661966460988355`*^9}, 
   3.7662383520103855`*^9, 3.7662822686192646`*^9, 3.766282853417816*^9, 
   3.7662829757184267`*^9, 3.766313458736277*^9, 3.7663137560603743`*^9, 
   3.766574468057128*^9, 3.766574522800806*^9, 3.7665746627385015`*^9, 
   3.766575181012993*^9, 3.766630271859484*^9, 3.7668377871181555`*^9, 
   3.7668398881427746`*^9, 3.7668494522223063`*^9, 3.766871190588812*^9, 
   3.766875246515647*^9, 3.766875355758933*^9, 3.7668754712545233`*^9, 
   3.766875525028533*^9, 3.766875577809083*^9, 3.766876745131451*^9, 
   3.7668833964345455`*^9, 3.7668865566684065`*^9, 3.766886663614604*^9, 
   3.766901959090005*^9, {3.766901992599331*^9, 3.7669019982011456`*^9}, 
   3.7669804016167946`*^9, 3.7669809631568155`*^9, 3.7669823209504166`*^9, 
   3.7670097709381847`*^9, 3.7904913823626857`*^9, 3.7905569609052324`*^9, 
   3.792417009958027*^9, 3.7932630662104936`*^9, 3.793263156272277*^9, 
   3.793263291192574*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"57dc71de-5899-43cf-976e-152838b22c17"],

Cell[BoxData["\<\"Too many independent variables detected. `1` detected, \
expecting 1.\"\>"], "Output",
 CellChangeTimes->{{3.7654200615487933`*^9, 3.7654200634576883`*^9}, 
   3.765420209946913*^9, 3.7654205539969807`*^9, 3.7654249125607495`*^9, 
   3.765426926674144*^9, 3.7654275709873595`*^9, 3.7654281939897327`*^9, {
   3.7654284466600957`*^9, 3.7654284651426725`*^9}, 3.7654285888379135`*^9, 
   3.765428636263098*^9, 3.765429069472234*^9, 3.7654303137699122`*^9, 
   3.765433429613163*^9, 3.765433600754799*^9, 3.7657086513725986`*^9, 
   3.765708909840319*^9, 3.7657090950366116`*^9, 3.765709309571218*^9, 
   3.765709463339085*^9, 3.7657096599639454`*^9, 3.7657098005427055`*^9, 
   3.7657178822344165`*^9, 3.766093510510876*^9, 3.766115723562358*^9, 
   3.766116202285691*^9, 3.7661164148802967`*^9, 3.766116626748843*^9, 
   3.766116708212043*^9, 3.7661195193486185`*^9, 3.7661196031296206`*^9, 
   3.766119738944504*^9, 3.7661198255120564`*^9, 3.76611988632347*^9, 
   3.766119970551279*^9, 3.7661204363270187`*^9, 3.7661380781481314`*^9, 
   3.7661423017048206`*^9, 3.7661481820597725`*^9, 3.766152128718112*^9, 
   3.766189932074254*^9, {3.7661966397287617`*^9, 3.7661966460988355`*^9}, 
   3.7662383520103855`*^9, 3.7662822686192646`*^9, 3.766282853417816*^9, 
   3.7662829757184267`*^9, 3.766313458736277*^9, 3.7663137560603743`*^9, 
   3.766574468057128*^9, 3.766574522800806*^9, 3.7665746627385015`*^9, 
   3.766575181012993*^9, 3.766630271859484*^9, 3.7668377871181555`*^9, 
   3.7668398881427746`*^9, 3.7668494522223063`*^9, 3.766871190588812*^9, 
   3.766875246515647*^9, 3.766875355758933*^9, 3.7668754712545233`*^9, 
   3.766875525028533*^9, 3.766875577809083*^9, 3.766876745131451*^9, 
   3.7668833964345455`*^9, 3.7668865566684065`*^9, 3.766886663614604*^9, 
   3.766901959090005*^9, {3.766901992599331*^9, 3.7669019982011456`*^9}, 
   3.7669804016167946`*^9, 3.7669809631568155`*^9, 3.7669823209504166`*^9, 
   3.7670097709381847`*^9, 3.7904913823626857`*^9, 3.7905569609052324`*^9, 
   3.792417009958027*^9, 3.7932630662104936`*^9, 3.793263156272277*^9, 
   3.7932632911994543`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"ae5cf457-289a-4beb-8ec9-cf01f8d10202"],

Cell[BoxData["\<\"No free parameter detected.\"\>"], "Output",
 CellChangeTimes->{{3.7654200615487933`*^9, 3.7654200634576883`*^9}, 
   3.765420209946913*^9, 3.7654205539969807`*^9, 3.7654249125607495`*^9, 
   3.765426926674144*^9, 3.7654275709873595`*^9, 3.7654281939897327`*^9, {
   3.7654284466600957`*^9, 3.7654284651426725`*^9}, 3.7654285888379135`*^9, 
   3.765428636263098*^9, 3.765429069472234*^9, 3.7654303137699122`*^9, 
   3.765433429613163*^9, 3.765433600754799*^9, 3.7657086513725986`*^9, 
   3.765708909840319*^9, 3.7657090950366116`*^9, 3.765709309571218*^9, 
   3.765709463339085*^9, 3.7657096599639454`*^9, 3.7657098005427055`*^9, 
   3.7657178822344165`*^9, 3.766093510510876*^9, 3.766115723562358*^9, 
   3.766116202285691*^9, 3.7661164148802967`*^9, 3.766116626748843*^9, 
   3.766116708212043*^9, 3.7661195193486185`*^9, 3.7661196031296206`*^9, 
   3.766119738944504*^9, 3.7661198255120564`*^9, 3.76611988632347*^9, 
   3.766119970551279*^9, 3.7661204363270187`*^9, 3.7661380781481314`*^9, 
   3.7661423017048206`*^9, 3.7661481820597725`*^9, 3.766152128718112*^9, 
   3.766189932074254*^9, {3.7661966397287617`*^9, 3.7661966460988355`*^9}, 
   3.7662383520103855`*^9, 3.7662822686192646`*^9, 3.766282853417816*^9, 
   3.7662829757184267`*^9, 3.766313458736277*^9, 3.7663137560603743`*^9, 
   3.766574468057128*^9, 3.766574522800806*^9, 3.7665746627385015`*^9, 
   3.766575181012993*^9, 3.766630271859484*^9, 3.7668377871181555`*^9, 
   3.7668398881427746`*^9, 3.7668494522223063`*^9, 3.766871190588812*^9, 
   3.766875246515647*^9, 3.766875355758933*^9, 3.7668754712545233`*^9, 
   3.766875525028533*^9, 3.766875577809083*^9, 3.766876745131451*^9, 
   3.7668833964345455`*^9, 3.7668865566684065`*^9, 3.766886663614604*^9, 
   3.766901959090005*^9, {3.766901992599331*^9, 3.7669019982011456`*^9}, 
   3.7669804016167946`*^9, 3.7669809631568155`*^9, 3.7669823209504166`*^9, 
   3.7670097709381847`*^9, 3.7904913823626857`*^9, 3.7905569609052324`*^9, 
   3.792417009958027*^9, 3.7932630662104936`*^9, 3.793263156272277*^9, 
   3.7932632912036033`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"deb0f434-9a21-4ea0-8d31-00dd8a87dd4d"],

Cell[BoxData["\<\"Too many free parameters detected. `1` detected, expecting \
1.\"\>"], "Output",
 CellChangeTimes->{{3.7654200615487933`*^9, 3.7654200634576883`*^9}, 
   3.765420209946913*^9, 3.7654205539969807`*^9, 3.7654249125607495`*^9, 
   3.765426926674144*^9, 3.7654275709873595`*^9, 3.7654281939897327`*^9, {
   3.7654284466600957`*^9, 3.7654284651426725`*^9}, 3.7654285888379135`*^9, 
   3.765428636263098*^9, 3.765429069472234*^9, 3.7654303137699122`*^9, 
   3.765433429613163*^9, 3.765433600754799*^9, 3.7657086513725986`*^9, 
   3.765708909840319*^9, 3.7657090950366116`*^9, 3.765709309571218*^9, 
   3.765709463339085*^9, 3.7657096599639454`*^9, 3.7657098005427055`*^9, 
   3.7657178822344165`*^9, 3.766093510510876*^9, 3.766115723562358*^9, 
   3.766116202285691*^9, 3.7661164148802967`*^9, 3.766116626748843*^9, 
   3.766116708212043*^9, 3.7661195193486185`*^9, 3.7661196031296206`*^9, 
   3.766119738944504*^9, 3.7661198255120564`*^9, 3.76611988632347*^9, 
   3.766119970551279*^9, 3.7661204363270187`*^9, 3.7661380781481314`*^9, 
   3.7661423017048206`*^9, 3.7661481820597725`*^9, 3.766152128718112*^9, 
   3.766189932074254*^9, {3.7661966397287617`*^9, 3.7661966460988355`*^9}, 
   3.7662383520103855`*^9, 3.7662822686192646`*^9, 3.766282853417816*^9, 
   3.7662829757184267`*^9, 3.766313458736277*^9, 3.7663137560603743`*^9, 
   3.766574468057128*^9, 3.766574522800806*^9, 3.7665746627385015`*^9, 
   3.766575181012993*^9, 3.766630271859484*^9, 3.7668377871181555`*^9, 
   3.7668398881427746`*^9, 3.7668494522223063`*^9, 3.766871190588812*^9, 
   3.766875246515647*^9, 3.766875355758933*^9, 3.7668754712545233`*^9, 
   3.766875525028533*^9, 3.766875577809083*^9, 3.766876745131451*^9, 
   3.7668833964345455`*^9, 3.7668865566684065`*^9, 3.766886663614604*^9, 
   3.766901959090005*^9, {3.766901992599331*^9, 3.7669019982011456`*^9}, 
   3.7669804016167946`*^9, 3.7669809631568155`*^9, 3.7669823209504166`*^9, 
   3.7670097709381847`*^9, 3.7904913823626857`*^9, 3.7905569609052324`*^9, 
   3.792417009958027*^9, 3.7932630662104936`*^9, 3.793263156272277*^9, 
   3.79326329120704*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"3a612038-1c94-456f-ac82-5c4a9c22f303"],

Cell[BoxData["\<\"Problem is underdetermined. `1` dependent variables \
detected, expecting `2`.\"\>"], "Output",
 CellChangeTimes->{{3.7654200615487933`*^9, 3.7654200634576883`*^9}, 
   3.765420209946913*^9, 3.7654205539969807`*^9, 3.7654249125607495`*^9, 
   3.765426926674144*^9, 3.7654275709873595`*^9, 3.7654281939897327`*^9, {
   3.7654284466600957`*^9, 3.7654284651426725`*^9}, 3.7654285888379135`*^9, 
   3.765428636263098*^9, 3.765429069472234*^9, 3.7654303137699122`*^9, 
   3.765433429613163*^9, 3.765433600754799*^9, 3.7657086513725986`*^9, 
   3.765708909840319*^9, 3.7657090950366116`*^9, 3.765709309571218*^9, 
   3.765709463339085*^9, 3.7657096599639454`*^9, 3.7657098005427055`*^9, 
   3.7657178822344165`*^9, 3.766093510510876*^9, 3.766115723562358*^9, 
   3.766116202285691*^9, 3.7661164148802967`*^9, 3.766116626748843*^9, 
   3.766116708212043*^9, 3.7661195193486185`*^9, 3.7661196031296206`*^9, 
   3.766119738944504*^9, 3.7661198255120564`*^9, 3.76611988632347*^9, 
   3.766119970551279*^9, 3.7661204363270187`*^9, 3.7661380781481314`*^9, 
   3.7661423017048206`*^9, 3.7661481820597725`*^9, 3.766152128718112*^9, 
   3.766189932074254*^9, {3.7661966397287617`*^9, 3.7661966460988355`*^9}, 
   3.7662383520103855`*^9, 3.7662822686192646`*^9, 3.766282853417816*^9, 
   3.7662829757184267`*^9, 3.766313458736277*^9, 3.7663137560603743`*^9, 
   3.766574468057128*^9, 3.766574522800806*^9, 3.7665746627385015`*^9, 
   3.766575181012993*^9, 3.766630271859484*^9, 3.7668377871181555`*^9, 
   3.7668398881427746`*^9, 3.7668494522223063`*^9, 3.766871190588812*^9, 
   3.766875246515647*^9, 3.766875355758933*^9, 3.7668754712545233`*^9, 
   3.766875525028533*^9, 3.766875577809083*^9, 3.766876745131451*^9, 
   3.7668833964345455`*^9, 3.7668865566684065`*^9, 3.766886663614604*^9, 
   3.766901959090005*^9, {3.766901992599331*^9, 3.7669019982011456`*^9}, 
   3.7669804016167946`*^9, 3.7669809631568155`*^9, 3.7669823209504166`*^9, 
   3.7670097709381847`*^9, 3.7904913823626857`*^9, 3.7905569609052324`*^9, 
   3.792417009958027*^9, 3.7932630662104936`*^9, 3.793263156272277*^9, 
   3.793263291210514*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"3d58dd82-1cf6-4905-af74-a9249801124d"],

Cell[BoxData["\<\"Problem is overdetermined. `1` dependent variables \
detected, expecting `2`.\"\>"], "Output",
 CellChangeTimes->{{3.7654200615487933`*^9, 3.7654200634576883`*^9}, 
   3.765420209946913*^9, 3.7654205539969807`*^9, 3.7654249125607495`*^9, 
   3.765426926674144*^9, 3.7654275709873595`*^9, 3.7654281939897327`*^9, {
   3.7654284466600957`*^9, 3.7654284651426725`*^9}, 3.7654285888379135`*^9, 
   3.765428636263098*^9, 3.765429069472234*^9, 3.7654303137699122`*^9, 
   3.765433429613163*^9, 3.765433600754799*^9, 3.7657086513725986`*^9, 
   3.765708909840319*^9, 3.7657090950366116`*^9, 3.765709309571218*^9, 
   3.765709463339085*^9, 3.7657096599639454`*^9, 3.7657098005427055`*^9, 
   3.7657178822344165`*^9, 3.766093510510876*^9, 3.766115723562358*^9, 
   3.766116202285691*^9, 3.7661164148802967`*^9, 3.766116626748843*^9, 
   3.766116708212043*^9, 3.7661195193486185`*^9, 3.7661196031296206`*^9, 
   3.766119738944504*^9, 3.7661198255120564`*^9, 3.76611988632347*^9, 
   3.766119970551279*^9, 3.7661204363270187`*^9, 3.7661380781481314`*^9, 
   3.7661423017048206`*^9, 3.7661481820597725`*^9, 3.766152128718112*^9, 
   3.766189932074254*^9, {3.7661966397287617`*^9, 3.7661966460988355`*^9}, 
   3.7662383520103855`*^9, 3.7662822686192646`*^9, 3.766282853417816*^9, 
   3.7662829757184267`*^9, 3.766313458736277*^9, 3.7663137560603743`*^9, 
   3.766574468057128*^9, 3.766574522800806*^9, 3.7665746627385015`*^9, 
   3.766575181012993*^9, 3.766630271859484*^9, 3.7668377871181555`*^9, 
   3.7668398881427746`*^9, 3.7668494522223063`*^9, 3.766871190588812*^9, 
   3.766875246515647*^9, 3.766875355758933*^9, 3.7668754712545233`*^9, 
   3.766875525028533*^9, 3.766875577809083*^9, 3.766876745131451*^9, 
   3.7668833964345455`*^9, 3.7668865566684065`*^9, 3.766886663614604*^9, 
   3.766901959090005*^9, {3.766901992599331*^9, 3.7669019982011456`*^9}, 
   3.7669804016167946`*^9, 3.7669809631568155`*^9, 3.7669823209504166`*^9, 
   3.7670097709381847`*^9, 3.7904913823626857`*^9, 3.7905569609052324`*^9, 
   3.792417009958027*^9, 3.7932630662104936`*^9, 3.793263156272277*^9, 
   3.793263291214075*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"92ddfbcb-7148-4a86-b58d-952b9f0727cb"]
}, Open  ]],

Cell["\<\
This function converts the polynomial eigenproblem to a linear eigenproblem.\
\>", "Text",
 CellChangeTimes->{{3.7605157764853435`*^9, 
  3.760515792383936*^9}},ExpressionUUID->"44f65038-704d-48e3-a07e-\
135320a47a20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"02", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MToLinear", "[", 
    RowBox[{"M_", ",", 
     RowBox[{"IsLinear_:", "False"}]}], "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A", ",", "B", ",", "Nmax", ",", "\[Omega]max", ",", "Mfinalinv", ",", 
       "Mfirstinv"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Omega]max", " ", "=", " ", 
       RowBox[{
        RowBox[{"Length", "[", "M", "]"}], "-", "1"}]}], ";", 
      RowBox[{"Nmax", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"M", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}]}], ";", 
      RowBox[{"$MinPrecision", "=", 
       RowBox[{"Precision", "[", 
        RowBox[{"M", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", 
           RowBox[{"M", "\[LeftDoubleBracket]", 
            RowBox[{"\[Omega]max", "+", "1"}], "\[RightDoubleBracket]"}], 
           "]"}], "\[NotEqual]", " ", "0"}], "&&", "IsLinear"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mfinalinv", " ", "=", " ", 
           RowBox[{"Inverse", "[", 
            RowBox[{"-", 
             RowBox[{"M", "\[LeftDoubleBracket]", 
              RowBox[{"\[Omega]max", "+", "1"}], "\[RightDoubleBracket]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"A", " ", "=", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "\[Omega]max"}], ",", 
                RowBox[{"Mfinalinv", ".", 
                 RowBox[{
                 "M", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "j"}], "]"}], "*", 
                 RowBox[{"IdentityMatrix", "[", "Nmax", "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "\[Omega]max"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "\[Omega]max"}], "}"}]}], "]"}], "//", 
            "ArrayFlatten"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"B", " ", "=", " ", "1"}], ";"}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", 
           RowBox[{
           "M", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
           "\[NotEqual]", " ", "0"}], "&&", "IsLinear"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mfirstinv", " ", "=", " ", 
           RowBox[{"Inverse", "[", 
            RowBox[{
            "M", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"A", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"B", " ", "=", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Mfirstinv", ".", 
                  RowBox[{"M", "\[LeftDoubleBracket]", 
                   RowBox[{"j", "+", "1"}], "\[RightDoubleBracket]"}]}]}], 
                ",", 
                RowBox[{
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{"i", ",", 
                   RowBox[{"j", "+", "1"}]}], "]"}], "*", 
                 RowBox[{"IdentityMatrix", "[", "Nmax", "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "\[Omega]max"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "\[Omega]max"}], "}"}]}], "]"}], "//", 
            "ArrayFlatten"}]}], ";"}], ")"}], ",", "\[IndentingNewLine]", 
        "True", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", " ", "=", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", 
                RowBox[{"M", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{"i", ",", "j"}], "]"}], "*", 
                 RowBox[{"IdentityMatrix", "[", "Nmax", "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "\[Omega]max"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "\[Omega]max"}], "}"}]}], "]"}], " ", "//", 
            "ArrayFlatten"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"B", " ", "=", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"i", "\[Equal]", "1"}], " ", "&&", " ", 
                 RowBox[{"j", " ", "\[Equal]", " ", "\[Omega]max"}]}], " ", 
                ",", " ", 
                RowBox[{"-", 
                 RowBox[{"M", "[", 
                  RowBox[{"[", 
                   RowBox[{"\[Omega]max", "+", "1"}], "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"KroneckerDelta", "[", 
                  RowBox[{"i", ",", 
                   RowBox[{"j", "+", "1"}]}], "]"}], "*", 
                 RowBox[{"IdentityMatrix", "[", "Nmax", "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "\[Omega]max"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "\[Omega]max"}], "}"}]}], "]"}], "//", 
            "ArrayFlatten"}]}], ";"}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$MinPrecision", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"A", ",", "B"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7605157981079335`*^9, 3.7605162424060946`*^9}, {
   3.760516299629545*^9, 3.7605164183039613`*^9}, {3.760516503167633*^9, 
   3.7605165056650553`*^9}, 3.7605875546888733`*^9, {3.760854982597265*^9, 
   3.7608550005597544`*^9}, {3.7608566028517175`*^9, 
   3.7608566049900503`*^9}, {3.7654244036324673`*^9, 3.7654244174355607`*^9}, 
   3.7665731687357717`*^9, {3.767255741576488*^9, 3.7672558521132984`*^9}, {
   3.7672561346024*^9, 3.767256178329669*^9}, {3.767256286266988*^9, 
   3.7672563973410587`*^9}, {3.7672567382261224`*^9, 
   3.7672568070786495`*^9}, {3.767256944624551*^9, 3.767257028453774*^9}, {
   3.7672579911575584`*^9, 3.7672579941734734`*^9}, {3.7672594787314816`*^9, 
   3.76725948043884*^9}, {3.767259598705517*^9, 3.7672596120035067`*^9}, {
   3.767259800351768*^9, 3.7672598414755526`*^9}, {3.767263303583836*^9, 
   3.7672633155087085`*^9}, {3.7672633607502337`*^9, 3.767263403205471*^9}, {
   3.7672634921027822`*^9, 3.767263507517352*^9}, {3.7672635594233923`*^9, 
   3.76726356581651*^9}, {3.7672639460825644`*^9, 3.767263952072789*^9}, {
   3.76726408247073*^9, 3.767264098252527*^9}, {3.7672641733496895`*^9, 
   3.767264180011405*^9}, {3.767264347692114*^9, 3.7672643502884517`*^9}, {
   3.7672643944277534`*^9, 3.767264407102518*^9}, {3.767264480672678*^9, 
   3.767264484542245*^9}, {3.7672647754201536`*^9, 3.7672647890420837`*^9}, {
   3.76726484240565*^9, 3.767264850053822*^9}, {3.7672651433441305`*^9, 
   3.767265149010558*^9}, {3.767265384047282*^9, 3.767265389495555*^9}, {
   3.767265422056088*^9, 3.7672654663586764`*^9}, {3.767265553824293*^9, 
   3.767265574531456*^9}, {3.767265667176878*^9, 3.767265698431009*^9}, {
   3.767266339287702*^9, 3.767266342665736*^9}, {3.767266852766694*^9, 
   3.7672668584654655`*^9}, {3.7672673991386185`*^9, 
   3.7672674217671027`*^9}, {3.7672688285974817`*^9, 
   3.7672688323631563`*^9}, {3.7672704786110964`*^9, 3.767270533936343*^9}, {
   3.7672707498108377`*^9, 3.7672707499464417`*^9}, {3.767488500360573*^9, 
   3.767488531497308*^9}, {3.767492941281698*^9, 3.767492949903634*^9}, {
   3.7674932057033386`*^9, 3.767493206527134*^9}, {3.767493280962039*^9, 
   3.7674932900577106`*^9}, {3.767493375148052*^9, 3.767493376272073*^9}, {
   3.769231840431834*^9, 3.7692318500055723`*^9}, {3.7692332083297787`*^9, 
   3.769233212489625*^9}, {3.769233293171951*^9, 3.7692333001383505`*^9}, {
   3.7692335414108496`*^9, 3.769233544036828*^9}, 3.769233694064023*^9, {
   3.769233944898897*^9, 3.769233946234325*^9}, {3.7692341661316805`*^9, 
   3.7692341757648907`*^9}, {3.7692342941901755`*^9, 
   3.7692343030205603`*^9}, {3.7692343629264317`*^9, 3.769234368102619*^9}, {
   3.7692344347688017`*^9, 3.7692344420403333`*^9}, {3.7692344781384935`*^9, 
   3.76923449435017*^9}, {3.769234609773411*^9, 3.7692346124662333`*^9}, {
   3.769234643667381*^9, 3.769234658596486*^9}, {3.7692346970318637`*^9, 
   3.769234703866588*^9}, {3.7692347689127765`*^9, 3.769234790952837*^9}, 
   3.769234925663872*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"f1428181-71a8-423c-9910-b40bcd00c70f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MListToLinear", "[", "MList_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "MlinearList", ",", "A", ",", "B", ",", "funcmax", ",", "IsLinear"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"funcmax", " ", "=", " ", 
      RowBox[{"Length", "[", "MList", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"funcmax", " ", "\[Equal]", " ", "1"}], ",", 
       RowBox[{
        RowBox[{"IsLinear", "=", "True"}], ";"}], ",", 
       RowBox[{
        RowBox[{"IsLinear", "=", "False"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MlinearList", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"MToLinear", "[", 
         RowBox[{
          RowBox[{"MList", "\[LeftDoubleBracket]", 
           RowBox[{"eqnindex", ",", "funcindex"}], "\[RightDoubleBracket]"}], 
          ",", "IsLinear"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"eqnindex", ",", "funcmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"funcindex", ",", "funcmax"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"A", " ", "=", " ", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"MlinearList", "\[LeftDoubleBracket]", 
          RowBox[{"eqnindex", ",", "funcindex", ",", "1"}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"{", 
          RowBox[{"eqnindex", ",", "funcmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"funcindex", ",", "funcmax"}], "}"}]}], "]"}], "//", 
       "ArrayFlatten"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"B", " ", "=", " ", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"MlinearList", "\[LeftDoubleBracket]", 
          RowBox[{"eqnindex", ",", "funcindex", ",", "2"}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"{", 
          RowBox[{"eqnindex", ",", "funcmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"funcindex", ",", "funcmax"}], "}"}]}], "]"}], "//", 
       "ArrayFlatten"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"A", ",", "B"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.765424423679863*^9, 3.7654244759530845`*^9}, {
   3.7654245356504536`*^9, 3.765424611827757*^9}, {3.7654247548220015`*^9, 
   3.7654248143453755`*^9}, {3.765425021759739*^9, 3.765425029100109*^9}, {
   3.765427849142846*^9, 3.765427854021803*^9}, 3.765428627465624*^9, {
   3.7665731687357717`*^9, 3.7665731903765984`*^9}, {3.7672588960535154`*^9, 
   3.7672588961936865`*^9}, {3.767258994847083*^9, 3.767259001095338*^9}, 
   3.767259063055612*^9, {3.76749321541835*^9, 3.767493269584448*^9}, {
   3.7692337480036907`*^9, 3.7692337530521903`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"571d78b7-b44e-41e0-b21a-9226e506bf35"],

Cell[TextData[{
 "Calculates how \[Phi](u), ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["d\[Phi]", "du"], ",", " ", 
    FractionBox[
     RowBox[{
      SuperscriptBox["d", "2"], "\[Phi]"}], 
     SuperscriptBox["du", "2"]], ","}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "34db930e-2993-44f7-9662-158c06a2089c"],
 "etc. is converted into a spectral matrix."
}], "Text",
 CellChangeTimes->{{3.761444321649225*^9, 
  3.7614443754074273`*^9}},ExpressionUUID->"b1b91e9b-083e-4318-a7a2-\
179917598d83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"12", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GetDerMatrices", "[", 
    RowBox[{
    "Nmax_", ",", " ", "dermax_", ",", "lbpower_", ",", "ubpower_", ",", 
     "method_", ",", "R_", ",", "prec_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CMatrix", ",", "DerMatrices", ",", "Ntotal", ",", "klowerbound", ",", 
       "kupperbound"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ntotal", "=", " ", 
       RowBox[{"Nmax", " ", "+", " ", "lbpower", " ", "+", " ", "ubpower"}]}],
       ";", " ", 
      RowBox[{"klowerbound", " ", "=", " ", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "dermax"}], ",", 
         RowBox[{"-", "lbpower"}]}], "]"}]}], ";", " ", 
      RowBox[{"kupperbound", " ", "=", " ", 
       RowBox[{"Nmax", " ", "+", " ", 
        RowBox[{"Min", "[", 
         RowBox[{"ubpower", ",", "dermax"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CMatrix", " ", "=", " ", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "method", ",", "\[IndentingNewLine]", "\"\<Chebyschev\>\"", ",", " ", 
         
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Switch", "[", 
            RowBox[{"k", ",", 
             RowBox[{"-", "lbpower"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"j", "+", "lbpower"}], ")"}], "Ntotal"], 
                    "\[Pi]"}], "]"}]}], ")"}], "Ntotal"], ",", "prec"}], 
              "]"}], ",", 
             RowBox[{"Nmax", " ", "+", " ", "ubpower"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"j", "+", "lbpower"}], ")"}], "Ntotal"], 
                    "\[Pi]"}], "]"}]}], ")"}], "Ntotal"], ",", "prec"}], 
              "]"}], ",", "_", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"j", "+", "lbpower"}], ")"}], "Ntotal"], 
                    "\[Pi]"}], "]"}]}], ")"}], 
                 RowBox[{"k", "+", "lbpower"}]], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"j", "+", "lbpower"}], ")"}], "Ntotal"], 
                    "\[Pi]"}], "]"}]}], ")"}], 
                 RowBox[{"Nmax", "+", "ubpower", " ", "-", " ", "k"}]]}], ",",
                "prec"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "Nmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "klowerbound", ",", "kupperbound"}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", "\"\<Equal\>\"", ",", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Switch", "[", 
            RowBox[{"k", ",", 
             RowBox[{"-", "lbpower"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  FractionBox[
                   RowBox[{"j", "+", "lbpower"}], "Ntotal"]}], ")"}], 
                "Ntotal"], ",", "prec"}], "]"}], ",", 
             RowBox[{"Nmax", " ", "+", " ", "ubpower"}], ",", " ", 
             RowBox[{"N", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"j", "+", "lbpower"}], "Ntotal"], ")"}], "Ntotal"], 
               ",", "prec"}], "]"}], ",", "_", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"j", "+", "lbpower"}], "Ntotal"], ")"}], 
                 RowBox[{"k", "+", "lbpower"}]], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   FractionBox[
                    RowBox[{"j", "+", "lbpower"}], "Ntotal"]}], ")"}], 
                 RowBox[{"Nmax", "+", "ubpower", "-", "k"}]]}], ",", "prec"}],
               "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "Nmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "klowerbound", ",", "kupperbound"}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", "_", ",", 
         RowBox[{"ThrowAbort", "[", 
          RowBox[{"GetDerMatrices", "::", "method"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"DerMatrices", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"klowerbound", " ", "\[LessEqual]", " ", 
              RowBox[{"k", "+", "l", "+", "m", "-", "n"}], "\[LessEqual]", 
              " ", "kupperbound"}], ",", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", "R"], ")"}], "n"], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "l"], 
              RowBox[{"Binomial", "[", 
               RowBox[{"n", ",", "l"}], "]"}], 
              RowBox[{"Binomial", "[", 
               RowBox[{"n", ",", "m"}], "]"}], 
              RowBox[{"Binomial", "[", 
               RowBox[{"Ntotal", ",", 
                RowBox[{"k", "+", "l", "+", "lbpower"}]}], "]"}], 
              RowBox[{"Pochhammer", "[", 
               RowBox[{
                RowBox[{"k", "+", "l", "+", "lbpower", "+", "1", "-", "n"}], 
                ",", "n"}], "]"}], 
              RowBox[{"CMatrix", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{
                "k", "+", "l", "+", "m", "-", "n", "+", "1", "-", 
                 "klowerbound"}]}], "\[RightDoubleBracket]"}]}], ",", "0"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "0", ",", "n"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "dermax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "Nmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"DerMatrices", ",", "Infinity"}], "]"}], "||", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"DerMatrices", ",", "Indeterminate"}], "]"}]}], ",", 
        RowBox[{"ThrowAbort", "[", 
         RowBox[{"GetDerMatrices", "::", "infinity"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "DerMatrices"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761365538146777*^9, 3.7613655984918556`*^9}, {
   3.7613657801927986`*^9, 3.7613658092175865`*^9}, {3.7613658590506554`*^9, 
   3.7613658981037903`*^9}, {3.7613659798067713`*^9, 
   3.7613659826666975`*^9}, {3.7613855544460964`*^9, 3.761385589473407*^9}, {
   3.7613857234919043`*^9, 3.761385871465292*^9}, {3.761386217076953*^9, 
   3.7613862338803887`*^9}, {3.7613864280336475`*^9, 
   3.7613867603488193`*^9}, {3.76138679117982*^9, 3.761386797952526*^9}, {
   3.7613869615077267`*^9, 3.7613869766961327`*^9}, 3.7613884315649056`*^9, {
   3.76138850712736*^9, 3.761388507891646*^9}, 3.7613930560646305`*^9, {
   3.761393453210375*^9, 3.7613935723966055`*^9}, {3.7613936044787292`*^9, 
   3.76139384867758*^9}, {3.7613938841493244`*^9, 3.7613940459569826`*^9}, {
   3.7613942019867563`*^9, 3.7613942339993415`*^9}, {3.761394268266242*^9, 
   3.761394282173148*^9}, {3.7613967109766927`*^9, 3.7613967464288363`*^9}, {
   3.761425842911524*^9, 3.761425866985132*^9}, {3.7614259503282113`*^9, 
   3.7614260578605895`*^9}, {3.7614261327851872`*^9, 3.761426526566922*^9}, {
   3.7614265771027584`*^9, 3.761426654059472*^9}, {3.761426688622219*^9, 
   3.7614267365583353`*^9}, {3.7614268030251293`*^9, 
   3.7614268306671147`*^9}, {3.761426907122801*^9, 3.7614270247498207`*^9}, {
   3.761427065895812*^9, 3.761427076828553*^9}, {3.7614271103133836`*^9, 
   3.7614271240371075`*^9}, {3.7614271977183795`*^9, 3.761427212416498*^9}, {
   3.7614274652391005`*^9, 3.761427484176447*^9}, {3.7614276295466194`*^9, 
   3.7614276448467255`*^9}, {3.76142775195324*^9, 3.7614277576978793`*^9}, {
   3.761428042002438*^9, 3.761428135000684*^9}, {3.761428179220409*^9, 
   3.761428218161255*^9}, {3.7614283392605968`*^9, 3.761428339522894*^9}, {
   3.7614301759741726`*^9, 3.7614301767328463`*^9}, {3.7614302961135216`*^9, 
   3.761430296257819*^9}, {3.761431234596848*^9, 3.761431449860153*^9}, {
   3.7614315580965395`*^9, 3.761431583833225*^9}, {3.7614317074898553`*^9, 
   3.7614317478359137`*^9}, {3.761433068783148*^9, 3.7614330758797903`*^9}, {
   3.761433139579667*^9, 3.7614331664170856`*^9}, {3.761434197799465*^9, 
   3.761434204117824*^9}, {3.7614398190577965`*^9, 3.761439820691812*^9}, {
   3.761440080625902*^9, 3.761440086399457*^9}, {3.7614401877726064`*^9, 
   3.7614402150770383`*^9}, {3.7614402871494017`*^9, 
   3.7614403002273064`*^9}, {3.76144166076619*^9, 3.7614416815389576`*^9}, {
   3.761441715582263*^9, 3.761441716973658*^9}, {3.761442897287756*^9, 
   3.761442900033366*^9}, {3.761443329612439*^9, 3.7614433506724954`*^9}, {
   3.761443830354969*^9, 3.7614438871106863`*^9}, {3.761444636785733*^9, 
   3.761444637956164*^9}, {3.7614447398439655`*^9, 3.761444743789488*^9}, {
   3.761444875078269*^9, 3.7614448755470467`*^9}, 3.76144557502291*^9, {
   3.761448651336191*^9, 3.76144869325766*^9}, {3.761795712171359*^9, 
   3.761795746865588*^9}, {3.7617959251901817`*^9, 3.7617959519533696`*^9}, {
   3.7618487957665696`*^9, 3.761848807283194*^9}, {3.761849252788624*^9, 
   3.761849259105275*^9}, {3.7618496318322926`*^9, 3.761849663230189*^9}, {
   3.761849892897513*^9, 3.761849900301214*^9}, {3.7618499890472403`*^9, 
   3.76185002604222*^9}, {3.7622258196995277`*^9, 3.762225822667165*^9}, 
   3.762226935751648*^9, {3.764998511197771*^9, 3.764998596606469*^9}, {
   3.7661198631973004`*^9, 3.7661198675406885`*^9}, 3.766120410468155*^9, {
   3.7662829605935993`*^9, 3.766282972120408*^9}, {3.7665732076765075`*^9, 
   3.766573207692109*^9}, {3.766574447085832*^9, 3.766574447085832*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"0de4f3dd-5b32-486e-9bc3-281fa584131c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GetDerMatrices", "::", "method"}], " ", "=", " ", 
  "\"\<Unknown method.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetDerMatrices", "::", "infinity"}], " ", "=", " ", 
  "\"\<Infinity or indeterminate quantity encountered in generating function \
spectral matrices.\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761396689932952*^9, 3.761396700226418*^9}, {
   3.761396851688297*^9, 3.761396859188235*^9}, {3.76142546310282*^9, 
   3.761425476221731*^9}, {3.761425767325103*^9, 3.761425807016971*^9}, {
   3.761426739143384*^9, 3.761426749080102*^9}, {3.7614267860057497`*^9, 
   3.7614267904323463`*^9}, {3.761430646315299*^9, 3.761430646653664*^9}, {
   3.761444872040182*^9, 3.76144487237728*^9}, {3.7614449529243236`*^9, 
   3.7614449569541826`*^9}, 3.761445579481662*^9, {3.76144855676652*^9, 
   3.7614485725989494`*^9}, {3.761448628801962*^9, 3.7614486472164354`*^9}, {
   3.766573207692109*^9, 3.766573207692109*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"d1aa2970-ee3f-434b-a741-4123d94b1444"],

Cell[BoxData["\<\"Unknown method.\"\>"], "Output",
 CellChangeTimes->{
  3.761439824060114*^9, 3.761440104952631*^9, 3.761440192960934*^9, 
   3.7614402306392374`*^9, 3.7614402900846577`*^9, 3.7614403566249666`*^9, 
   3.7614404749259386`*^9, {3.7614405659428234`*^9, 3.7614405870047026`*^9}, 
   3.7614406309139676`*^9, 3.761440873995765*^9, 3.7614409782896895`*^9, 
   3.761441034003256*^9, 3.7614412116285353`*^9, 3.761441271267329*^9, 
   3.7614414472087307`*^9, 3.761441491405086*^9, 3.7614416470475492`*^9, 
   3.761441728118739*^9, 3.761441769547738*^9, 3.7614418196261263`*^9, 
   3.761441879452451*^9, 3.761441955051484*^9, 3.761442121081761*^9, 
   3.7614421896307306`*^9, 3.7614422735495615`*^9, 3.761442620570486*^9, 
   3.7614427975141315`*^9, 3.761442852305795*^9, 3.7614429370411377`*^9, 
   3.7614431223463697`*^9, 3.761443354453816*^9, 3.7614438913994513`*^9, 
   3.761444436148244*^9, 3.7614446422143707`*^9, {3.761444746559482*^9, 
   3.7614447737826567`*^9}, 3.7614448779117208`*^9, 3.7614450226247454`*^9, 
   3.7614451340743637`*^9, 3.7614452155825825`*^9, 3.761445424243777*^9, 
   3.761445580166828*^9, {3.76144846269238*^9, 3.7614484644163685`*^9}, 
   3.7614487115665517`*^9, 3.7614933729473443`*^9, 3.7617877779087543`*^9, 
   3.761787841709532*^9, 3.7617895085438633`*^9, 3.7617906265877614`*^9, 
   3.7617907076754856`*^9, 3.761790827856496*^9, 3.7617913261746936`*^9, 
   3.7617918047122936`*^9, 3.761793857632962*^9, 3.761793927577673*^9, 
   3.761794005926179*^9, 3.761794096773876*^9, 3.7617957852835803`*^9, 
   3.761795966949272*^9, 3.76179853531265*^9, 3.7617988878873796`*^9, 
   3.761799000262947*^9, 3.7617991373081207`*^9, 3.761799277501839*^9, 
   3.7617993592862954`*^9, 3.7617994517996464`*^9, 3.761799520960684*^9, 
   3.7617996004321766`*^9, 3.7618093741609755`*^9, 3.761814728211236*^9, 
   3.7618176294506297`*^9, 3.7618178676152315`*^9, 3.7618180193207207`*^9, 
   3.7618180760975833`*^9, 3.761818253673195*^9, 3.7618477275971217`*^9, 
   3.7618478239187307`*^9, 3.7618489650491734`*^9, 3.7618496835364857`*^9, 
   3.7618497551904645`*^9, 3.7618499197413125`*^9, 3.761850044927551*^9, 
   3.7618513452595577`*^9, 3.761853433448691*^9, 3.7622258273288083`*^9, 
   3.7622269619815583`*^9, 3.763518575710345*^9, 3.764818180313289*^9, 
   3.7650029019349213`*^9, 3.765003035913801*^9, 3.765003161042487*^9, 
   3.7650032685477524`*^9, 3.7650033865261374`*^9, {3.7650038334328356`*^9, 
   3.7650038612748957`*^9}, 3.7650041540759816`*^9, 3.7650043156167564`*^9, 
   3.765004354316151*^9, 3.7650135434904165`*^9, 3.7650142879561305`*^9, 
   3.7650148430893764`*^9, 3.7650151073037057`*^9, 3.7650152147032075`*^9, 
   3.765015403282123*^9, 3.7650159540280356`*^9, 3.7654188451714373`*^9, 
   3.7654188963086977`*^9, 3.7654190929548674`*^9, 3.7654200617821684`*^9, 
   3.7654202103757668`*^9, 3.765420554298175*^9, 3.7654249128749094`*^9, 
   3.7654269274201393`*^9, 3.7654275713055086`*^9, 3.765428194395649*^9, {
   3.765428447142803*^9, 3.765428465563546*^9}, 3.7654285892667665`*^9, 
   3.765428636609173*^9, 3.7654290700875883`*^9, 3.765430313841494*^9, 
   3.765433429745579*^9, 3.765433600897213*^9, 3.7657086515588384`*^9, 
   3.7657089100429735`*^9, 3.765709095224798*^9, 3.7657093097407627`*^9, 
   3.765709463549788*^9, 3.765709660140998*^9, 3.765709800760537*^9, 
   3.7657178824494047`*^9, 3.7660935106096115`*^9, 3.766115723699991*^9, 
   3.7661162024462633`*^9, 3.7661164150638056`*^9, 3.7661166269343476`*^9, 
   3.766116708417493*^9, 3.766119519546089*^9, 3.7661196033260946`*^9, 
   3.7661197391389837`*^9, 3.7661198257085333`*^9, 3.766119886517951*^9, 
   3.766119970763711*^9, 3.7661204365244904`*^9, 3.76613807847825*^9, 
   3.7661423020409284`*^9, 3.7661481824297843`*^9, 3.7661521291271152`*^9, 
   3.7661899322318354`*^9, {3.7661966449528756`*^9, 3.766196646225007*^9}, 
   3.7662383521559978`*^9, 3.7662822688223667`*^9, 3.766282853739955*^9, 
   3.7662829759004507`*^9, 3.7663134640131607`*^9, 3.766313756173067*^9, 
   3.7665744681352353`*^9, 3.766574522894508*^9, 3.766574663629074*^9, 
   3.766575181091097*^9, 3.7666302719909697`*^9, 3.7668377872872925`*^9, 
   3.7668398882439594`*^9, 3.7668494524316177`*^9, 3.7668711909007125`*^9, 
   3.7668752467433105`*^9, 3.766875356078853*^9, 3.7668754714544125`*^9, 
   3.7668755252276807`*^9, 3.766875578091322*^9, 3.7668767453382816`*^9, 
   3.7668833967594233`*^9, 3.7668865568990164`*^9, 3.7668866640044556`*^9, 
   3.7669019596043563`*^9, {3.766901993278351*^9, 3.766901998584057*^9}, 
   3.766980401840987*^9, 3.766980963486158*^9, 3.766982321243552*^9, 
   3.767009771096408*^9, 3.7904913826911945`*^9, 3.790556961266152*^9, 
   3.792417010186757*^9, 3.7932630663493123`*^9, 3.793263161681027*^9, 
   3.793263296305196*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"21f1ffdc-8dbb-4b86-b5b7-e21db571e964"],

Cell[BoxData["\<\"Infinity or indeterminate quantity encountered in \
generating function spectral matrices.\"\>"], "Output",
 CellChangeTimes->{
  3.761439824060114*^9, 3.761440104952631*^9, 3.761440192960934*^9, 
   3.7614402306392374`*^9, 3.7614402900846577`*^9, 3.7614403566249666`*^9, 
   3.7614404749259386`*^9, {3.7614405659428234`*^9, 3.7614405870047026`*^9}, 
   3.7614406309139676`*^9, 3.761440873995765*^9, 3.7614409782896895`*^9, 
   3.761441034003256*^9, 3.7614412116285353`*^9, 3.761441271267329*^9, 
   3.7614414472087307`*^9, 3.761441491405086*^9, 3.7614416470475492`*^9, 
   3.761441728118739*^9, 3.761441769547738*^9, 3.7614418196261263`*^9, 
   3.761441879452451*^9, 3.761441955051484*^9, 3.761442121081761*^9, 
   3.7614421896307306`*^9, 3.7614422735495615`*^9, 3.761442620570486*^9, 
   3.7614427975141315`*^9, 3.761442852305795*^9, 3.7614429370411377`*^9, 
   3.7614431223463697`*^9, 3.761443354453816*^9, 3.7614438913994513`*^9, 
   3.761444436148244*^9, 3.7614446422143707`*^9, {3.761444746559482*^9, 
   3.7614447737826567`*^9}, 3.7614448779117208`*^9, 3.7614450226247454`*^9, 
   3.7614451340743637`*^9, 3.7614452155825825`*^9, 3.761445424243777*^9, 
   3.761445580166828*^9, {3.76144846269238*^9, 3.7614484644163685`*^9}, 
   3.7614487115665517`*^9, 3.7614933729473443`*^9, 3.7617877779087543`*^9, 
   3.761787841709532*^9, 3.7617895085438633`*^9, 3.7617906265877614`*^9, 
   3.7617907076754856`*^9, 3.761790827856496*^9, 3.7617913261746936`*^9, 
   3.7617918047122936`*^9, 3.761793857632962*^9, 3.761793927577673*^9, 
   3.761794005926179*^9, 3.761794096773876*^9, 3.7617957852835803`*^9, 
   3.761795966949272*^9, 3.76179853531265*^9, 3.7617988878873796`*^9, 
   3.761799000262947*^9, 3.7617991373081207`*^9, 3.761799277501839*^9, 
   3.7617993592862954`*^9, 3.7617994517996464`*^9, 3.761799520960684*^9, 
   3.7617996004321766`*^9, 3.7618093741609755`*^9, 3.761814728211236*^9, 
   3.7618176294506297`*^9, 3.7618178676152315`*^9, 3.7618180193207207`*^9, 
   3.7618180760975833`*^9, 3.761818253673195*^9, 3.7618477275971217`*^9, 
   3.7618478239187307`*^9, 3.7618489650491734`*^9, 3.7618496835364857`*^9, 
   3.7618497551904645`*^9, 3.7618499197413125`*^9, 3.761850044927551*^9, 
   3.7618513452595577`*^9, 3.761853433448691*^9, 3.7622258273288083`*^9, 
   3.7622269619815583`*^9, 3.763518575710345*^9, 3.764818180313289*^9, 
   3.7650029019349213`*^9, 3.765003035913801*^9, 3.765003161042487*^9, 
   3.7650032685477524`*^9, 3.7650033865261374`*^9, {3.7650038334328356`*^9, 
   3.7650038612748957`*^9}, 3.7650041540759816`*^9, 3.7650043156167564`*^9, 
   3.765004354316151*^9, 3.7650135434904165`*^9, 3.7650142879561305`*^9, 
   3.7650148430893764`*^9, 3.7650151073037057`*^9, 3.7650152147032075`*^9, 
   3.765015403282123*^9, 3.7650159540280356`*^9, 3.7654188451714373`*^9, 
   3.7654188963086977`*^9, 3.7654190929548674`*^9, 3.7654200617821684`*^9, 
   3.7654202103757668`*^9, 3.765420554298175*^9, 3.7654249128749094`*^9, 
   3.7654269274201393`*^9, 3.7654275713055086`*^9, 3.765428194395649*^9, {
   3.765428447142803*^9, 3.765428465563546*^9}, 3.7654285892667665`*^9, 
   3.765428636609173*^9, 3.7654290700875883`*^9, 3.765430313841494*^9, 
   3.765433429745579*^9, 3.765433600897213*^9, 3.7657086515588384`*^9, 
   3.7657089100429735`*^9, 3.765709095224798*^9, 3.7657093097407627`*^9, 
   3.765709463549788*^9, 3.765709660140998*^9, 3.765709800760537*^9, 
   3.7657178824494047`*^9, 3.7660935106096115`*^9, 3.766115723699991*^9, 
   3.7661162024462633`*^9, 3.7661164150638056`*^9, 3.7661166269343476`*^9, 
   3.766116708417493*^9, 3.766119519546089*^9, 3.7661196033260946`*^9, 
   3.7661197391389837`*^9, 3.7661198257085333`*^9, 3.766119886517951*^9, 
   3.766119970763711*^9, 3.7661204365244904`*^9, 3.76613807847825*^9, 
   3.7661423020409284`*^9, 3.7661481824297843`*^9, 3.7661521291271152`*^9, 
   3.7661899322318354`*^9, {3.7661966449528756`*^9, 3.766196646225007*^9}, 
   3.7662383521559978`*^9, 3.7662822688223667`*^9, 3.766282853739955*^9, 
   3.7662829759004507`*^9, 3.7663134640131607`*^9, 3.766313756173067*^9, 
   3.7665744681352353`*^9, 3.766574522894508*^9, 3.766574663629074*^9, 
   3.766575181091097*^9, 3.7666302719909697`*^9, 3.7668377872872925`*^9, 
   3.7668398882439594`*^9, 3.7668494524316177`*^9, 3.7668711909007125`*^9, 
   3.7668752467433105`*^9, 3.766875356078853*^9, 3.7668754714544125`*^9, 
   3.7668755252276807`*^9, 3.766875578091322*^9, 3.7668767453382816`*^9, 
   3.7668833967594233`*^9, 3.7668865568990164`*^9, 3.7668866640044556`*^9, 
   3.7669019596043563`*^9, {3.766901993278351*^9, 3.766901998584057*^9}, 
   3.766980401840987*^9, 3.766980963486158*^9, 3.766982321243552*^9, 
   3.767009771096408*^9, 3.7904913826911945`*^9, 3.790556961266152*^9, 
   3.792417010186757*^9, 3.7932630663493123`*^9, 3.793263161681027*^9, 
   3.7932632963112392`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"3e9df26a-7cab-4937-9259-8c28309c55f7"]
}, Open  ]],

Cell["\<\
Converts the coefficient function f(u) into the corresponding vector for the \
spectral method.\
\>", "Text",
 CellChangeTimes->{
  3.760843238374757*^9, {3.7608452811367435`*^9, 3.760845281967771*^9}, {
   3.7613655316781664`*^9, 3.76136553235482*^9}, {3.7614460520645547`*^9, 
   3.761446079382743*^9}},ExpressionUUID->"e41c8d68-bb69-4724-9856-\
07e7c1f52ff0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"13", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FuncToVector", "[", 
    RowBox[{
    "f_", ",", "var_", ",", "Nmax_", ",", "ulb_", ",", "uub_", ",", 
     "lbpower_", ",", "ubpower_", ",", "method_", ",", "prec_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"funcVector", ",", 
       RowBox[{"Ntotal", " ", "=", " ", 
        RowBox[{"Nmax", "+", "lbpower", "+", "ubpower"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "var", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"funcVector", " ", "=", " ", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "method", ",", "\[IndentingNewLine]", "\"\<Chebyschev\>\"", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"f", " ", "/.", " ", 
              RowBox[{"var", " ", "\[Rule]", " ", 
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   FractionBox[
                    RowBox[{"uub", "-", "ulb"}], "2"], 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"j", " ", "+", " ", "lbpower"}], ")"}], "Ntotal"],
                     "\[Pi]"}], "]"}]}], ")"}]}], "+", "ulb"}], ",", "prec"}],
                 "]"}]}]}], ",", "prec"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "Nmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\"\<Equal\>\"", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"f", " ", "/.", " ", 
              RowBox[{"var", " ", "\[Rule]", " ", 
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"uub", "-", "ulb"}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{"j", "+", "lbpower"}], ")"}]}], "Ntotal"], "+", 
                  "ulb"}], ",", "prec"}], "]"}]}]}], ",", "prec"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "Nmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "_", ",", 
         RowBox[{"ThrowAbort", "[", 
          RowBox[{"FuncToVector", "::", "method"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"funcVector", ",", "Infinity"}], "]"}], "||", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"funcVector", ",", "Indeterminate"}], "]"}]}], ",", 
        RowBox[{"ThrowAbort", "[", 
         RowBox[{"FuncToVector", "::", "infinity"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "funcVector"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.760843282975909*^9, 3.7608432866465983`*^9}, {
   3.760844191180427*^9, 3.7608442650701694`*^9}, {3.760844366112113*^9, 
   3.760844614915043*^9}, {3.7608446531140904`*^9, 3.7608447302814064`*^9}, {
   3.760845302446329*^9, 3.760845308751792*^9}, {3.7608553885893664`*^9, 
   3.7608554306450906`*^9}, {3.7608557104094553`*^9, 3.760855710708453*^9}, {
   3.7608557589461966`*^9, 3.7608557643210583`*^9}, {3.760857667053943*^9, 
   3.760857715849803*^9}, {3.7608577665410757`*^9, 3.760857815492223*^9}, {
   3.760858245022354*^9, 3.7608582458333273`*^9}, {3.7608582856291423`*^9, 
   3.760858296528803*^9}, {3.7608584820894756`*^9, 3.7608584865784507`*^9}, {
   3.760858529261342*^9, 3.760858584387272*^9}, {3.7608588567068415`*^9, 
   3.7608588596631804`*^9}, {3.760859193153393*^9, 3.7608591946288743`*^9}, {
   3.760859351966504*^9, 3.7608593726094165`*^9}, {3.7608596192157197`*^9, 
   3.760859660102977*^9}, {3.7609163173690424`*^9, 3.7609163274774647`*^9}, {
   3.76091644111685*^9, 3.760916456906217*^9}, {3.7609164876388664`*^9, 
   3.7609165863754807`*^9}, {3.760916686193776*^9, 3.760916726421839*^9}, {
   3.7609171423871946`*^9, 3.7609171697947187`*^9}, {3.760917815149337*^9, 
   3.7609178618932905`*^9}, {3.7609180049459934`*^9, 
   3.7609180169507985`*^9}, {3.760918864513273*^9, 3.7609188760773373`*^9}, {
   3.7609189768981657`*^9, 3.7609189771774178`*^9}, {3.7609199470181894`*^9, 
   3.7609199547036304`*^9}, {3.7609208155198417`*^9, 
   3.7609209345933056`*^9}, {3.760920995327833*^9, 3.760921000815154*^9}, {
   3.7609210433673224`*^9, 3.7609210482572412`*^9}, {3.7609267377794466`*^9, 
   3.760926925325213*^9}, {3.76092728687465*^9, 3.760927287240669*^9}, {
   3.760928645457242*^9, 3.760928743151867*^9}, {3.7609293279730463`*^9, 
   3.7609293355218525`*^9}, {3.760929416478284*^9, 3.7609294167535477`*^9}, 
   3.7609301228641796`*^9, {3.7609307211235647`*^9, 3.760930722328342*^9}, {
   3.7609324835267606`*^9, 3.76093248369531*^9}, {3.760932815727501*^9, 
   3.7609328903768034`*^9}, {3.7609336208126554`*^9, 3.760933621019105*^9}, {
   3.760934022157008*^9, 3.7609340222637234`*^9}, {3.76093441499811*^9, 
   3.7609344151277914`*^9}, {3.7609348490150623`*^9, 3.76093484916965*^9}, {
   3.7609356131728473`*^9, 3.760935613292555*^9}, {3.760935798605835*^9, 
   3.760935803646351*^9}, {3.760937246581323*^9, 3.7609372478489323`*^9}, {
   3.7609376381456766`*^9, 3.7609377879668865`*^9}, {3.76093921345712*^9, 
   3.7609392513916397`*^9}, {3.760953693661753*^9, 3.7609536940228825`*^9}, {
   3.760958791746563*^9, 3.760958809639511*^9}, {3.7609588502036943`*^9, 
   3.7609588540152473`*^9}, {3.760958890318265*^9, 3.760958890575117*^9}, {
   3.7609990213319163`*^9, 3.7609990551940403`*^9}, {3.7610018030796337`*^9, 
   3.761001823047246*^9}, {3.761002029888921*^9, 3.761002101174223*^9}, {
   3.761015224877536*^9, 3.761015240655655*^9}, {3.761174850144415*^9, 
   3.7611748536071424`*^9}, {3.761175135839998*^9, 3.7611751669767294`*^9}, 
   3.761175329223779*^9, {3.7611755391836767`*^9, 3.7611755615239096`*^9}, {
   3.7611758339334583`*^9, 3.7611758646967173`*^9}, {3.761216584494746*^9, 
   3.761216600933775*^9}, {3.7612171897498474`*^9, 3.761217190010147*^9}, {
   3.761217251638307*^9, 3.7612172617064033`*^9}, {3.7612215814800186`*^9, 
   3.761221591383751*^9}, {3.761222986168773*^9, 3.7612229960567884`*^9}, {
   3.7612230461935987`*^9, 3.7612230463836527`*^9}, {3.761225532360255*^9, 
   3.7612255416945686`*^9}, {3.761225669569575*^9, 3.761225679233649*^9}, {
   3.761226199697899*^9, 3.761226230334701*^9}, {3.761226500874217*^9, 
   3.7612265281683493`*^9}, {3.761226670279684*^9, 3.7612266814315057`*^9}, {
   3.76122693068495*^9, 3.7612269420610313`*^9}, {3.7612271288388186`*^9, 
   3.761227141061225*^9}, {3.7612271755063286`*^9, 3.7612271776301117`*^9}, {
   3.7612273166183615`*^9, 3.761227327689174*^9}, {3.7612275124204073`*^9, 
   3.7612275240931454`*^9}, {3.7612277360271225`*^9, 
   3.7612277503078547`*^9}, {3.761228128545005*^9, 3.7612281398272705`*^9}, {
   3.7612285087757072`*^9, 3.7612285189805546`*^9}, {3.7612310891406*^9, 
   3.761231100071994*^9}, {3.761231964497904*^9, 3.7612319754988995`*^9}, {
   3.7612331349992113`*^9, 3.76123314632882*^9}, {3.7612367427482777`*^9, 
   3.761236754779323*^9}, {3.7612376224973135`*^9, 3.7612376356205635`*^9}, {
   3.76123794402369*^9, 3.761237954154185*^9}, {3.761278237259724*^9, 
   3.7612782528888245`*^9}, {3.761310904168064*^9, 3.7613109141026626`*^9}, {
   3.761428607199356*^9, 3.761428680938365*^9}, {3.7614302164355392`*^9, 
   3.761430288528617*^9}, {3.761430333122145*^9, 3.7614306363255053`*^9}, {
   3.7614337712976956`*^9, 3.7614338366010437`*^9}, {3.761434248293604*^9, 
   3.761434276725851*^9}, {3.761438764374857*^9, 3.76143880853391*^9}, {
   3.761441519001215*^9, 3.761441558161174*^9}, {3.761441807177915*^9, 
   3.761441807330475*^9}, {3.761441841528262*^9, 3.761441845734969*^9}, {
   3.7614420577526445`*^9, 3.7614420752493267`*^9}, {3.7614446485975323`*^9, 
   3.7614446491211615`*^9}, {3.7614447278743954`*^9, 3.761444732891529*^9}, {
   3.7614457750919247`*^9, 3.7614457948464184`*^9}, 3.7614458284688473`*^9, 
   3.761445932969775*^9, {3.761448979287983*^9, 3.761449032400709*^9}, {
   3.761795423956956*^9, 3.761795430437421*^9}, {3.7617957580503054`*^9, 
   3.761795762952141*^9}, {3.761795908870534*^9, 3.7617959133192005`*^9}, {
   3.7618481342873664`*^9, 3.761848134511891*^9}, {3.7618486090509443`*^9, 
   3.761848609369527*^9}, {3.764996949038527*^9, 3.7649969797355375`*^9}, {
   3.7649986027697678`*^9, 3.764998623126907*^9}, {3.765420425738158*^9, 
   3.7654204274904737`*^9}, {3.7654204585953007`*^9, 
   3.7654205027355547`*^9}, {3.765420679018673*^9, 3.765420679355773*^9}, {
   3.7654284225136604`*^9, 3.7654284407848043`*^9}, {3.766573217365153*^9, 
   3.7665732173807755`*^9}, {3.766574447085832*^9, 3.766574447101487*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"bc753dd6-5cd5-4239-9acb-f59cdb438ae6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FuncToVector", "::", "method"}], " ", "=", " ", 
  "\"\<Unknown method.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FuncToVector", "::", "infinity"}], "=", " ", 
  "\"\<Infinity or indeterminate quantity encountered in evaluating \
coefficient function vectors.\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761430613221736*^9, 3.761430624396701*^9}, {
  3.761444720721779*^9, 3.7614447251114917`*^9}, {3.761445597933025*^9, 
  3.761445598937827*^9}, {3.761449034535432*^9, 3.761449044037612*^9}, {
  3.7614492537158947`*^9, 3.761449273904443*^9}, {3.76542050666006*^9, 
  3.765420536712199*^9}, {3.765420682262001*^9, 3.7654206825362673`*^9}, {
  3.7665732173807755`*^9, 3.7665732173807755`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"8aa23a2e-daa7-4f58-ad14-d2cce8fe0815"],

Cell[BoxData["\<\"Unknown method.\"\>"], "Output",
 CellChangeTimes->{
  3.7614429373363495`*^9, 3.7614431225029507`*^9, 3.7614433545954385`*^9, 
   3.7614438915281076`*^9, 3.761444436328759*^9, 3.7614446425006056`*^9, {
   3.7614447468338575`*^9, 3.761444773943228*^9}, 3.761444878046946*^9, 
   3.7614450227533765`*^9, 3.761445134238947*^9, 3.7614454244781494`*^9, {
   3.761445594979062*^9, 3.7614455996683903`*^9}, 3.761448462868559*^9, 
   3.761448711755211*^9, 3.761493373471939*^9, 3.7617877779653044`*^9, 
   3.761787841754668*^9, 3.7617895086004066`*^9, 3.76179063035785*^9, 
   3.761790711750613*^9, 3.7617908319043503`*^9, 3.7617913262317333`*^9, 
   3.7617918047931414`*^9, 3.7617938577059083`*^9, 3.761793927658024*^9, 
   3.761794005995124*^9, 3.7617940968626585`*^9, 3.7617957853644347`*^9, 
   3.7617959670256405`*^9, 3.761798535418291*^9, 3.7617988879905467`*^9, 
   3.761799000356696*^9, 3.7617991374043446`*^9, 3.7617992775861607`*^9, 
   3.76179935937607*^9, 3.7617994518963666`*^9, 3.761799521049962*^9, 
   3.7617996005199685`*^9, 3.761809374230912*^9, 3.7618147282886047`*^9, 
   3.7618176295314684`*^9, 3.7618178677050076`*^9, 3.7618180194124775`*^9, 
   3.7618180761952944`*^9, 3.7618182537644587`*^9, 3.761847727704258*^9, 
   3.7618478240566187`*^9, 3.761848965173669*^9, 3.761849683677844*^9, 
   3.761849755402752*^9, 3.76184991987672*^9, 3.7618500450599823`*^9, 
   3.7618513453964534`*^9, 3.7618534336679225`*^9, 3.762225827382691*^9, 
   3.762226962031426*^9, 3.7635185757415853`*^9, 3.7648181803866963`*^9, 
   3.7650029019857826`*^9, 3.7650030359786263`*^9, 3.7650031611372347`*^9, 
   3.765003268617566*^9, 3.7650033866158953`*^9, {3.7650038335066395`*^9, 
   3.765003861345706*^9}, 3.7650041541537733`*^9, 3.765004315687567*^9, 
   3.7650043544059114`*^9, 3.76501354360941*^9, 3.7650142880362606`*^9, 
   3.7650148431829853`*^9, 3.7650151073901453`*^9, 3.765015214791936*^9, 
   3.7650154033618174`*^9, 3.765418845298098*^9, 3.765418896482233*^9, 
   3.765419093118433*^9, 3.7654200619287767`*^9, 3.765420210577227*^9, 
   3.7654205544796886`*^9, 3.765424913019523*^9, 3.765426927668475*^9, 
   3.765427571465082*^9, 3.7654281946020947`*^9, {3.7654284473063655`*^9, 
   3.7654284659495144`*^9}, 3.7654285896567235`*^9, 3.76542863677872*^9, 
   3.7654290702880535`*^9, 3.7654303138736353`*^9, 3.7654334298164454`*^9, 
   3.7654336009646254`*^9, 3.765708651638315*^9, 3.7657089101999907`*^9, 
   3.7657090952991447`*^9, 3.765709309822671*^9, 3.7657094636405783`*^9, 
   3.7657096601873093`*^9, 3.765709800875121*^9, 3.7657178826065593`*^9, 
   3.766093510652524*^9, 3.7661157237688074`*^9, 3.7661162025190673`*^9, 
   3.7661164151515727`*^9, 3.7661166270231123`*^9, 3.7661167085092487`*^9, 
   3.76611951963585*^9, 3.7661196034118648`*^9, 3.7661197392367244`*^9, 
   3.7661198258002863`*^9, 3.766119886610704*^9, 3.7661199708544707`*^9, 
   3.766120436614251*^9, 3.7661380786378455`*^9, 3.7661423021925244`*^9, 
   3.7661481826308284`*^9, 3.7661521295180826`*^9, 3.7661899322777076`*^9, {
   3.766196645013715*^9, 3.7661966462834787`*^9}, 3.7662383522228193`*^9, 
   3.766282268992736*^9, 3.7662828538526793`*^9, 3.766282975988214*^9, 
   3.766313464078986*^9, 3.766313761023073*^9, 3.7665744681664767`*^9, 
   3.766574522925752*^9, 3.766574663800789*^9, 3.7665751811379633`*^9, 
   3.7666302720600224`*^9, 3.7668377873740926`*^9, 3.766839888274712*^9, 
   3.7668494525347853`*^9, 3.766871191010829*^9, 3.7668752468588796`*^9, 
   3.7668753561939244`*^9, 3.76687547163198*^9, 3.766875525402273*^9, 
   3.7668755782143145`*^9, 3.7668767455337067`*^9, 3.7668833968680487`*^9, 
   3.7668865571033754`*^9, 3.7668866641314325`*^9, 3.766901960080515*^9, {
   3.7669019935079985`*^9, 3.7669019989401836`*^9}, 3.7669804020240116`*^9, 
   3.766980963823437*^9, 3.7669823213818383`*^9, 3.767009771171305*^9, 
   3.7904913827870083`*^9, 3.7905569614486637`*^9, 3.7924170102956924`*^9, 
   3.7932630664125385`*^9, 3.7932631617438617`*^9, 3.7932632963709965`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"0949a253-a4fc-46c6-a00f-a66f6aaeab91"],

Cell[BoxData["\<\"Infinity or indeterminate quantity encountered in \
evaluating coefficient function vectors.\"\>"], "Output",
 CellChangeTimes->{
  3.7614429373363495`*^9, 3.7614431225029507`*^9, 3.7614433545954385`*^9, 
   3.7614438915281076`*^9, 3.761444436328759*^9, 3.7614446425006056`*^9, {
   3.7614447468338575`*^9, 3.761444773943228*^9}, 3.761444878046946*^9, 
   3.7614450227533765`*^9, 3.761445134238947*^9, 3.7614454244781494`*^9, {
   3.761445594979062*^9, 3.7614455996683903`*^9}, 3.761448462868559*^9, 
   3.761448711755211*^9, 3.761493373471939*^9, 3.7617877779653044`*^9, 
   3.761787841754668*^9, 3.7617895086004066`*^9, 3.76179063035785*^9, 
   3.761790711750613*^9, 3.7617908319043503`*^9, 3.7617913262317333`*^9, 
   3.7617918047931414`*^9, 3.7617938577059083`*^9, 3.761793927658024*^9, 
   3.761794005995124*^9, 3.7617940968626585`*^9, 3.7617957853644347`*^9, 
   3.7617959670256405`*^9, 3.761798535418291*^9, 3.7617988879905467`*^9, 
   3.761799000356696*^9, 3.7617991374043446`*^9, 3.7617992775861607`*^9, 
   3.76179935937607*^9, 3.7617994518963666`*^9, 3.761799521049962*^9, 
   3.7617996005199685`*^9, 3.761809374230912*^9, 3.7618147282886047`*^9, 
   3.7618176295314684`*^9, 3.7618178677050076`*^9, 3.7618180194124775`*^9, 
   3.7618180761952944`*^9, 3.7618182537644587`*^9, 3.761847727704258*^9, 
   3.7618478240566187`*^9, 3.761848965173669*^9, 3.761849683677844*^9, 
   3.761849755402752*^9, 3.76184991987672*^9, 3.7618500450599823`*^9, 
   3.7618513453964534`*^9, 3.7618534336679225`*^9, 3.762225827382691*^9, 
   3.762226962031426*^9, 3.7635185757415853`*^9, 3.7648181803866963`*^9, 
   3.7650029019857826`*^9, 3.7650030359786263`*^9, 3.7650031611372347`*^9, 
   3.765003268617566*^9, 3.7650033866158953`*^9, {3.7650038335066395`*^9, 
   3.765003861345706*^9}, 3.7650041541537733`*^9, 3.765004315687567*^9, 
   3.7650043544059114`*^9, 3.76501354360941*^9, 3.7650142880362606`*^9, 
   3.7650148431829853`*^9, 3.7650151073901453`*^9, 3.765015214791936*^9, 
   3.7650154033618174`*^9, 3.765418845298098*^9, 3.765418896482233*^9, 
   3.765419093118433*^9, 3.7654200619287767`*^9, 3.765420210577227*^9, 
   3.7654205544796886`*^9, 3.765424913019523*^9, 3.765426927668475*^9, 
   3.765427571465082*^9, 3.7654281946020947`*^9, {3.7654284473063655`*^9, 
   3.7654284659495144`*^9}, 3.7654285896567235`*^9, 3.76542863677872*^9, 
   3.7654290702880535`*^9, 3.7654303138736353`*^9, 3.7654334298164454`*^9, 
   3.7654336009646254`*^9, 3.765708651638315*^9, 3.7657089101999907`*^9, 
   3.7657090952991447`*^9, 3.765709309822671*^9, 3.7657094636405783`*^9, 
   3.7657096601873093`*^9, 3.765709800875121*^9, 3.7657178826065593`*^9, 
   3.766093510652524*^9, 3.7661157237688074`*^9, 3.7661162025190673`*^9, 
   3.7661164151515727`*^9, 3.7661166270231123`*^9, 3.7661167085092487`*^9, 
   3.76611951963585*^9, 3.7661196034118648`*^9, 3.7661197392367244`*^9, 
   3.7661198258002863`*^9, 3.766119886610704*^9, 3.7661199708544707`*^9, 
   3.766120436614251*^9, 3.7661380786378455`*^9, 3.7661423021925244`*^9, 
   3.7661481826308284`*^9, 3.7661521295180826`*^9, 3.7661899322777076`*^9, {
   3.766196645013715*^9, 3.7661966462834787`*^9}, 3.7662383522228193`*^9, 
   3.766282268992736*^9, 3.7662828538526793`*^9, 3.766282975988214*^9, 
   3.766313464078986*^9, 3.766313761023073*^9, 3.7665744681664767`*^9, 
   3.766574522925752*^9, 3.766574663800789*^9, 3.7665751811379633`*^9, 
   3.7666302720600224`*^9, 3.7668377873740926`*^9, 3.766839888274712*^9, 
   3.7668494525347853`*^9, 3.766871191010829*^9, 3.7668752468588796`*^9, 
   3.7668753561939244`*^9, 3.76687547163198*^9, 3.766875525402273*^9, 
   3.7668755782143145`*^9, 3.7668767455337067`*^9, 3.7668833968680487`*^9, 
   3.7668865571033754`*^9, 3.7668866641314325`*^9, 3.766901960080515*^9, {
   3.7669019935079985`*^9, 3.7669019989401836`*^9}, 3.7669804020240116`*^9, 
   3.766980963823437*^9, 3.7669823213818383`*^9, 3.767009771171305*^9, 
   3.7904913827870083`*^9, 3.7905569614486637`*^9, 3.7924170102956924`*^9, 
   3.7932630664125385`*^9, 3.7932631617438617`*^9, 3.7932632963758955`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"b234eace-d92c-4e29-a05e-db4365ea448f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculation of modes", "Section",
 CellChangeTimes->{{3.760506268489052*^9, 3.7605062747989006`*^9}, {
  3.760516581844964*^9, 
  3.7605165847797537`*^9}},ExpressionUUID->"c9c08da8-91a6-4361-964a-\
807bcf876088"],

Cell[TextData[{
 "Calculates the spectrum of ",
 StyleBox["eqn",
  FontWeight->"Bold"],
 " from a Bernstein basis of order ",
 StyleBox["n",
  FontWeight->"Bold"],
 ", with machine precision ",
 StyleBox["prec",
  FontWeight->"Bold"],
 ". "
}], "Text",
 CellChangeTimes->{{3.7607559969867373`*^9, 3.760755997512392*^9}, {
  3.760757373790383*^9, 3.7607574075981655`*^9}, {3.760757441459056*^9, 
  3.7607574427453547`*^9}, {3.7607601925694075`*^9, 3.7607602087710915`*^9}, {
  3.760842788337599*^9, 3.7608427947274218`*^9}, {3.76084283194277*^9, 
  3.7608428355984573`*^9}, {3.760843036065216*^9, 
  3.7608430407543736`*^9}},ExpressionUUID->"97878f0b-3da8-410e-b139-\
a7fe86ee601b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"04", "/", "23"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GetModes", "[", 
     RowBox[{"eqn_", ",", 
      RowBox[{"{", 
       RowBox[{"n_", ",", "prec_"}], "}"}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{"BoundaryOptions", ",", "NumericalOptions"}], "}"}], 
        "]"}]}]}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"MList", ",", "A", ",", "B", ",", "EVs"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MList", " ", "=", " ", 
        RowBox[{"DeconstructEquation", "[", 
         RowBox[{"eqn", ",", "n", ",", "opts"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"A", ",", "B"}], "}"}], " ", "=", " ", 
        RowBox[{"MListToLinear", "[", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{"MList", ",", "prec"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"A", "=", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{"A", ",", "prec"}], "]"}]}], ";", 
       RowBox[{"B", "=", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{"B", ",", "prec"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"B", " ", "\[Equal]", " ", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"First", "@", 
            RowBox[{"Dimensions", "[", "B", "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"A", "=", 
           RowBox[{"SetPrecision", "[", 
            RowBox[{"A", ",", "prec"}], "]"}]}], ";", 
          RowBox[{"EVs", " ", "=", " ", 
           RowBox[{"Eigenvalues", "[", "A", "]"}]}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"A", " ", "\[Equal]", " ", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"First", "@", 
            RowBox[{"Dimensions", "[", "A", "]"}]}], "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"EVs", ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"GetModes", "::", "infinity"}], "]"}], ";", 
             RowBox[{"EVs", "=", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"EVs", ",", "0"}], "]"}]}], ";"}]}], "]"}], ";", 
          RowBox[{"EVs", " ", "=", " ", 
           FractionBox["1", 
            RowBox[{"Eigenvalues", "[", "B", "]"}]]}], ";"}], ",", " ", 
         "\[IndentingNewLine]", "True", ",", 
         RowBox[{
          RowBox[{"EVs", " ", "=", " ", 
           RowBox[{"Eigenvalues", "[", 
            RowBox[{"{", 
             RowBox[{"A", ",", "B"}], "}"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"EVs", ",", "Infinity"}], "]"}], "||", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"EVs", ",", "Indeterminate"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"GetModes", "::", "infinity"}], "]"}], ";", " ", 
          RowBox[{"EVs", "=", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{"EVs", ",", "Infinity"}], "]"}], ",", "Indeterminate"}],
             "]"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sort", "[", "EVs", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetModes", "[", 
     RowBox[{"eqn_", ",", "n_Integer", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{"BoundaryOptions", ",", "NumericalOptions"}], "}"}], 
        "]"}]}]}], "]"}], ":=", " ", 
    RowBox[{"GetModes", "[", 
     RowBox[{"eqn", ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        FractionBox["n", "2"]}], "}"}], ",", "opts"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7605165891573315`*^9, 3.7605167253085346`*^9}, {
   3.7605167838698063`*^9, 3.7605168038481297`*^9}, {3.7605170798327446`*^9, 
   3.760517092049307*^9}, {3.7607600342638845`*^9, 3.760760034595997*^9}, {
   3.7609379693257313`*^9, 3.7609380343248544`*^9}, {3.7614399669477987`*^9, 
   3.761439972518916*^9}, {3.761446823798173*^9, 3.7614468455568647`*^9}, {
   3.76144688062162*^9, 3.761446888433072*^9}, {3.7614469289967136`*^9, 
   3.761446972568452*^9}, {3.7614470080210695`*^9, 3.761447026218565*^9}, {
   3.7614894669167976`*^9, 3.7614894988753195`*^9}, {3.7614895423980455`*^9, 
   3.7614895427102113`*^9}, 3.7649967029360137`*^9, {3.7649972821863375`*^9, 
   3.764997350329773*^9}, {3.7649979984890475`*^9, 3.764998007034606*^9}, {
   3.7649986764167995`*^9, 3.764998689651144*^9}, {3.7650032473257213`*^9, 
   3.7650032611953263`*^9}, {3.765003359328336*^9, 3.765003362313674*^9}, {
   3.765003794726963*^9, 3.7650037963023415`*^9}, {3.7650041359814796`*^9, 
   3.76500413606625*^9}, {3.765004306620063*^9, 3.765004339595442*^9}, {
   3.7650044073877096`*^9, 3.765004419918726*^9}, {3.7650044537483635`*^9, 
   3.7650046073636904`*^9}, {3.7650049495936246`*^9, 3.765004951173545*^9}, {
   3.7654248308632097`*^9, 3.765424844538639*^9}, {3.766136069477369*^9, 
   3.7661360703699827`*^9}, {3.766137308871797*^9, 3.7661373505042844`*^9}, 
   3.7661374359502316`*^9, {3.766238266215767*^9, 3.766238268055851*^9}, 
   3.766573121132179*^9, 3.76657319039222*^9, {3.7665735826021833`*^9, 
   3.7665735826021833`*^9}, {3.767257043795583*^9, 3.7672571406503987`*^9}, {
   3.7672573389993305`*^9, 3.767257356865765*^9}, {3.767257711858704*^9, 
   3.7672577130857134`*^9}, {3.767257772593069*^9, 3.767257773697256*^9}, {
   3.7672578333697443`*^9, 3.7672578384683075`*^9}, {3.76725795981279*^9, 
   3.76725796494215*^9}, 3.7672590679412923`*^9, {3.7672591818517494`*^9, 
   3.7672591860894356`*^9}, {3.7672601325985794`*^9, 3.767260158208186*^9}, {
   3.7672628427321296`*^9, 3.7672628479346657`*^9}, {3.7672629207481356`*^9, 
   3.767262923584478*^9}, {3.7672632364579725`*^9, 3.7672632441883883`*^9}, {
   3.767263709622512*^9, 3.76726371177716*^9}, 3.767263933495284*^9, {
   3.7672668628717575`*^9, 3.767266870506906*^9}, {3.767269051849956*^9, 
   3.767269081135664*^9}, {3.767269315495147*^9, 3.7672693342653055`*^9}, {
   3.7672694792192917`*^9, 3.767269483914342*^9}, {3.767269532533155*^9, 
   3.767269564855213*^9}, {3.767269679009142*^9, 3.7672697119199667`*^9}, {
   3.767269884454372*^9, 3.7672698943541656`*^9}, {3.7672699626390038`*^9, 
   3.7672699730233436`*^9}, {3.767270149264147*^9, 3.767270149948453*^9}, {
   3.7672706188391824`*^9, 3.7672706197192535`*^9}, {3.7724458295312433`*^9, 
   3.772445838360634*^9}, {3.7932626106747913`*^9, 3.7932626846201353`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"448b1ee7-7286-4548-97f4-626157fb4e92"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetModes", "::", "infinity"}], " ", "=", " ", 
   "\"\<Infinite or indeterminate eigenvalues encountered. Calculation \
continues, but we have removed these eigenvalues.\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76144689777938*^9, 3.761446912452724*^9}, {
   3.761446942528797*^9, 3.7614469533792257`*^9}, {3.766136159009494*^9, 
   3.7661361940109425`*^9}, 3.7665735826021833`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"d591e845-8790-43f6-9fc8-29f4fd8ea8e4"],

Cell[TextData[{
 "Calculates the spectrum of ",
 StyleBox["eqn ",
  FontWeight->"Bold"],
 "using two Bernstein basis of order ",
 StyleBox["n1 ",
  FontWeight->"Bold"],
 "and ",
 StyleBox["n2",
  FontWeight->"Bold"],
 ", calculated with machine precision ",
 StyleBox["prec1 ",
  FontWeight->"Bold"],
 "and ",
 StyleBox["prec2",
  FontWeight->"Bold"],
 " respectively, and keeps modes shared by both spectra that agree to a ",
 StyleBox["Cutoff",
  FontWeight->"Bold"],
 " number of digits. One may set whether the agreement is in the magnitude of \
the modes, or in the digits shared by the real and imaginary parts \
separately, toggled by ",
 StyleBox["TestMagnitude",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.760760150956663*^9, 
  3.7607603824297967`*^9}},ExpressionUUID->"e0ff1748-95fd-4c9d-b7ff-\
dabdb94c0bda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"04", "/", "23"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{"eqn_", ",", "grids_List", ",", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
         "ComparisonOptions", ",", "BoundaryOptions", ",", 
          "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], " ", ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sortedgrid", ",", "spectra"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sortedgrid", " ", "=", " ", 
        RowBox[{"SortBy", "[", 
         RowBox[{"grids", ",", "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"spectra", " ", "=", " ", 
        RowBox[{"CatchAbort", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"GetModes", "[", 
            RowBox[{"eqn", ",", 
             RowBox[{
             "sortedgrid", "\[LeftDoubleBracket]", "k", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"FilterRules", "[", 
              RowBox[{
               RowBox[{"{", "opts", "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "LowerBound", ",", "UpperBound", ",", "LBPower", ",", 
                 "UBPower", ",", "FunctionPrecision", ",", 
                 "CollocationGrid"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             RowBox[{"Length", "[", "sortedgrid", "]"}]}], "}"}]}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"CompareModes", "[", 
        RowBox[{"spectra", ",", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opts", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Cutoff", ",", "TestMagnitude"}], "}"}]}], "]"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{"eqn_", ",", 
      RowBox[{"{", 
       RowBox[{"n1_", ",", "prec1_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n2_", ",", "prec2_"}], "}"}], ",", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
         "ComparisonOptions", ",", "BoundaryOptions", ",", 
          "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{"eqn", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n1", ",", "prec1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n2", ",", "prec2"}], "}"}]}], "}"}], ",", "opts"}], "]"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{"eqn_", ",", "n1_Integer", ",", "n2_Integer", ",", " ", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
         "ComparisonOptions", ",", "BoundaryOptions", ",", 
          "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"GetAccurateModes", "[", 
     RowBox[{"eqn", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n1", ",", 
          FractionBox["n1", "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n2", ",", 
          FractionBox["n2", "2"]}], "}"}]}], "}"}], ",", "opts"}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7605191363762264`*^9, 3.760519197156742*^9}, {
   3.7605192948454413`*^9, 3.7605192977104893`*^9}, {3.760519341140026*^9, 
   3.7605195317647114`*^9}, {3.7605196184373703`*^9, 3.760519623329338*^9}, {
   3.7605204111338153`*^9, 3.7605204155307007`*^9}, {3.7605221745402555`*^9, 
   3.7605221946552854`*^9}, {3.7605222264848623`*^9, 
   3.7605223520471563`*^9}, {3.760522847764045*^9, 3.7605228597359457`*^9}, {
   3.7605234229147263`*^9, 3.760523447756137*^9}, {3.7607570853592205`*^9, 
   3.760757127804146*^9}, {3.7607603843027873`*^9, 3.7607604370138955`*^9}, {
   3.7607604751119995`*^9, 3.7607604806581726`*^9}, {3.7609384089347525`*^9, 
   3.7609384511617594`*^9}, {3.7609384855428157`*^9, 
   3.7609385510505466`*^9}, {3.76093872274135*^9, 3.7609387527710457`*^9}, {
   3.760967564855727*^9, 3.760967576581106*^9}, {3.7613643890579214`*^9, 
   3.7613643904821453`*^9}, 3.7614462374453983`*^9, {3.7614462821425514`*^9, 
   3.761446347968718*^9}, {3.7614464052856607`*^9, 3.7614464387906704`*^9}, {
   3.7614465113881025`*^9, 3.7614466922142334`*^9}, {3.761447037905203*^9, 
   3.7614470790774755`*^9}, {3.7614895807481833`*^9, 
   3.7614897462725096`*^9}, {3.7614929354477224`*^9, 3.761492944809685*^9}, 
   3.761789505026744*^9, 3.7649967029360137`*^9, {3.7649968484955063`*^9, 
   3.764996853980471*^9}, {3.7649980185769973`*^9, 3.764998080421362*^9}, {
   3.765001816268958*^9, 3.7650018436692533`*^9}, {3.7650029974022636`*^9, 
   3.7650030317879796`*^9}, {3.7650032513099327`*^9, 
   3.7650032665130615`*^9}, {3.7650033694904356`*^9, 
   3.7650033732852325`*^9}, {3.7650038017790775`*^9, 3.765003806366971*^9}, {
   3.765005492552389*^9, 3.7650055933563304`*^9}, {3.7650056285686774`*^9, 
   3.7650056289427485`*^9}, {3.765005695463189*^9, 3.7650057119127617`*^9}, {
   3.765005776872887*^9, 3.765005779033023*^9}, 3.765012149533656*^9, {
   3.765012227504057*^9, 3.7650123977654715`*^9}, {3.7650124444650974`*^9, 
   3.765012462483508*^9}, {3.765018790895341*^9, 3.765018795689446*^9}, 
   3.7654276369821615`*^9, 3.766573582617805*^9, {3.7665736324786935`*^9, 
   3.7665736324786935`*^9}, 3.766573724711455*^9, 3.7665744551637373`*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"3492aa83-819a-42f7-bd21-2c5d96051f7a"],

Cell[TextData[{
 "Compares two spectra, and keeps modes shared by both spectra that agree to \
a ",
 StyleBox["Cutoff",
  FontWeight->"Bold"],
 " number of digits. One may set whether the agreement is in the magnitude of \
the modes, or in the digits ahred by the real and imaginary parts separately, \
toggled by ",
 StyleBox["TestMagnitude",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.7607606052210407`*^9, 
  3.7607606952084513`*^9}},ExpressionUUID->"4c35cdbc-f7fa-4de4-8ca5-\
6e6c547fc51d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"05", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CompareModes", "[", 
     RowBox[{"spectra_List", ",", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "ComparisonOptions", "]"}]}]}], "]"}], 
    " ", ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "sortedspectra", ",", "filteredspectra", ",", "\[IndentingNewLine]", 
        RowBox[{"cutoff", "=", 
         RowBox[{"OptionValue", "[", "Cutoff", "]"}]}], ",", 
        RowBox[{"testmagnitude", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "TestMagnitude", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sortedspectra", "=", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{"spectra", ",", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "&"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filteredspectra", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"testmagnitude", ",", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
              "sortedspectra", "\[LeftDoubleBracket]", "k", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"MagPrecision", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{
                   RowBox[{"sortedspectra", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"k", "-", "1"}]}], "\[RightDoubleBracket]"}], "~",
                    "Join", "~", 
                   RowBox[{"sortedspectra", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"k", "+", "1"}], ";;", 
                    RowBox[{"Length", "[", "sortedspectra", "]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}], "\[GreaterEqual]", 
                " ", "cutoff"}], " ", "&"}]}], "]"}], ",", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
              "sortedspectra", "\[LeftDoubleBracket]", "k", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"IndivPrecision", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{
                   RowBox[{"sortedspectra", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"k", "-", "1"}]}], "\[RightDoubleBracket]"}], "~",
                    "Join", "~", 
                   RowBox[{"sortedspectra", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"k", "+", "1"}], ";;", 
                    RowBox[{"Length", "[", "sortedspectra", "]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}], "\[GreaterEqual]", 
                " ", "cutoff"}], " ", "&"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "sortedspectra", "]"}]}], "}"}]}], 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CompareModes", "[", 
     RowBox[{"spectrum1_List", ",", "spectrum2_List", ",", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "ComparisonOptions", "]"}]}]}], "]"}], 
    "  ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{"CompareModes", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"spectrum1", ",", "spectrum2"}], "}"}], ",", "opts"}], "]"}], 
     ")"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.760756248302178*^9, 3.7607563228505244`*^9}, {
   3.7607563571551704`*^9, 3.7607563585350156`*^9}, {3.760756463541851*^9, 
   3.7607566390522175`*^9}, 3.7607567332786007`*^9, {3.760756774409272*^9, 
   3.7607567850870028`*^9}, {3.7607568496186604`*^9, 3.760756849861912*^9}, {
   3.7607569472385883`*^9, 3.7607570729295683`*^9}, 3.7607575256246505`*^9, {
   3.760757681654106*^9, 3.7607576929933715`*^9}, {3.760758078773173*^9, 
   3.76075809206264*^9}, {3.7607581348642063`*^9, 3.7607581482444086`*^9}, {
   3.7607582313532343`*^9, 3.760758260646912*^9}, {3.7607584152784605`*^9, 
   3.7607584411822367`*^9}, {3.760759912090528*^9, 3.7607599357373343`*^9}, {
   3.7609456625783234`*^9, 3.7609456676283937`*^9}, {3.761489762894122*^9, 
   3.761489767771181*^9}, {3.7618089654470167`*^9, 3.761808965616152*^9}, {
   3.765012479716427*^9, 3.765012531190962*^9}, {3.7650126209647827`*^9, 
   3.7650126824723015`*^9}, {3.76501310562435*^9, 3.7650132785766807`*^9}, {
   3.7650171672847605`*^9, 3.765017200826787*^9}, {3.765017349250459*^9, 
   3.7650173514246454`*^9}, {3.7650174560347247`*^9, 
   3.7650174576208076`*^9}, {3.765098736759443*^9, 3.7650987369059095`*^9}, {
   3.7665737247270746`*^9, 3.766573757150487*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"9864cbdb-d735-4384-aa01-3972c3e87b1e"],

Cell[TextData[{
 "Compares a frequency ",
 StyleBox["\[Omega]test ",
  FontWeight->"Bold"],
 "to a list of frequencies ",
 StyleBox["\[Omega]ref",
  FontWeight->"Bold"],
 " by taking the closest frequency from the list, returning the number of \
agreed digits."
}], "Text",
 CellChangeTimes->{{3.7607607102392635`*^9, 3.760760752172182*^9}, {
  3.7607608243272376`*^9, 
  3.7607608605065093`*^9}},ExpressionUUID->"aaed07fd-2e13-42f5-b8f6-\
ea57c6912c5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"02", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MagPrecision", "[", 
    RowBox[{"\[Omega]test_", ",", "\[Omega]ref_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "avemag", ",", "agreedDigits", ",", "\[Omega]samelist", ",", 
       "\[Omega]same"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Omega]samelist", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"MinimalBy", "[", 
           RowBox[{
            RowBox[{
            "\[Omega]ref", "\[LeftDoubleBracket]", "k", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"#", "-", "\[Omega]test"}], "]"}], "&"}]}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "\[Omega]ref", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]same", " ", "=", " ", 
       RowBox[{"First", "@", 
        RowBox[{"MaximalBy", "[", 
         RowBox[{"\[Omega]samelist", ",", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#", "-", "\[Omega]test"}], "]"}], "&"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"avemag", " ", "=", " ", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{"\[Omega]test", "+", "\[Omega]same"}], "2"], "]"}], "]"}],
          "/.", " ", 
         RowBox[{
          RowBox[{"-", "Infinity"}], "\[Rule]", "0"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"agreedDigits", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"Ceiling", "[", 
           RowBox[{
            RowBox[{"Log10", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"\[Omega]test", "-", "\[Omega]same"}], "]"}], "]"}], "/.",
             " ", 
            RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
             RowBox[{"-", 
              RowBox[{"Min", "[", 
               RowBox[{"Precision", "/@", 
                RowBox[{"{", 
                 RowBox[{"\[Omega]test", ",", "\[Omega]same"}], "}"}]}], 
               "]"}]}]}]}], "]"}]}], ")"}], "+", "avemag"}]}], ";", 
      "\[IndentingNewLine]", "agreedDigits"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7605214785978904`*^9, 3.760521502979295*^9}, {
   3.76052194911007*^9, 3.7605219615306287`*^9}, {3.7605220349807997`*^9, 
   3.760522042509359*^9}, {3.760522105174015*^9, 3.7605221058925953`*^9}, {
   3.7605223549370117`*^9, 3.7605226683370886`*^9}, {3.7605250292142096`*^9, 
   3.7605250393944564`*^9}, {3.7605253691642723`*^9, 
   3.7605253697243853`*^9}, {3.760535398049329*^9, 3.7605354018833485`*^9}, {
   3.760758142530681*^9, 3.7607581426593637`*^9}, {3.7607584594024925`*^9, 
   3.760758466311021*^9}, {3.76094310138338*^9, 3.760943110538888*^9}, 
   3.7635182952828298`*^9, 3.763518345238145*^9, {3.763518392669943*^9, 
   3.7635183966297927`*^9}, {3.7650133120170555`*^9, 
   3.7650133937584953`*^9}, {3.7650134500781727`*^9, 3.765013464951456*^9}, {
   3.765017149537185*^9, 3.7650171520947394`*^9}, {3.765017224556915*^9, 
   3.7650172889291706`*^9}, 3.7650173881386943`*^9, {3.7654333852122965`*^9, 
   3.7654334252296376`*^9}, {3.765433565032257*^9, 3.765433598108304*^9}, {
   3.765709621423005*^9, 3.765709626528372*^9}, {3.7661940937632504`*^9, 
   3.7661941231050425`*^9}, 3.7665737470733433`*^9, {3.7675117939053993`*^9, 
   3.7675118070532255`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"3a5de03d-6163-4b52-8c16-808c364bb9f4"],

Cell[TextData[{
 "Compares a frequency ",
 StyleBox["\[Omega]test",
  FontWeight->"Bold"],
 " to a list of frequencies ",
 StyleBox["\[Omega]ref",
  FontWeight->"Bold"],
 " by taking the closest frequency from the list, returning the smaller of \
the agreed digits of the real and imaginary parts."
}], "Text",
 CellChangeTimes->{{3.7607610020390935`*^9, 3.7607610575127797`*^9}, {
  3.7609360100332394`*^9, 
  3.760936011572125*^9}},ExpressionUUID->"9188bf04-b369-4b8e-bd90-\
82b21c945139"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"05", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IndivPrecision", "[", 
    RowBox[{"\[Omega]test_", ",", "\[Omega]ref_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "reave\[Omega]", ",", "imave\[Omega]", ",", "re\[Omega]test", ",", 
       "im\[Omega]test", ",", "re\[Omega]same", ",", "im\[Omega]same", ",", 
       "reagreedDigits", ",", "imagreedDigits", ",", "\[Omega]samelist", ",", 
       "\[Omega]same"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Omega]samelist", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"MinimalBy", "[", 
           RowBox[{
            RowBox[{
            "\[Omega]ref", "\[LeftDoubleBracket]", "k", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"#", "-", "\[Omega]test"}], "]"}], "&"}]}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "\[Omega]ref", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]same", " ", "=", " ", 
       RowBox[{"First", "@", 
        RowBox[{"MaximalBy", "[", 
         RowBox[{"\[Omega]samelist", ",", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#", "-", "\[Omega]test"}], "]"}], "&"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"re\[Omega]same", " ", "=", " ", 
       RowBox[{"Re", "[", "\[Omega]same", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"im\[Omega]same", " ", "=", " ", 
       RowBox[{"Im", "[", "\[Omega]same", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"re\[Omega]test", " ", "=", " ", 
       RowBox[{"Re", "[", "\[Omega]test", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"im\[Omega]test", " ", "=", " ", 
       RowBox[{"Im", "[", "\[Omega]test", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"reave\[Omega]", " ", "=", " ", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{"re\[Omega]test", "+", "re\[Omega]same"}], "2"], "]"}], 
          "]"}], "/.", " ", 
         RowBox[{
          RowBox[{"-", "Infinity"}], "\[Rule]", " ", "0"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"imave\[Omega]", " ", "=", " ", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{"im\[Omega]test", "+", "im\[Omega]same", " "}], "2"], 
           "]"}], "]"}], "/.", " ", 
         RowBox[{
          RowBox[{"-", "Infinity"}], " ", "\[Rule]", " ", "0"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"reagreedDigits", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"Floor", "[", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Log10", "[", 
               RowBox[{"Abs", "[", 
                RowBox[{"re\[Omega]test", "-", "re\[Omega]same"}], "]"}], 
               "]"}], " ", "/.", " ", 
              RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
               RowBox[{"-", 
                RowBox[{"Min", "[", 
                 RowBox[{"Precision", "/@", 
                  RowBox[{"{", 
                   RowBox[{"\[Omega]test", ",", "\[Omega]same"}], "}"}]}], 
                 "]"}]}]}]}], ",", "0.5"}], "]"}], "]"}]}], " ", ")"}], "+", 
        " ", "reave\[Omega]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"imagreedDigits", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"Floor", "[", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Log10", "[", 
               RowBox[{"Abs", "[", 
                RowBox[{"im\[Omega]test", "-", "im\[Omega]same"}], "]"}], 
               "]"}], " ", "/.", " ", 
              RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
               RowBox[{"-", 
                RowBox[{"Min", "[", 
                 RowBox[{"Precision", "/@", 
                  RowBox[{"{", 
                   RowBox[{"\[Omega]test", ",", "\[Omega]same"}], "}"}]}], 
                 "]"}]}]}]}], ",", "0.5"}], "]"}], "]"}]}], ")"}], " ", "+", 
        " ", "imave\[Omega]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Min", "[", 
       RowBox[{"reagreedDigits", ",", "imagreedDigits"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7607584705955997`*^9, 3.7607584747045794`*^9}, {
   3.7607585139177375`*^9, 3.76075852310318*^9}, {3.760759372989871*^9, 
   3.7607594153925037`*^9}, {3.7607595506419*^9, 3.760759807256813*^9}, {
   3.7607598707251263`*^9, 3.7607598979014645`*^9}, {3.7609431480096493`*^9, 
   3.760943167900439*^9}, {3.7635184125702457`*^9, 3.7635184243943195`*^9}, {
   3.765013514115502*^9, 3.7650135236265745`*^9}, {3.765017408164566*^9, 
   3.7650174093445992`*^9}, {3.7650195825189657`*^9, 3.765019594117489*^9}, {
   3.765433274253518*^9, 3.7654333728286643`*^9}, {3.765709639617435*^9, 
   3.7657096528883443`*^9}, {3.7661940887190623`*^9, 3.766194090082542*^9}, {
   3.7661941265748544`*^9, 3.766194136822994*^9}, 3.7665737571661096`*^9, {
   3.7675118115063143`*^9, 3.7675118232977705`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"d57082d7-06d4-407c-9e25-0e79601340d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculation of eigenfunctions", "Section",
 CellChangeTimes->{{3.7614476672619877`*^9, 
  3.7614476721283197`*^9}},ExpressionUUID->"6e0bdf0a-b9b5-4fd8-a336-\
284f25c6c9ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetL2Norm", "[", 
   RowBox[{
   "eigenvector_", ",", "R_", ",", "normalization_", ",", "lbpower_", ",", 
    "ubpower_", ",", "prec_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "A", ",", "Nmax", ",", "N1", ",", "N2", ",", "Atilde", ",", "n", ",", 
      "m"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Switch", "[", 
      RowBox[{"normalization", ",", "\[IndentingNewLine]", "_List", ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "normalization", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], "\[NotEqual]", " ", "\"\<L2Norm\>\""}],
           ",", 
          RowBox[{"ThrowAbort", "[", 
           RowBox[{"GetL2Norm", "::", "method"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Atilde", "=", 
         RowBox[{"normalization", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"n", "=", 
         RowBox[{"normalization", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"m", "=", 
         RowBox[{"normalization", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}], ";"}], ",", 
       "\[IndentingNewLine]", "_", ",", 
       RowBox[{
        RowBox[{"Atilde", "=", "1"}], ";", 
        RowBox[{"n", "=", "0"}], ";", 
        RowBox[{"m", "=", "0"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"n", "+", 
          RowBox[{"2", "*", "lbpower"}]}], "<", "0"}], "||", 
        RowBox[{
         RowBox[{"m", "+", 
          RowBox[{"2", "*", "ubpower"}]}], "<", "0"}]}], ",", 
       RowBox[{"ThrowAbort", "[", 
        RowBox[{"GetL2Norm", "::", "notnormalizable"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nmax", " ", "=", " ", 
      RowBox[{"Length", "[", "eigenvector", "]"}]}], ";", 
     RowBox[{"N1", " ", "=", " ", 
      RowBox[{
      "Nmax", " ", "+", " ", "lbpower", " ", "+", " ", "ubpower", " ", "-", 
       " ", "1"}]}], ";", " ", 
     RowBox[{"N2", " ", "=", " ", 
      RowBox[{
       RowBox[{"2", "N1"}], "+", "n", "+", "m"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Abs", "@", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "eigenvector", "\[LeftDoubleBracket]", "j", 
             "\[RightDoubleBracket]"}], 
            RowBox[{"Conjugate", "[", 
             RowBox[{
             "eigenvector", "\[LeftDoubleBracket]", "k", 
              "\[RightDoubleBracket]"}], "]"}], 
            FractionBox[
             RowBox[{
              RowBox[{"Binomial", "[", 
               RowBox[{"N1", ",", 
                RowBox[{"j", "-", "1", "+", "lbpower"}]}], "]"}], 
              RowBox[{"Binomial", "[", 
               RowBox[{"N1", ",", 
                RowBox[{"k", "-", "1", "+", "lbpower"}]}], "]"}]}], 
             RowBox[{"Binomial", "[", 
              RowBox[{"N2", ",", " ", 
               RowBox[{"j", "+", " ", "k", " ", "+", " ", 
                RowBox[{"2", "*", "lbpower"}], " ", "+", " ", "n", "-", 
                "2"}]}], "]"}]], 
            FractionBox[
             RowBox[{"Atilde", " ", "*", 
              SuperscriptBox["R", 
               RowBox[{"n", "+", "m", "+", "1"}]]}], 
             RowBox[{"N2", " ", "+", " ", "1"}]]}], " ", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "Nmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "Nmax"}], "}"}]}], "]"}], "]"}], ",", "prec"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7905548161142907`*^9, 3.7905548367540717`*^9}, {
   3.790554943570317*^9, 3.7905549819077415`*^9}, {3.790555024123766*^9, 
   3.7905550257075644`*^9}, 3.790555108492607*^9, {3.790555202240317*^9, 
   3.7905552038020477`*^9}, {3.7905553238019505`*^9, 
   3.7905554559728413`*^9}, {3.7905555066847186`*^9, 
   3.7905556354280405`*^9}, {3.7905557120663877`*^9, 3.790555712646863*^9}, {
   3.7905558345565014`*^9, 3.790555936978882*^9}, {3.7905559702254286`*^9, 
   3.7905560579006715`*^9}, {3.790556181900467*^9, 3.7905561852778125`*^9}, {
   3.7905562398029356`*^9, 3.790556292613237*^9}, {3.7921931787871323`*^9, 
   3.792193180098593*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"9cb357af-ca6a-4390-bb04-a926156eab9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetL2Norm", "::", "method"}], "=", 
   "\"\<Unknown L2 normalization method\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetL2Norm", "::", "notnormalizable"}], "=", 
   "\"\<Weight function makes function not normalizable\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.790557196643528*^9, 3.79055729460671*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"75630a02-d80a-43bb-8ee4-c812e28eaf66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"13", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GetEigenvectors", "[", 
     RowBox[{"eqn_", ",", "spectrum_List", ",", "Nmax_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
         "EigenfunctionOptions", ",", "BoundaryOptions", ",", 
          "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"MList", ",", "eigenvectors", ",", "prec"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"prec", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}], " ", 
           "\[Equal]", " ", "0"}], ",", " ", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"2", "*", "Nmax"}], ",", "$MinPrecision"}], "]"}], ",", 
          " ", 
          RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"MList", " ", "=", " ", 
        RowBox[{"DeconstructEquation", "[", 
         RowBox[{"eqn", ",", "Nmax", ",", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "LowerBound", ",", "UpperBound", ",", "LBPower", ",", "UBPower", 
              ",", "FunctionPrecision", ",", "CollocationGrid"}], "}"}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eigenvectors", " ", "=", " ", 
        RowBox[{"CatchAbort", "[", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"GetEigenvector", "[", 
            RowBox[{"MList", ",", 
             RowBox[{
             "spectrum", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"OptionValue", "[", "Normalization", "]"}], ",", "prec", 
             ",", 
             RowBox[{"FilterRules", "[", 
              RowBox[{
               RowBox[{"{", "opts", "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "LowerBound", ",", "UpperBound", ",", "LBPower", ",", 
                 "UBPower"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "spectrum", "]"}]}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "eigenvectors"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetEigenvectors", "[", 
     RowBox[{"eqn_", ",", "spectrum_", ",", "Nmax_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
         "EigenfunctionOptions", ",", "BoundaryOptions", ",", 
          "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], " ", ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"GetEigenvectors", "[", 
     RowBox[{"eqn", ",", 
      RowBox[{"{", "spectrum", "}"}], ",", "Nmax", ",", "opts"}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7614492903463783`*^9, 3.7614493130349584`*^9}, {
   3.7614494135046587`*^9, 3.761449415676294*^9}, {3.7614497051346245`*^9, 
   3.761449729119481*^9}, {3.761449762754874*^9, 3.761449775531975*^9}, {
   3.761449825799979*^9, 3.7614498462087903`*^9}, 3.761449924661078*^9, {
   3.7614500081905184`*^9, 3.761450035165756*^9}, {3.7614500769726753`*^9, 
   3.7614500779185567`*^9}, 3.7614501647716193`*^9, {3.761451429355799*^9, 
   3.761451461878706*^9}, 3.761451723786434*^9, {3.761451766611636*^9, 
   3.7614517890816517`*^9}, {3.761451828944977*^9, 3.761451863056817*^9}, {
   3.761451895365672*^9, 3.761452015342354*^9}, {3.7614520862742033`*^9, 
   3.761452099950941*^9}, 3.761452207771132*^9, {3.7614522395399494`*^9, 
   3.7614522789666643`*^9}, {3.761452485664353*^9, 3.7614524858159456`*^9}, {
   3.7614532950793285`*^9, 3.7614533991307583`*^9}, {3.7614534480834155`*^9, 
   3.7614534546747117`*^9}, 3.7614740522160687`*^9, {3.7614777925377316`*^9, 
   3.76147780310214*^9}, {3.76147788847034*^9, 3.7614779316439238`*^9}, {
   3.761479307525296*^9, 3.7614793134649515`*^9}, {3.7614794387847357`*^9, 
   3.7614794392331753`*^9}, {3.761481037662901*^9, 3.7614810378174872`*^9}, {
   3.761489826005577*^9, 3.7614898635973606`*^9}, {3.7614898965821657`*^9, 
   3.7614899155675416`*^9}, {3.761489978372145*^9, 3.7614900298656178`*^9}, {
   3.761492923394965*^9, 3.7614929251442814`*^9}, 3.7649967029516625`*^9, {
   3.7650005893752823`*^9, 3.7650006016023006`*^9}, {3.766139876374965*^9, 
   3.7661399726315866`*^9}, {3.7661407936584034`*^9, 3.7661408128882446`*^9}, 
   3.7661409177039137`*^9, {3.7661409988217134`*^9, 3.766141056918746*^9}, {
   3.766141292120056*^9, 3.766141342828511*^9}, {3.766142709703158*^9, 
   3.7661427101210394`*^9}, {3.766143056393346*^9, 3.766143056554946*^9}, {
   3.7661432000729237`*^9, 3.7661432003505383`*^9}, {3.76614640419184*^9, 
   3.766146420319395*^9}, 3.766146598423053*^9, 3.7665731211478004`*^9, {
   3.766574108182863*^9, 3.766574133913475*^9}, 3.7665744551637373`*^9, 
   3.7668414447392707`*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"5b38f932-f2d2-4709-b1e1-fca2f33809bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"13", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GetEigenvector", "[", 
    RowBox[{
    "MList_", ",", "\[Omega]_", ",", "normalization_", ",", "prec_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", 
        RowBox[{"EigenfunctionOptions", ",", "BoundaryOptions"}], "}"}], 
       "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "M", ",", "Minv", ",", "eigenvector", ",", "eigenvectortest", ",", 
       RowBox[{"counter", "=", "2"}], ",", "subvector", ",", "residue", ",", 
       "matrix", ",", "Nmax", ",", "funcmax", ",", 
       RowBox[{"ulb", " ", "=", " ", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "LowerBound", "]"}], ",", 
          RowBox[{"2", "*", "prec"}]}], "]"}]}], ",", 
       RowBox[{"uub", "=", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "UpperBound", "]"}], ",", 
          RowBox[{"2", "*", "prec"}]}], "]"}]}], ",", 
       RowBox[{"lbpower", "=", 
        RowBox[{"OptionValue", "[", "LBPower", "]"}]}], ",", 
       RowBox[{"ubpower", "=", 
        RowBox[{"OptionValue", "[", "UBPower", "]"}]}], ",", "R", ",", 
       "jacobian", ",", "N1", ",", "N2", ",", "A"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funcmax", " ", "=", " ", 
       RowBox[{"Length", "[", "MList", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"M", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[Omega]", 
                RowBox[{"j", "-", "1"}]], 
               RowBox[{"MList", "\[LeftDoubleBracket]", 
                RowBox[{"eqnindex", ",", "funcindex", ",", "j"}], 
                "\[RightDoubleBracket]"}]}], ",", "prec"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"MList", "\[LeftDoubleBracket]", 
                RowBox[{"eqnindex", ",", "funcindex"}], 
                "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"funcindex", ",", "funcmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"eqnindex", ",", "funcmax"}], "}"}]}], "]"}], "//", 
        "ArrayFlatten"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Nmax", " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "M", "]"}], "//", "First"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Minv", "=", " ", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Inverse", "[", 
         RowBox[{"N", "[", 
          RowBox[{"M", ",", "prec"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eigenvector", " ", "=", " ", 
       RowBox[{"Minv", ".", 
        RowBox[{"UnitVector", "[", 
         RowBox[{"Nmax", ",", "1"}], "]"}]}]}], ";", " ", 
      RowBox[{"eigenvector", " ", "=", " ", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"eigenvector", "/", 
          RowBox[{"Max", "@", 
           RowBox[{"Abs", "@", "eigenvector"}]}]}], ",", "prec"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"eigenvectortest", " ", "=", " ", 
       RowBox[{"Minv", ".", "eigenvector"}]}], ";", " ", 
      RowBox[{"eigenvectortest", " ", "=", " ", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"eigenvectortest", "/", 
          RowBox[{"Max", "@", 
           RowBox[{"Abs", "@", "eigenvectortest"}]}]}], ",", "prec"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Log10", "[", 
           RowBox[{"Max", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{"eigenvector", "-", "eigenvectortest"}], "]"}], "]"}], 
           "]"}], ">", 
          RowBox[{"-", 
           RowBox[{"OptionValue", "[", "FunctionCutoff", "]"}]}]}], "&&", 
         RowBox[{"counter", "<", 
          RowBox[{"OptionValue", "[", "MaxIteration", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"eigenvector", "=", "eigenvectortest"}], ";", " ", 
           RowBox[{"eigenvectortest", " ", "=", " ", 
            RowBox[{"Minv", ".", "eigenvector"}]}], ";", " ", 
           RowBox[{"eigenvectortest", " ", "=", " ", 
            RowBox[{"SetPrecision", "[", 
             RowBox[{
              RowBox[{"eigenvectortest", "/", 
               RowBox[{"Max", "@", 
                RowBox[{"Abs", "@", "eigenvectortest"}]}]}], ",", "prec"}], 
             "]"}]}], ";"}], ")"}], ";", 
         RowBox[{"counter", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"eigenvector", "=", "eigenvectortest"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Nmax", " ", "=", " ", 
       RowBox[{
        RowBox[{"Length", "[", "eigenvector", "]"}], "/", "funcmax"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eigenvector", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"subvector", " ", "=", " ", 
            RowBox[{"eigenvector", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", "1"}], ")"}], "Nmax"}], "+", "1"}], ";;", 
              RowBox[{"k", "*", "Nmax"}]}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Switch", "[", 
            RowBox[{
            "normalization", ",", "\[IndentingNewLine]", "\"\<UB\>\"", ",", 
             " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"subvector", "\[LeftDoubleBracket]", 
                 RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[Equal]", 
                "0"}], ",", 
               RowBox[{
                RowBox[{"Message", "[", 
                 RowBox[{"GetEigenvector", "::", "boundaryconditionsub"}], 
                 "]"}], ";", 
                RowBox[{"SetPrecision", "[", 
                 RowBox[{"subvector", ",", "prec"}], "]"}]}], ",", 
               RowBox[{"SetPrecision", "[", 
                RowBox[{
                 RowBox[{"subvector", "/", 
                  RowBox[{"subvector", "\[LeftDoubleBracket]", 
                   RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                 "prec"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
             "\"\<LB\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "subvector", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"Message", "[", 
                 RowBox[{"GetEigenvector", "::", "boundaryconditionslb"}], 
                 "]"}], ";", 
                RowBox[{"SetPrecision", "[", 
                 RowBox[{"subvector", ",", "prec"}], "]"}]}], ",", 
               RowBox[{"SetPrecision", "[", 
                RowBox[{
                 RowBox[{"subvector", "/", 
                  RowBox[{
                  "subvector", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ",", "prec"}], "]"}]}], "]"}],
              ",", "\[IndentingNewLine]", "\"\<L2Norm\>\"", ",", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"subvector", " ", "=", " ", 
                RowBox[{"subvector", "/", 
                 RowBox[{
                 "subvector", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"A", " ", "=", " ", 
                RowBox[{"GetL2Norm", "[", 
                 RowBox[{"subvector", ",", 
                  RowBox[{"uub", "-", "ulb"}], ",", "normalization", ",", 
                  "lbpower", ",", "ubpower", ",", "prec"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"A", "\[Equal]", "0"}], ",", 
                 RowBox[{
                  RowBox[{"Message", "[", 
                   RowBox[{"GetEigenvector", "::", "boundaryconditionsL2"}], 
                   "]"}], ";", 
                  RowBox[{"SetPrecision", "[", 
                   RowBox[{"subvector", ",", "prec"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"SetPrecision", "[", 
                  RowBox[{
                   RowBox[{"subvector", "/", "A"}], ",", "prec"}], "]"}]}], 
                "]"}]}], "\[IndentingNewLine]", ")"}], ",", 
             "\[IndentingNewLine]", "_List", ",", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"subvector", " ", "=", " ", 
                RowBox[{"subvector", "/", 
                 RowBox[{
                 "subvector", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"A", " ", "=", " ", 
                RowBox[{"GetL2Norm", "[", 
                 RowBox[{"subvector", ",", 
                  RowBox[{"uub", "-", "ulb"}], ",", "normalization", ",", 
                  "lbpower", ",", "ubpower", ",", "prec"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"A", "\[Equal]", "0"}], ",", 
                 RowBox[{
                  RowBox[{"Message", "[", 
                   RowBox[{"GetEigenvector", "::", "boundaryconditionsL2"}], 
                   "]"}], ";", 
                  RowBox[{"SetPrecision", "[", 
                   RowBox[{"subvector", ",", "prec"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"SetPrecision", "[", 
                  RowBox[{
                   RowBox[{"subvector", "/", "A"}], ",", "prec"}], "]"}]}], 
                "]"}]}], "\[IndentingNewLine]", ")"}], ",", 
             "\[IndentingNewLine]", "_", ",", 
             RowBox[{"ThrowAbort", "[", 
              RowBox[{"GetEigenvector", "::", "method"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "funcmax"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "eigenvector"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7614523260675344`*^9, 3.761452600727521*^9}, {
   3.7614526351740265`*^9, 3.7614526461856823`*^9}, {3.7614526787453303`*^9, 
   3.7614527120014553`*^9}, {3.7614528701675243`*^9, 3.761453013573107*^9}, {
   3.7614530473790417`*^9, 3.761453072282404*^9}, {3.7614531796784244`*^9, 
   3.761453251300178*^9}, {3.761453354738274*^9, 3.7614533594528823`*^9}, {
   3.7614740781119614`*^9, 3.761474078696395*^9}, {3.76147800661664*^9, 
   3.7614780555240803`*^9}, {3.761478145766415*^9, 3.7614781589973116`*^9}, {
   3.761479286423856*^9, 3.761479323086975*^9}, {3.7614813823522587`*^9, 
   3.7614815627952127`*^9}, {3.7661413451034174`*^9, 3.7661413643559446`*^9}, 
   3.7661414982738886`*^9, {3.7661415332158604`*^9, 3.766141548488459*^9}, {
   3.766141580199246*^9, 3.7661416668777604`*^9}, {3.7661417295215883`*^9, 
   3.766141749761357*^9}, {3.7661420228414836`*^9, 3.7661420866375628`*^9}, {
   3.7661427655574894`*^9, 3.766142769007354*^9}, {3.766142918178952*^9, 
   3.766142924441573*^9}, {3.766143068085064*^9, 3.766143094040373*^9}, {
   3.7661432103205414`*^9, 3.7661432346459494`*^9}, {3.7661432767058167`*^9, 
   3.766143285207035*^9}, {3.766143317542616*^9, 3.7661433263355885`*^9}, {
   3.7661436699055247`*^9, 3.766143686885254*^9}, {3.7661454460918694`*^9, 
   3.7661455274573016`*^9}, {3.7661455619221544`*^9, 
   3.7661455744785824`*^9}, {3.766145697591427*^9, 3.7661457678683805`*^9}, {
   3.766145885048258*^9, 3.7661458962654886`*^9}, {3.7661459332999473`*^9, 
   3.7661459855721655`*^9}, {3.7661463042446527`*^9, 3.766146322892216*^9}, {
   3.7661463694684935`*^9, 3.7661463918260183`*^9}, {3.7661464337200117`*^9, 
   3.76614644324975*^9}, {3.7661465073788366`*^9, 3.766146514726242*^9}, {
   3.766146717819751*^9, 3.766146723417271*^9}, {3.7661467758769765`*^9, 
   3.766146836454541*^9}, {3.7661469329492292`*^9, 3.7661471537924294`*^9}, {
   3.7661472103592014`*^9, 3.766147285402774*^9}, {3.766147373474736*^9, 
   3.766147468151553*^9}, {3.7661475702292604`*^9, 3.7661477874701977`*^9}, {
   3.766147824488798*^9, 3.7661479233974895`*^9}, {3.766147960812171*^9, 
   3.766147963345111*^9}, {3.766148300292837*^9, 3.766148360268878*^9}, {
   3.766148701545167*^9, 3.76614870488435*^9}, {3.7661488367961035`*^9, 
   3.7661489175530405`*^9}, 3.7661501060182753`*^9, {3.7661515092945366`*^9, 
   3.7661515134628773`*^9}, {3.7661515857033625`*^9, 
   3.7661515865937376`*^9}, {3.7661516616164885`*^9, 
   3.7661517201296473`*^9}, {3.7661517912540727`*^9, 3.76615180421152*^9}, {
   3.766152091756217*^9, 3.766152112200904*^9}, {3.7661522098350687`*^9, 
   3.7661522405869193`*^9}, {3.7661523816542244`*^9, 
   3.7661523929230094`*^9}, {3.766152428544854*^9, 3.766152435054677*^9}, {
   3.766153724822556*^9, 3.7661537365820813`*^9}, {3.766153850235218*^9, 
   3.766153862283007*^9}, {3.766281911755138*^9, 3.766282042326292*^9}, {
   3.7662820922508173`*^9, 3.7662821506509213`*^9}, {3.766574133913475*^9, 
   3.766574133944723*^9}, {3.766574447101487*^9, 3.766574447117107*^9}, {
   3.7668376235397997`*^9, 3.7668376323534093`*^9}, {3.766837673095231*^9, 
   3.766837782902132*^9}, {3.7668379675555906`*^9, 3.7668379807215195`*^9}, {
   3.7668380301893826`*^9, 3.766838034040239*^9}, {3.766838069195506*^9, 
   3.7668381524591374`*^9}, {3.7668385631139584`*^9, 
   3.7668385893462267`*^9}, {3.7668398755556097`*^9, 3.766839884760041*^9}, {
   3.7668401226539745`*^9, 3.766840289922672*^9}, {3.766840335320225*^9, 
   3.7668403436451297`*^9}, {3.766840433341199*^9, 3.7668405343048954`*^9}, 
   3.766840639496239*^9, {3.7668407007165904`*^9, 3.766840745521758*^9}, {
   3.7668408375493546`*^9, 3.766840838955402*^9}, {3.766841968200162*^9, 
   3.766842215305498*^9}, {3.766842296744485*^9, 3.76684232535715*^9}, {
   3.7668424220130253`*^9, 3.7668424276732283`*^9}, {3.766865020051937*^9, 
   3.7668650207384*^9}, {3.7668710133906393`*^9, 3.7668710135424633`*^9}, {
   3.767051123198082*^9, 3.7670511235886993`*^9}, {3.767051812219822*^9, 
   3.7670518125122156`*^9}, {3.767511835930977*^9, 3.7675118549451385`*^9}, {
   3.790556326124962*^9, 3.7905563465667796`*^9}, {3.790556570515561*^9, 
   3.790556665524726*^9}, {3.7905567762507496`*^9, 3.790556786590541*^9}, {
   3.792193054264032*^9, 3.7921930626476154`*^9}, {3.792414732766637*^9, 
   3.79241473863091*^9}, {3.792415043569519*^9, 3.792415047724393*^9}, {
   3.792415192341031*^9, 3.7924151956611443`*^9}, {3.7924159961075816`*^9, 
   3.792416011574113*^9}, {3.792416094839383*^9, 3.7924161542426195`*^9}, {
   3.7924162188659725`*^9, 3.7924162881826954`*^9}, {3.792416375095981*^9, 
   3.792416393918876*^9}, {3.792416973080768*^9, 3.7924169738953977`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"cd8398f0-ce0a-4b92-8a2d-2bf02ec91d74"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetEigenvector", "::", "method"}], " ", "=", " ", 
   "\"\<Unknown normalization method. Either 'LB' or 'UB' or a normalization \
pair\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetEigenvector", "::", "boundaryconditionsub"}], "=", " ", 
   "\"\<Unexpeted vanishing leading polynomial at the upper bound\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetEigenvector", "::", "boundaryconditionslb"}], "=", " ", 
   "\"\<Unexpected vanishing leading polynomial at the lower bound\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetEigenvector", "::", "boundaryconditionsL2norm"}], "=", " ", 
   "\"\<Unexpected vanishing of the L2-norm\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.766150292944482*^9, 3.7661503432886667`*^9}, 
   3.766574133944723*^9, {3.792416015578513*^9, 3.7924160261478467`*^9}, {
   3.792416292504731*^9, 3.7924163515309153`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"5e72fc5a-4994-49cd-b9d6-dfbb5f8f3231"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetEigenfunctions", "[", 
   RowBox[{"eqn_", ",", "spectrum_", ",", "Nmax_", ",", "var_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{
       "EigenfunctionOptions", ",", "BoundaryOptions", ",", 
        "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eigenfunctions", ",", "eigenvectors", ",", "BPs", ",", "R", ",", 
      "eigenmax", ",", "funcmax", ",", "finallbpower", ",", "finalubpower", 
      ",", "prec", ",", "Cmatrix", ",", "\[IndentingNewLine]", 
      RowBox[{"ulb", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "LowerBound", "]"}]}], ",", 
      RowBox[{"uub", "=", 
       RowBox[{"OptionValue", "[", "UpperBound", "]"}]}], ",", 
      RowBox[{"lbpower", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "LBPower", "]"}]}], ",", 
      RowBox[{"ubpower", "=", 
       RowBox[{"OptionValue", "[", "UBPower", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"prec", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}], " ", 
         "\[Equal]", " ", "0"}], ",", " ", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"2", "*", "Nmax"}], ",", "$MinPrecision"}], "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ulb", " ", "=", " ", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "LowerBound", "]"}], ",", "prec"}], 
       "]"}]}], ";", 
     RowBox[{"uub", " ", "=", " ", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "UpperBound", "]"}], ",", "prec"}], 
       "]"}]}], ";", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"uub", "-", "ulb"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"finallbpower", ",", "finalubpower"}], "}"}], "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "FinalAsymptotics", "]"}], "===", 
         "\"\<Default\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"lbpower", ",", "ubpower"}], "}"}], ",", 
        RowBox[{"OptionValue", "[", "FinalAsymptotics", "]"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"OptionValue", "[", "FinalAsymptotics", "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "finallbpower", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"BPs", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"Binomial", "[", 
           RowBox[{
            RowBox[{"Nmax", "+", "lbpower", "+", "ubpower"}], ",", 
            RowBox[{"l", "+", "lbpower"}]}], "]"}], 
          SuperscriptBox["R", 
           RowBox[{"Nmax", "+", "lbpower", "+", "ubpower"}]]], 
         RowBox[{"Switch", "[", 
          RowBox[{"l", ",", "\[IndentingNewLine]", 
           RowBox[{"-", "finallbpower"}], ",", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"uub", "-", "var"}], ")"}], 
            RowBox[{"Nmax", "+", "finallbpower", "+", "finalubpower"}]], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Nmax", "+", "finalubpower"}], ",", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"var", "-", "ulb"}], ")"}], 
            RowBox[{"Nmax", "+", "finallbpower", "+", "finalubpower"}]], ",", 
           "\[IndentingNewLine]", "_", ",", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"var", "-", "ulb"}], ")"}], 
             RowBox[{"l", "+", "finallbpower"}]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"uub", "-", "var"}], ")"}], 
             RowBox[{"Nmax", "+", "finalubpower", "-", "l"}]]}]}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"eigenvectors", " ", "=", " ", 
      RowBox[{"GetEigenvectors", "[", 
       RowBox[{"eqn", ",", "spectrum", ",", "Nmax", ",", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "opts", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "Normalization", ",", "LowerBound", ",", "UpperBound", ",", 
            "LBPower", ",", "UBPower", ",", "FunctionPrecision", ",", 
            "CollocationGrid", ",", "FunctionCutoff", ",", "MaxIteration"}], 
           "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eigenmax", " ", "=", " ", 
      RowBox[{
       RowBox[{"Dimensions", "[", "eigenvectors", "]"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"funcmax", " ", "=", " ", 
      RowBox[{
       RowBox[{"Dimensions", "[", "eigenvectors", "]"}], 
       "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"eigenfunctions", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eigenvectors", "\[LeftDoubleBracket]", 
            RowBox[{"eigenindex", ",", "funcindex", ",", "k"}], 
            "\[RightDoubleBracket]"}], "*", 
           RowBox[{
           "BPs", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Nmax", "+", "1"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"eigenindex", ",", "eigenmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"funcindex", ",", "funcmax"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "eigenfunctions"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761474111896202*^9, 3.7614741757036705`*^9}, {
   3.761474223611486*^9, 3.761474231921714*^9}, {3.7614742832298875`*^9, 
   3.7614742961695995`*^9}, {3.7614751528802176`*^9, 
   3.7614752250881095`*^9}, {3.76147528101612*^9, 3.7614752829070354`*^9}, {
   3.7614753189835415`*^9, 3.761475372985136*^9}, {3.761475473275875*^9, 
   3.7614757278409786`*^9}, {3.761475771541066*^9, 3.7614758544941864`*^9}, {
   3.7614759980492125`*^9, 3.761476074600459*^9}, {3.7614761392505364`*^9, 
   3.761476168129079*^9}, {3.7614762719656563`*^9, 3.7614763142585335`*^9}, {
   3.7614764593319187`*^9, 3.7614765686454134`*^9}, {3.761476629544527*^9, 
   3.76147670693366*^9}, {3.7614768930640917`*^9, 3.7614769407348843`*^9}, {
   3.761477227639843*^9, 3.761477431931633*^9}, {3.76147835413338*^9, 
   3.761478389317855*^9}, {3.761478496887744*^9, 3.7614784977248936`*^9}, {
   3.7614785403791494`*^9, 3.761478556695649*^9}, {3.7614786191760855`*^9, 
   3.7614786257639756`*^9}, {3.7614794108157372`*^9, 3.761479411059367*^9}, {
   3.761480054269641*^9, 3.7614800628061132`*^9}, {3.761480145834304*^9, 
   3.7614802189024076`*^9}, {3.7614802502356005`*^9, 
   3.7614802620890565`*^9}, {3.761480797755046*^9, 3.761480838349368*^9}, {
   3.761480878746714*^9, 3.7614808932454233`*^9}, {3.761480948524593*^9, 
   3.7614810283687067`*^9}, {3.7614813658518543`*^9, 3.761481371014022*^9}, {
   3.761484078647091*^9, 3.7614841040931935`*^9}, {3.76148994146875*^9, 
   3.761489963356848*^9}, 3.7649967029672585`*^9, {3.764996863765622*^9, 
   3.7649968718638477`*^9}, {3.765001355704339*^9, 3.765001402628397*^9}, {
   3.7650015359444623`*^9, 3.765001540045632*^9}, {3.7650016727963243`*^9, 
   3.765001680802703*^9}, {3.7650017423893013`*^9, 3.7650017762031565`*^9}, {
   3.765013620199421*^9, 3.765013646948232*^9}, {3.765013904083214*^9, 
   3.7650139216131396`*^9}, {3.765014006816151*^9, 3.765014014639489*^9}, {
   3.765015718184747*^9, 3.7650157220837317`*^9}, {3.765015950414796*^9, 
   3.765015975756089*^9}, 3.765016116687679*^9, {3.76501618065777*^9, 
   3.76501624025554*^9}, {3.7650167530609317`*^9, 3.76501678774096*^9}, 
   3.76501704982139*^9, {3.7661438730955153`*^9, 3.7661438747137256`*^9}, {
   3.76614941672229*^9, 3.7661495345442524`*^9}, {3.7661496299971323`*^9, 
   3.7661496954070034`*^9}, {3.7661497634452686`*^9, 
   3.7661499050570383`*^9}, {3.7661502040686083`*^9, 3.766150211157642*^9}, 
   3.7661504580862026`*^9, {3.766150629835929*^9, 3.7661508088706417`*^9}, {
   3.766150951976594*^9, 3.7661511505006104`*^9}, {3.766151875799077*^9, 
   3.7661518833151975`*^9}, {3.7661519924812307`*^9, 
   3.7661520571952157`*^9}, {3.7661893032250404`*^9, 
   3.7661894296620145`*^9}, {3.766189675385299*^9, 3.766189699343421*^9}, 
   3.7665741082141047`*^9, 3.7665741585955086`*^9, {3.7668414784678783`*^9, 
   3.7668414869830093`*^9}, {3.793263031865261*^9, 3.7932630459300175`*^9}, {
   3.7932631348214345`*^9, 3.793263142561728*^9}, {3.7932632669349957`*^9, 
   3.7932632799771004`*^9}, {3.7932634876505747`*^9, 3.793263765601348*^9}, {
   3.793263809678774*^9, 3.7932638665277953`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"6fcaf081-4f83-4c57-93ba-442bfb0fec49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CompareEigenfunctions", "[", 
   RowBox[{"eqn_List", ",", "spectra_List", ",", "Nmaxes_List", ",", 
    RowBox[{"opts", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{
       "EigenCompOptions", ",", "ComparisonOptions", ",", 
        "EigenfunctionOptions", ",", "BoundaryOptions", ",", 
        "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Nmax", "=", 
       RowBox[{"Max", "[", "Nmaxes", "]"}]}], ",", "R", ",", 
      RowBox[{"filteredspectra", "=", 
       RowBox[{"{", "}"}]}], ",", "prec", ",", "eigenvectors", ",", 
      "testeigenvector", ",", "subvector", ",", "eigenvalues", ",", "var", 
      ",", "meanerrors", ",", 
      RowBox[{"Neigenfunc", "=", 
       RowBox[{"Length", "[", "eqn", "]"}]}], ",", "sortedspectra", ",", 
      "outputspectra", ",", "\[Omega]test", ",", 
      RowBox[{"lbpower", "=", 
       RowBox[{"OptionValue", "[", "LBPower", "]"}]}], ",", 
      RowBox[{"ubpower", "=", 
       RowBox[{"OptionValue", "[", "UBPower", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"prec", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}], " ", 
         "\[Equal]", " ", "0"}], ",", " ", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"2", "*", "Nmax"}], ",", "$MinPrecision"}], "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "UpperBound", "]"}], " ", "-", " ", 
         RowBox[{"OptionValue", "[", "LowerBound", "]"}]}], ",", "prec"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sortedspectra", " ", "=", " ", 
      RowBox[{"FilterEigenvalues", "[", 
       RowBox[{
        RowBox[{
        "spectra", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", "True"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"First", "@", 
         RowBox[{"Dimensions", "[", "sortedspectra", "]"}]}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Omega]test", "=", 
          RowBox[{"SetPrecision", "[", 
           RowBox[{
            RowBox[{"sortedspectra", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
            "prec"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"eigenvectors", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"testeigenvector", "=", 
              RowBox[{"GetEigenvectors", "[", 
               RowBox[{"eqn", ",", 
                RowBox[{"{", "\[Omega]test", "}"}], ",", 
                RowBox[{
                "Nmaxes", "\[LeftDoubleBracket]", "k", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{"FilterRules", "[", 
                 RowBox[{
                  RowBox[{"{", "opts", "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "Normalization", ",", "LowerBound", ",", "UpperBound", ",",
                     "LBPower", ",", "UBPower", ",", "FunctionPrecision", ",",
                     "CollocationGrid", ",", "FunctionCutoff", ",", 
                    "MaxIteration"}], "}"}]}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "Expand", " ", "to", " ", "common", " ", "highest", " ", 
               "basis", " ", "order"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"subvector", "=", 
              RowBox[{"testeigenvector", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "funcindex"}], "\[RightDoubleBracket]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", " ", 
                    RowBox[{"m", "-", "l"}], "\[LessEqual]", " ", 
                    RowBox[{"Nmax", "-", 
                    RowBox[{
                    "Nmaxes", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Nmaxes", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], "+", "lbpower", "+", 
                    "ubpower"}], ",", 
                    RowBox[{"l", "+", "lbpower"}]}], "]"}], 
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"Nmax", "-", 
                    RowBox[{
                    "Nmaxes", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"m", "-", "l"}]}], "]"}]}], 
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"Nmax", "+", "lbpower", "+", "ubpower"}], ",", 
                    RowBox[{"m", "+", "lbpower"}]}], "]"}]], ",", "prec"}], 
                    "]"}], " ", 
                    RowBox[{"subvector", "\[LeftDoubleBracket]", 
                    RowBox[{"l", "+", "1"}], "\[RightDoubleBracket]"}]}], ",",
                    "\[IndentingNewLine]", "0"}], "]"}], " ", ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"m", "-", "Nmax", "+", 
                    RowBox[{
                    "Nmaxes", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], ",", "0"}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{"m", ",", 
                    RowBox[{
                    "Nmaxes", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "}"}]}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", 
              RowBox[{"Length", "[", "Nmaxes", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"funcindex", ",", "Neigenfunc"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "calculate", " ", "L2Norm", " ", "of", " ", "the", " ", 
           "difference", " ", "of", " ", "eigenvectors"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"meanerrors", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"subvector", "=", 
              RowBox[{
               RowBox[{"eigenvectors", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "funcindex"}], "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{"eigenvectors", "\[LeftDoubleBracket]", 
                RowBox[{"k", ",", "funcindex"}], 
                "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"GetL2Norm", "[", 
              RowBox[{"subvector", ",", "R", ",", 
               RowBox[{"OptionValue", "[", "Normalization", "]"}], ",", 
               "lbpower", ",", "ubpower", ",", "prec"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "2", ",", 
              RowBox[{"Length", "[", "Nmaxes", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"funcindex", ",", "Neigenfunc"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "filter", " ", "out", " ", "eigenvalues", " ", "whose", " ", 
           "eigenvectors", " ", "did", " ", "not", " ", "converge"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Log10", "[", 
             RowBox[{"Max", "[", "meanerrors", "]"}], "]"}], "<", 
            RowBox[{"-", 
             RowBox[{"OptionValue", "[", "L2Cutoff", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"filteredspectra", "=", 
             RowBox[{"filteredspectra", "~", "Join", "~", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"sortedspectra", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                 "\"\<\[PlusMinus] \>\""}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"First", "@", 
                   RowBox[{"MinimalBy", "[", 
                    RowBox[{
                    RowBox[{
                    "spectra", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"#", "-", 
                    RowBox[{"(", "\[Omega]test", ")"}]}], "]"}], "&"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"First", "@", 
                   RowBox[{"MinimalBy", "[", 
                    RowBox[{
                    RowBox[{
                    "spectra", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"#", "-", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"Conjugate", "[", "\[Omega]test", "]"}]}], 
                    ")"}]}], "]"}], "&"}]}], "]"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"sortedspectra", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], "==", 
                 "\"\<\[PlusMinus] \>\""}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"First", "@", 
                   RowBox[{"MinimalBy", "[", 
                    RowBox[{
                    RowBox[{
                    "spectra", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"#", "-", 
                    RowBox[{"(", "\[Omega]test", ")"}]}], "]"}], "&"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"First", "@", 
                   RowBox[{"MinimalBy", "[", 
                    RowBox[{
                    RowBox[{
                    "spectra", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"#", "-", 
                    RowBox[{"(", 
                    RowBox[{"Conjugate", "[", "\[Omega]test", "]"}], ")"}]}], 
                    "]"}], "&"}]}], "]"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", "True", ",", 
                RowBox[{"{", 
                 RowBox[{"First", "@", 
                  RowBox[{"MinimalBy", "[", 
                   RowBox[{
                    RowBox[{
                    "spectra", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"#", "-", 
                    RowBox[{"(", "\[Omega]test", ")"}]}], "]"}], "&"}]}], 
                   "]"}]}], "}"}]}], "]"}]}]}], ";"}]}], "]"}], ";"}], 
        ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "filteredspectra", "]"}], "\[Equal]", "0"}], 
       ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"CompareModes", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "filteredspectra", "}"}], "~", "Join", "~", 
          RowBox[{"spectra", "\[LeftDoubleBracket]", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opts", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Cutoff", ",", "TestMagnitude"}], "}"}]}], "]"}]}], 
        "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompareEigenfunctions", "[", 
   RowBox[{"eqn_", ",", "spectra_List", ",", "Nmaxes_List", ",", 
    RowBox[{"opts", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{
       "EigenCompOptions", ",", "ComparisonOptions", ",", 
        "EigenfunctionOptions", ",", "BoundaryOptions", ",", 
        "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"CompareEigenfunctions", "[", 
   RowBox[{
    RowBox[{"{", "eqn", "}"}], ",", "spectra", ",", "Nmaxes", ",", "opts"}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7668434387785683`*^9, 3.766843441743455*^9}, {
   3.7668434718874073`*^9, 3.7668434814417686`*^9}, {3.766844040283285*^9, 
   3.7668440434401255`*^9}, {3.7668630314302773`*^9, 3.766863064450884*^9}, 
   3.7668711127988853`*^9, {3.7668722660410624`*^9, 3.766872276676401*^9}, {
   3.766872543823564*^9, 3.7668726112514772`*^9}, {3.766872654034648*^9, 
   3.766872680074102*^9}, {3.766873107768941*^9, 3.7668731254824715`*^9}, 
   3.766873240251292*^9, {3.766873488944289*^9, 3.766873528119217*^9}, {
   3.7668735880451374`*^9, 3.7668736352891445`*^9}, {3.766873667741784*^9, 
   3.7668737557769012`*^9}, {3.7668738669596443`*^9, 3.766873902582347*^9}, 
   3.766874023938098*^9, {3.766874058583598*^9, 3.7668741590663466`*^9}, {
   3.766874213470334*^9, 3.7668742208399096`*^9}, {3.7668742558852167`*^9, 
   3.766874530769453*^9}, {3.7668745616196127`*^9, 3.7668746172924533`*^9}, {
   3.7668746943770294`*^9, 3.766874746995489*^9}, {3.7668749329641123`*^9, 
   3.7668750503686056`*^9}, {3.7668751336310587`*^9, 
   3.7668752262202096`*^9}, {3.7668755117308674`*^9, 
   3.7668755169324164`*^9}, {3.766875739475662*^9, 3.766875751164157*^9}, {
   3.766876007624281*^9, 3.766876025375451*^9}, {3.7668762951916456`*^9, 
   3.7668763081235857`*^9}, {3.7668769586420717`*^9, 
   3.7668769639964476`*^9}, {3.7668771048329353`*^9, 3.766877108138089*^9}, {
   3.7668772343960032`*^9, 3.766877247158869*^9}, {3.7668773749462576`*^9, 
   3.7668773794725895`*^9}, {3.7668774870590487`*^9, 
   3.7668774886123023`*^9}, {3.7668775942920713`*^9, 3.766877618090114*^9}, {
   3.7668778546431627`*^9, 3.7668778576532564`*^9}, {3.76687798581293*^9, 
   3.766877989560107*^9}, {3.7668840165455265`*^9, 3.7668840298531284`*^9}, {
   3.7668841414376125`*^9, 3.766884148514534*^9}, {3.766979874863121*^9, 
   3.7669800328061314`*^9}, {3.766980256404031*^9, 3.766980346113948*^9}, {
   3.7669803916381083`*^9, 3.7669803980867343`*^9}, {3.7669810653529167`*^9, 
   3.7669810678175316`*^9}, {3.7669811075425844`*^9, 3.766981115503962*^9}, {
   3.766981162336548*^9, 3.766981209848466*^9}, 3.7669814365543036`*^9, {
   3.7669822128073225`*^9, 3.7669822157750683`*^9}, {3.7669822884186983`*^9, 
   3.766982294625477*^9}, 3.7669823864341803`*^9, {3.7670086284537396`*^9, 
   3.7670086313388023`*^9}, {3.7670087393911867`*^9, 
   3.7670087612629175`*^9}, {3.7670088305469007`*^9, 
   3.7670088329961433`*^9}, {3.7670088946634417`*^9, 3.767008902108449*^9}, {
   3.767009127486785*^9, 3.767009227981814*^9}, {3.767009279199467*^9, 
   3.7670093166595087`*^9}, {3.767009373549878*^9, 3.767009417545581*^9}, {
   3.7670095131523385`*^9, 3.767009523396038*^9}, {3.7670095617097073`*^9, 
   3.767009692911132*^9}, {3.767009723483226*^9, 3.7670097644911923`*^9}, {
   3.767011137059127*^9, 3.767011180430771*^9}, {3.7670119565124364`*^9, 
   3.767011966578432*^9}, {3.7670123326941457`*^9, 3.7670123568462534`*^9}, {
   3.7670130821138296`*^9, 3.767013090944517*^9}, 3.767013314730048*^9, {
   3.7670152007182417`*^9, 3.767015219065677*^9}, {3.767015257385758*^9, 
   3.767015289630195*^9}, {3.7670157146424227`*^9, 3.767015730554964*^9}, {
   3.767015766631459*^9, 3.7670157669507484`*^9}, {3.7670160826897554`*^9, 
   3.767016087463458*^9}, {3.7670163517611475`*^9, 3.7670163752695456`*^9}, {
   3.7670178454201403`*^9, 3.7670178510242243`*^9}, {3.7670470943637066`*^9, 
   3.767047136587861*^9}, {3.7670501329067383`*^9, 3.767050134839754*^9}, {
   3.767050640379759*^9, 3.7670506437548556`*^9}, {3.767072921013159*^9, 
   3.767072923076079*^9}, 3.7904764081370306`*^9, {3.7904764471852365`*^9, 
   3.7904764480166993`*^9}, 3.790480308951068*^9, {3.790484058686741*^9, 
   3.790484110667945*^9}, {3.790484188239888*^9, 3.7904842832524986`*^9}, {
   3.7904844700484324`*^9, 3.7904844911637516`*^9}, {3.7904849496500454`*^9, 
   3.7904849666721497`*^9}, {3.790487389933732*^9, 3.7904874276853456`*^9}, {
   3.7904874584899464`*^9, 3.790487535656811*^9}, {3.7904876206078596`*^9, 
   3.7904877875358114`*^9}, {3.790487944345642*^9, 3.7904879652813044`*^9}, {
   3.790488172417227*^9, 3.7904881910364804`*^9}, {3.7904883382256546`*^9, 
   3.7904883399859905`*^9}, {3.7904885666397915`*^9, 3.790488651111556*^9}, {
   3.7904888367149544`*^9, 3.7904888376342387`*^9}, {3.7904905441855726`*^9, 
   3.790490581216549*^9}, 3.7904908413712587`*^9, {3.790490909674905*^9, 
   3.790490926921651*^9}, {3.790490971502901*^9, 3.790491026583984*^9}, {
   3.790491085272084*^9, 3.7904910869853697`*^9}, {3.790491180096671*^9, 
   3.7904912854543166`*^9}, {3.7904916539811563`*^9, 
   3.7904916637559834`*^9}, {3.790491912347983*^9, 3.790491913261878*^9}, {
   3.7905491395134797`*^9, 3.7905491443635044`*^9}, {3.790549241194413*^9, 
   3.790549247434746*^9}, {3.790549281390684*^9, 3.7905492944517393`*^9}, {
   3.7905493469113836`*^9, 3.7905493509485826`*^9}, {3.790549478035468*^9, 
   3.7905494815949783`*^9}, {3.7905496316683316`*^9, 
   3.7905496681098366`*^9}, {3.790549820279425*^9, 3.790549857832952*^9}, {
   3.790550002189725*^9, 3.790550002700361*^9}, {3.79055037048594*^9, 
   3.79055037893633*^9}, {3.790550503322068*^9, 3.7905505635567427`*^9}, {
   3.7905506259836907`*^9, 3.790550646490999*^9}, {3.790550811841877*^9, 
   3.7905508926638355`*^9}, {3.7905510308053656`*^9, 
   3.7905510367105637`*^9}, {3.7905512719639964`*^9, 
   3.7905512816261425`*^9}, {3.7905514566418023`*^9, 
   3.7905514623545175`*^9}, {3.790552256144713*^9, 3.790552310976285*^9}, {
   3.7905523587185535`*^9, 3.7905523624056854`*^9}, {3.790552825186226*^9, 
   3.790552839373268*^9}, {3.7905534078316946`*^9, 3.7905534144798794`*^9}, {
   3.7905539366262417`*^9, 3.7905539395055385`*^9}, {3.790554408898724*^9, 
   3.7905544691331654`*^9}, {3.790554550917249*^9, 3.7905545539591403`*^9}, {
   3.7905545846568737`*^9, 3.7905545848832684`*^9}, {3.7905546208829527`*^9, 
   3.790554629520843*^9}, 3.7905548006715336`*^9, {3.7905557298544903`*^9, 
   3.790555782321704*^9}, {3.790555816963728*^9, 3.790555818576195*^9}, {
   3.7905560760807347`*^9, 3.790556133155096*^9}, {3.790556464221286*^9, 
   3.790556540056398*^9}, {3.790556746343016*^9, 3.790556746764888*^9}, {
   3.7905578713667707`*^9, 3.7905578756532106`*^9}, 3.790558136089032*^9, {
   3.790558454170369*^9, 3.7905585251922398`*^9}, {3.792196877339081*^9, 
   3.7921968791798735`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"0c9dd359-fe32-459f-be88-a6b4c0f85d11"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Outputting", "Section",
 CellChangeTimes->{{3.76052538212436*^9, 
  3.760525392884085*^9}},ExpressionUUID->"e9e69417-5bc0-4ef1-9b74-\
6733d3a520aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"05", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PrintAll", "[", 
    RowBox[{"eqn_", ",", 
     RowBox[{"{", 
      RowBox[{"eigenhigh_", ",", "eigenlow_"}], "}"}], ",", "Nmax_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", 
        RowBox[{
        "PrintOptions", ",", "EigenfunctionOptions", ",", "BoundaryOptions", 
         ",", "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nspectrum", "=", 
        RowBox[{"OptionValue", "[", "NSpectrum", "]"}]}], ",", 
       RowBox[{"neigenfunc", "=", 
        RowBox[{"OptionValue", "[", "NEigenFunc", "]"}]}], ",", 
       RowBox[{"cutoff", "=", 
        RowBox[{"OptionValue", "[", "ZeroCutoff", "]"}]}], ",", "precList", 
       ",", "frequencyplot", ",", "eigenUndamped", ",", "eigenDamped", ",", 
       "eigenOverdamped", ",", "nUndamped", ",", "nDamped", ",", 
       "nOverdamped", ",", "eigenfuncundamped", ",", "eigenfuncdamped", ",", 
       "eigenfuncoverdamped", ",", "table", ",", "results"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"frequencyplot", " ", "=", " ", 
       RowBox[{"PrintFrequencies", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", "eigenhigh", "]"}], ",", 
         RowBox[{"Sequence", "[", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"FreqName", ",", "NSpectrum"}], "}"}]}], "]"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"table", " ", "=", " ", 
       RowBox[{"PrintTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eigenhigh", ",", "eigenlow"}], "}"}], ",", 
         RowBox[{"Sequence", "[", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"ZeroCutoff", ",", "FreqName"}], "}"}]}], "]"}], "]"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"results", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\"\<Eigenvalues\>\"", "}"}], ",", 
         RowBox[{"{", "frequencyplot", "}"}], ",", 
         RowBox[{"{", "\"\<Table of Eigenvalues\>\"", "}"}], ",", 
         RowBox[{"{", "table", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"eigenUndamped", " ", "=", " ", 
       RowBox[{"Sort", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"eigenhigh", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log10", "[", 
                RowBox[{"Abs", "[", 
                 RowBox[{"Im", "[", "#", "]"}], "]"}], "]"}], "/.", 
               RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                RowBox[{"-", "Infinity"}]}]}], ")"}], "<", 
             RowBox[{"-", "cutoff"}]}], "&"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Re", "[", "#1", "]"}], "<", 
           RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nUndamped", " ", "=", " ", 
       RowBox[{"Length", "[", "eigenUndamped", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nUndamped", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"results", " ", "=", " ", 
         RowBox[{"results", "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", "\"\<Undamped Eigenfunctions\>\"", "}"}], "}"}], "~", 
          "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"PrintEigenfunctions", "[", 
             RowBox[{"eqn", ",", 
              RowBox[{"eigenUndamped", "\[LeftDoubleBracket]", 
               RowBox[{"1", ";;", 
                RowBox[{"Min", "[", 
                 RowBox[{"neigenfunc", ",", "nUndamped"}], "]"}]}], 
               "\[RightDoubleBracket]"}], ",", "Nmax", ",", 
              RowBox[{"FilterRules", "[", 
               RowBox[{
                RowBox[{"{", "opts", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "FinalAsymptotics", ",", "Normalization", ",", "LowerBound", 
                  ",", "UpperBound", ",", "LBPower", ",", "UBPower", ",", 
                  "FunctionPrecision", ",", "CollocationGrid", ",", 
                  "FunctionCutoff", ",", "MaxIteration"}], "}"}]}], "]"}]}], 
             "]"}], "}"}], "}"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"eigenOverdamped", " ", "=", " ", 
       RowBox[{"Sort", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"eigenhigh", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Log10", "[", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], "/.", 
                RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                 RowBox[{"-", "Infinity"}]}]}], ")"}], "<", 
              RowBox[{"-", "cutoff"}]}], "&&", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Log10", "[", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"Im", "[", "#", "]"}], "]"}], "]"}], "/.", 
                RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                 RowBox[{"-", "Infinity"}]}]}], ")"}], ">", 
              RowBox[{"-", "cutoff"}]}]}], " ", "&"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "[", "#1", "]"}], "<", 
           RowBox[{"Im", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nOverdamped", " ", "=", " ", 
       RowBox[{"Length", "[", "eigenOverdamped", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nOverdamped", " ", ">", " ", "0"}], ",", 
        RowBox[{"results", "=", 
         RowBox[{"results", "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", "\"\<Overdamped Eigenfunctions\>\"", "}"}], "}"}], 
          "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"PrintEigenfunctions", "[", 
             RowBox[{"eqn", ",", 
              RowBox[{"eigenOverdamped", "\[LeftDoubleBracket]", 
               RowBox[{"1", ";;", 
                RowBox[{"Min", "[", 
                 RowBox[{"neigenfunc", ",", "nOverdamped"}], "]"}]}], 
               "\[RightDoubleBracket]"}], ",", "Nmax", ",", 
              RowBox[{"FilterRules", "[", 
               RowBox[{
                RowBox[{"{", "opts", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "FinalAsymptotics", ",", "Normalization", ",", "LowerBound", 
                  ",", "UpperBound", ",", "LBPower", ",", "UBPower", ",", 
                  "FunctionPrecision", ",", "CollocationGrid", ",", 
                  "FunctionCutoff", ",", "MaxIteration"}], "}"}]}], "]"}]}], 
             "]"}], "}"}], "}"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"eigenDamped", " ", "=", 
       RowBox[{"FilterEigenvalues", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"eigenhigh", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Log10", "[", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], "/.", 
                RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                 RowBox[{"-", "Infinity"}]}]}], ")"}], ">", 
              RowBox[{"-", "cutoff"}]}], "&&", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Log10", "[", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"Im", "[", "#", "]"}], "]"}], "]"}], "/.", 
                RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                 RowBox[{"-", "Infinity"}]}]}], ")"}], ">", 
              RowBox[{"-", "cutoff"}]}]}], " ", "&"}]}], "]"}], ",", 
         "False"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nDamped", " ", "=", " ", 
       RowBox[{"Length", "[", "eigenDamped", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nDamped", ">", "0"}], ",", 
        RowBox[{"results", " ", "=", " ", 
         RowBox[{"results", "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", "\"\<Damped Eigenfunctions\>\"", "}"}], "}"}], "~", 
          "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"PrintEigenfunctions", "[", 
             RowBox[{"eqn", ",", 
              RowBox[{"eigenDamped", "\[LeftDoubleBracket]", 
               RowBox[{"1", ";;", 
                RowBox[{"Min", "[", 
                 RowBox[{"neigenfunc", ",", "nDamped"}], "]"}]}], 
               "\[RightDoubleBracket]"}], ",", "Nmax", ",", 
              RowBox[{"FilterRules", "[", 
               RowBox[{
                RowBox[{"{", "opts", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "FinalAsymptotics", ",", "Normalization", ",", "LowerBound", 
                  ",", "UpperBound", ",", "LBPower", ",", "UBPower", ",", 
                  "FunctionPrecision", ",", "CollocationGrid", ",", 
                  "FunctionCutoff", ",", "MaxIteration"}], "}"}]}], "]"}]}], 
             "]"}], "}"}], "}"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"results", " ", "=", " ", 
       RowBox[{"Grid", "[", "results", "]"}]}], ";", "\[IndentingNewLine]", 
      "results"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7605254067826977`*^9, 3.760525464984517*^9}, {
   3.760525496934676*^9, 3.7605255504447927`*^9}, {3.7605256635341377`*^9, 
   3.760525685354486*^9}, {3.7605258521943007`*^9, 3.760525871528661*^9}, 
   3.7605261327443895`*^9, {3.76052617665429*^9, 3.7605262862744837`*^9}, {
   3.7605263435330486`*^9, 3.7605266688447866`*^9}, {3.7605269735409822`*^9, 
   3.760527020282967*^9}, {3.7605270572046986`*^9, 3.7605272309479575`*^9}, {
   3.76052727628723*^9, 3.7605272844105883`*^9}, {3.760527726067687*^9, 
   3.760527760187681*^9}, {3.760527814745062*^9, 3.76052782266008*^9}, {
   3.7605279258874054`*^9, 3.760527943777258*^9}, {3.76052801172482*^9, 
   3.760528033734323*^9}, {3.760528136132987*^9, 3.7605281436086464`*^9}, {
   3.7605282844329567`*^9, 3.7605283152066402`*^9}, {3.760528399636463*^9, 
   3.7605284127704105`*^9}, {3.76052845394524*^9, 3.7605284598345337`*^9}, {
   3.760528636550731*^9, 3.7605286420648108`*^9}, {3.7605286882175503`*^9, 
   3.760528689923197*^9}, {3.7605288148396516`*^9, 3.7605288537464347`*^9}, {
   3.7605289482849894`*^9, 3.760529044223095*^9}, {3.7605294589878855`*^9, 
   3.760529653467661*^9}, {3.760529695277601*^9, 3.76052971333972*^9}, {
   3.760529745219166*^9, 3.7605297772275567`*^9}, 3.7605298131474743`*^9, {
   3.7605299971953335`*^9, 3.760530050415271*^9}, {3.760530154179019*^9, 
   3.760530154505376*^9}, {3.760530511185278*^9, 3.7605305315851126`*^9}, 
   3.760530615965352*^9, {3.7606606745385065`*^9, 3.760660678767228*^9}, {
   3.760699156297433*^9, 3.7606992753177433`*^9}, {3.7606993472173862`*^9, 
   3.760699414146455*^9}, {3.760699448724615*^9, 3.760699462188546*^9}, {
   3.7607528324903817`*^9, 3.760752936225731*^9}, {3.760753011084541*^9, 
   3.760753054250121*^9}, {3.760753091184193*^9, 3.760753201400832*^9}, {
   3.7607532629486427`*^9, 3.7607533354138913`*^9}, {3.760753709932616*^9, 
   3.760753787645183*^9}, 3.7607538242322035`*^9, {3.760754315992587*^9, 
   3.760754319949107*^9}, {3.761364414976593*^9, 3.7613644240992203`*^9}, {
   3.7614831871519775`*^9, 3.761483310514742*^9}, 3.761483342532048*^9, {
   3.7614834462691655`*^9, 3.761483450376691*^9}, {3.761483798367614*^9, 
   3.761483799809626*^9}, {3.7614840529714365`*^9, 3.761484055880847*^9}, {
   3.761484288449113*^9, 3.76148428878695*^9}, 3.7614885170971107`*^9, 
   3.7614886192562885`*^9, 3.7614887146017447`*^9, {3.7614888115439987`*^9, 
   3.761488840720401*^9}, {3.761490229406852*^9, 3.761490283052325*^9}, {
   3.761490649651258*^9, 3.76149077965226*^9}, {3.761490834960779*^9, 
   3.761490838304329*^9}, {3.76149089342384*^9, 3.7614911674329967`*^9}, {
   3.7614912000956483`*^9, 3.7614913709318914`*^9}, {3.7614916833538857`*^9, 
   3.761492049132555*^9}, {3.7614920869324512`*^9, 3.7614920940234785`*^9}, {
   3.7614921773565593`*^9, 3.761492182896768*^9}, {3.7614922461456475`*^9, 
   3.761492256385259*^9}, {3.7614923273574543`*^9, 3.761492336431822*^9}, {
   3.76149241155389*^9, 3.7614924404535637`*^9}, {3.7614925013935957`*^9, 
   3.7614925067831497`*^9}, {3.7614926609793177`*^9, 3.761492663673082*^9}, {
   3.761492705046419*^9, 3.761492713334285*^9}, {3.7614928167382135`*^9, 
   3.7614928246091876`*^9}, {3.7614928955673676`*^9, 
   3.7614929036617427`*^9}, {3.76149299592496*^9, 3.7614929960955057`*^9}, {
   3.7618459753720694`*^9, 3.761845975903287*^9}, 3.764996702982879*^9, {
   3.765002697513503*^9, 3.76500272756137*^9}, {3.7650189970073633`*^9, 
   3.7650190240249205`*^9}, {3.766185181338709*^9, 3.7661851821488967`*^9}, {
   3.7661956280243797`*^9, 3.766195641660256*^9}, {3.766195716018318*^9, 
   3.766195719435238*^9}, {3.7661957769968233`*^9, 3.7661957876615863`*^9}, {
   3.7661959482081003`*^9, 3.766195958398184*^9}, {3.766196045533518*^9, 
   3.766196279238212*^9}, {3.7661965173988132`*^9, 3.7661965719804897`*^9}, {
   3.7662383299114685`*^9, 3.7662383369486575`*^9}, {3.766313710648755*^9, 
   3.766313744834381*^9}, {3.7665743906931553`*^9, 3.7665744223938603`*^9}, 
   3.766575176076664*^9, {3.7668416901886063`*^9, 3.766841693566643*^9}, {
   3.7670082439924345`*^9, 3.7670082522728605`*^9}, 3.7670083101455193`*^9, {
   3.767008364865625*^9, 3.767008414572674*^9}, {3.7670089556016808`*^9, 
   3.767008956639428*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"affceb9d-42dc-4044-8b7c-225ec1ae0132"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"14", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PrintFrequencies", "[", 
    RowBox[{"spectrum_", ",", " ", 
     RowBox[{"opts", ":", " ", 
      RowBox[{"OptionsPattern", "[", "PrintOptions", "]"}]}]}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nspectrum", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "NSpectrum", "]"}]}], ",", "plot"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plot", " ", "=", " ", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Tooltip", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", "#1", "]"}], ",", 
               RowBox[{"Im", "[", "#1", "]"}]}], "}"}], "]"}], "&"}], ")"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sort", "[", "spectrum", "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ";;", "nspectrum"}], "\[RightDoubleBracket]"}], 
           ")"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", " ", "800"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Re \>\"", "<>", 
             RowBox[{"OptionValue", "[", "FreqName", "]"}]}], ",", 
            RowBox[{"\"\<Im \>\"", "<>", 
             RowBox[{"OptionValue", "[", "FreqName", "]"}]}]}], "}"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "plot"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7614821842507377`*^9, 3.7614822116613274`*^9}, {
   3.7614822595198383`*^9, 3.761482262242919*^9}, {3.7614823112504272`*^9, 
   3.7614823541874666`*^9}, 3.761482418425088*^9, {3.7614825048050547`*^9, 
   3.7614825324419584`*^9}, {3.761482679361265*^9, 3.7614826914987574`*^9}, {
   3.7614829076873274`*^9, 3.7614829935747895`*^9}, {3.761483039328236*^9, 
   3.7614831676144195`*^9}, {3.76148341028296*^9, 3.7614834258047895`*^9}, {
   3.761483567270135*^9, 3.7614835694444647`*^9}, 3.7614836063987856`*^9, {
   3.7614902026819124`*^9, 3.761490222037625*^9}, {3.7614922982073984`*^9, 
   3.7614923222909813`*^9}, {3.7614923807013865`*^9, 
   3.7614924043860364`*^9}, {3.761492444743089*^9, 3.761492445071246*^9}, {
   3.7614928641344724`*^9, 3.7614928644566107`*^9}, {3.7617912185544567`*^9, 
   3.761791218745429*^9}, {3.7618147019866476`*^9, 3.761814724645688*^9}, {
   3.7661916912270823`*^9, 3.766191691704547*^9}, {3.766238241545724*^9, 
   3.7662382451281757`*^9}, 3.766574403593912*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"9bc10933-445b-4843-b713-12ff27b4e05c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eigenhigh_", ",", "eigenlow_"}], "}"}], ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "PrintOptions", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "table", ",", "tableUndamped", ",", "tableDamped", ",", 
      "tableOverdamped", ",", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "eigenhigh", "]"}]}], ",", "nReal", ",", 
      "nImaginary", ",", "nComplex", ",", "eigensame", ",", "eigensameReal", 
      ",", "eigensameImaginary", ",", "eigensameComplex", ",", 
      RowBox[{"cutoff", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "ZeroCutoff", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eigensame", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"CleanDigits", "[", 
         RowBox[{
          RowBox[{
          "eigenhigh", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
           ",", "eigenlow"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"eigensameReal", " ", "=", " ", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"eigensame", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log10", "[", 
               RowBox[{"Abs", "[", 
                RowBox[{"Im", "[", "#", "]"}], "]"}], "]"}], "/.", 
              RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
               RowBox[{"-", "Infinity"}]}]}], ")"}], "<", 
            RowBox[{"-", "cutoff"}]}], "&"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "#1", "]"}], "<", 
          RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eigensameImaginary", " ", "=", " ", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"eigensame", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log10", "[", 
                RowBox[{"Abs", "[", 
                 RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], " ", "/.", 
               RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                RowBox[{"-", "Infinity"}]}]}], ")"}], "<", " ", 
             RowBox[{"-", "cutoff"}]}], " ", "&&", 
            RowBox[{
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"Log10", "[", 
                RowBox[{"Abs", "[", 
                 RowBox[{"Im", "[", "#", "]"}], "]"}], "]"}], "/.", 
               RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                RowBox[{"-", "Infinity"}]}]}], ")"}], ">", 
             RowBox[{"-", "cutoff"}]}]}], "&"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Im", "[", "#1", "]"}], ">", 
          RowBox[{"Im", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eigensameComplex", " ", "=", " ", 
      RowBox[{"FilterEigenvalues", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"eigensame", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log10", "[", 
                RowBox[{"Abs", "[", 
                 RowBox[{"Im", "[", "#", "]"}], "]"}], "]"}], " ", "/.", 
               RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                RowBox[{"-", "Infinity"}]}]}], ")"}], ">", " ", 
             RowBox[{"-", "cutoff"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log10", "[", 
                RowBox[{"Abs", "[", 
                 RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], "/.", 
               RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                RowBox[{"-", "Infinity"}]}]}], ")"}], ">", 
             RowBox[{"-", "cutoff"}]}]}], "&"}]}], "]"}], ",", "True"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nReal", " ", "=", " ", 
      RowBox[{"Length", "[", "eigensameReal", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nImaginary", " ", "=", " ", 
      RowBox[{"Length", "[", "eigensameImaginary", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nComplex", " ", "=", " ", 
      RowBox[{"Length", "[", "eigensameComplex", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"table", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nReal", " ", ">", "0"}], ",", " ", 
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"table", "~", "Join", "~", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Real Eigenvalues\>\"", ",", "SpanFromLeft", ",", 
             "SpanFromLeft"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<n\>\"", ",", " ", 
             RowBox[{"\"\<Re \>\"", " ", "<>", 
              RowBox[{"OptionValue", "[", "FreqName", "]"}]}], ",", 
             RowBox[{"\"\<Im \>\"", "<>", 
              RowBox[{"OptionValue", "[", "FreqName", "]"}]}]}], "}"}]}], 
          "}"}], "~", "Join", "~", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{
                "eigensameReal", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", "TraditionalForm"}], 
              "]"}], ",", 
             RowBox[{"ScientificForm", "[", 
              RowBox[{
               RowBox[{"Im", "[", 
                RowBox[{
                "eigensameReal", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "nReal"}], "}"}]}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nImaginary", " ", ">", " ", "0"}], ",", " ", 
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"table", "~", "Join", "~", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Imaginary Eigenvalues\>\"", ",", "SpanFromLeft", ",", 
             "SpanFromLeft"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<n\>\"", ",", " ", 
             RowBox[{"\"\<Re \>\"", " ", "<>", 
              RowBox[{"OptionValue", "[", "FreqName", "]"}]}], ",", 
             RowBox[{"\"\<Im \>\"", "<>", 
              RowBox[{"OptionValue", "[", "FreqName", "]"}]}]}], "}"}]}], 
          "}"}], "~", "Join", "~", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"ScientificForm", "[", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{
                "eigensameImaginary", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "]"}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{
              "eigensameImaginary", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "nImaginary"}], "}"}]}], "]"}]}]}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nComplex", " ", ">", "0"}], ",", " ", 
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"table", "~", "Join", "~", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Complex Eigenvalues\>\"", ",", "SpanFromLeft", ",", 
             "SpanFromLeft"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<n\>\"", ",", " ", 
             RowBox[{"\"\<Re \>\"", " ", "<>", 
              RowBox[{"OptionValue", "[", "FreqName", "]"}]}], ",", 
             RowBox[{"\"\<Im \>\"", "<>", 
              RowBox[{"OptionValue", "[", "FreqName", "]"}]}]}], "}"}]}], 
          "}"}], "~", "Join", "~", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"eigensameComplex", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"Re", "[", 
                 RowBox[{"eigensameComplex", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}], "]"}], 
                ",", "TraditionalForm"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"eigensameComplex", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"Im", "[", 
                 RowBox[{"eigensameComplex", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}], "]"}], 
                ",", "TraditionalForm"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "nComplex"}], "}"}]}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"table", " ", "=", " ", 
      RowBox[{"Grid", "[", 
       RowBox[{"table", ",", 
        RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "table"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761488505034911*^9, 3.761488622889969*^9}, {
   3.7614887170479116`*^9, 3.7614887190346556`*^9}, {3.761488814545791*^9, 
   3.761488831386944*^9}, {3.7614901468368616`*^9, 3.7614901472048388`*^9}, {
   3.761491375458788*^9, 3.761491502442309*^9}, {3.7614915511335926`*^9, 
   3.761491553549555*^9}, {3.761790568372245*^9, 3.7617905725817237`*^9}, 
   3.7617914673551335`*^9, {3.766191562176281*^9, 3.7661915635199685`*^9}, {
   3.766191884256581*^9, 3.766191894353376*^9}, {3.7661920244441595`*^9, 
   3.766192030736329*^9}, {3.7661920921181335`*^9, 3.766192097407604*^9}, {
   3.7661921685633373`*^9, 3.76619237096817*^9}, {3.7661924815735703`*^9, 
   3.7661924941979027`*^9}, {3.7661927147655764`*^9, 3.766193045051543*^9}, {
   3.7661930882676697`*^9, 3.766193332987663*^9}, 3.7661934159110084`*^9, {
   3.766193567520937*^9, 3.766193591205654*^9}, {3.7661936771756644`*^9, 
   3.766193683549073*^9}, 3.7661941678748507`*^9, 3.766194840300101*^9, {
   3.766238227932149*^9, 3.7662382370168343`*^9}, {3.7663135486907935`*^9, 
   3.7663135541631374`*^9}, {3.766313593399233*^9, 3.7663135998789105`*^9}, {
   3.766313635716094*^9, 3.766313701259858*^9}, 3.7663138176605234`*^9, 
   3.7665744338790693`*^9, 3.7665751760922856`*^9, {3.7668476315941205`*^9, 
   3.766847637775283*^9}, {3.7668479870638213`*^9, 3.766847992572731*^9}, {
   3.7668494396101007`*^9, 3.766849439976844*^9}, 3.7670068499348946`*^9, {
   3.7670068808820066`*^9, 3.7670069114461336`*^9}, {3.767007052035391*^9, 
   3.767007064137784*^9}, {3.767007097310874*^9, 3.7670071715976114`*^9}, {
   3.7670079103700714`*^9, 3.7670079242500935`*^9}, {3.767008222250637*^9, 
   3.7670082321100826`*^9}, {3.7670089257635975`*^9, 3.767008943417094*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"d4f229af-fbba-49be-a796-2f9335d09941"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"14", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PrintEigenfunctions", "[", 
     RowBox[{"eqn_List", ",", "spectrum_", ",", "Nmax_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
         "EigenfunctionOptions", ",", "BoundaryOptions", ",", 
          "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "plot", ",", "equation", ",", "testlist", ",", "var", ",", "varstring",
         ",", "funclist", ",", "funcmax", ",", "eigenvectors", ",", 
        "eigenfunctions", ",", "reeigenfunclist", ",", "imeigenfunclist", ",", 
        RowBox[{"ulb", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "LowerBound", "]"}]}], ",", 
        RowBox[{"uub", "=", 
         RowBox[{"OptionValue", "[", "UpperBound", "]"}]}], ",", 
        RowBox[{"prec", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}], " ", 
            "\[Equal]", " ", "0"}], ",", " ", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"2", "*", "Nmax"}], ",", "$MinPrecision"}], "]"}], ",", 
           " ", 
           RowBox[{"OptionValue", "[", "FunctionPrecision", "]"}]}], 
          "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"equation", " ", "=", " ", 
        RowBox[{"eqn", "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"find", " ", "independent", " ", "variable"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"testlist", " ", "=", " ", 
        RowBox[{"Union", "[", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"eqn", ",", 
            RowBox[{
             RowBox[{"\[Phi]_Symbol", "[", "u_Symbol", "]"}], "\[Rule]", " ", 
             "u"}], ",", " ", "\[Infinity]"}], "]"}], ",", 
          RowBox[{"Cases", "[", 
           RowBox[{"eqn", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "n_", "]"}], "[", "\[Phi]_Symbol", 
               "]"}], "[", "u_Symbol", "]"}], "\[Rule]", " ", "u"}], ",", 
            "\[Infinity]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], "<", "1"}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{"GetEigenfunctions", "::", "novariables"}], "]"}], ";"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], ">", "1"}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{
            RowBox[{"GetEigenfunctions", "::", "manyvariables"}], ",", 
            "testlist"}], "]"}], ";"}], ",", "\[IndentingNewLine]", "True", 
         ",", 
         RowBox[{
          RowBox[{"var", " ", "=", " ", 
           RowBox[{"testlist", "//", "Last"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"find", " ", "dependent", " ", "functions"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"testlist", " ", "=", "  ", 
        RowBox[{"Union", "[", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"eqn", ",", 
            RowBox[{
             RowBox[{"\[Phi]_Symbol", "[", "var", "]"}], "\[Rule]", 
             "\[Phi]"}], ",", "\[Infinity]"}], "]"}], ",", 
          RowBox[{"Cases", "[", 
           RowBox[{"eqn", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Derivative", "[", "n_", "]"}], "[", "\[Phi]_Symbol", 
               "]"}], "[", "var", "]"}], "\[Rule]", " ", "\[Phi]"}], ",", 
            "\[Infinity]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], "<", 
          RowBox[{"Length", "[", "eqn", "]"}]}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{
            RowBox[{"GetEigenfunctions", "::", "underdetermined"}], ",", 
            "testlist", ",", 
            RowBox[{"Length", "[", "eqn", "]"}]}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Length", "[", "testlist", "]"}], ">", 
          RowBox[{"Length", "[", "eqn", "]"}]}], ",", 
         RowBox[{
          RowBox[{"ThrowAbort", "[", 
           RowBox[{
            RowBox[{"GetEigenfunctions", "::", "overdetermined"}], ",", 
            "testlist", ",", 
            RowBox[{"Length", "[", "eqn", "]"}]}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", "True", ",", " ", 
         RowBox[{
          RowBox[{"funclist", " ", "=", " ", "testlist"}], ";"}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"funcmax", " ", "=", " ", 
        RowBox[{"Length", "[", "funclist", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"varstring", "=", 
        RowBox[{"ToString", "[", "var", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Clear", "[", "var", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"eigenfunctions", " ", "=", " ", 
        RowBox[{"GetEigenfunctions", "[", 
         RowBox[{"eqn", ",", "spectrum", ",", "Nmax", ",", "var", ",", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "Normalization", ",", "LowerBound", ",", "UpperBound", ",", 
              "LBPower", ",", "UBPower", ",", "FunctionPrecision", ",", 
              "CollocationGrid", ",", "FunctionCutoff", ",", "MaxIteration"}],
              "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"reeigenfunclist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Tooltip", "[", 
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{"eigenfunctions", "\[LeftDoubleBracket]", 
              RowBox[{"eigenindex", ",", "funcindex"}], 
              "\[RightDoubleBracket]"}], "]"}], ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{
               "spectrum", "\[LeftDoubleBracket]", "eigenindex", 
                "\[RightDoubleBracket]"}], ",", "5"}], "]"}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"funcindex", ",", "funcmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"eigenindex", ",", 
            RowBox[{"Length", "[", "eigenfunctions", "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"imeigenfunclist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Tooltip", "[", 
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"eigenfunctions", "\[LeftDoubleBracket]", 
              RowBox[{"eigenindex", ",", "funcindex"}], 
              "\[RightDoubleBracket]"}], "]"}], ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{
               "spectrum", "\[LeftDoubleBracket]", "eigenindex", 
                "\[RightDoubleBracket]"}], ",", "5"}], "]"}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"funcindex", ",", "funcmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"eigenindex", ",", 
            RowBox[{"Length", "[", "eigenfunctions", "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"plot", " ", "=", " ", 
        RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "reeigenfunclist", "\[LeftDoubleBracket]", "funcindex", 
                 "\[RightDoubleBracket]"}], "~", "Join", "~", 
                RowBox[{
                "imeigenfunclist", "\[LeftDoubleBracket]", "funcindex", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "ulb", ",", "uub"}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"Axes", "\[Rule]", "True"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"varstring", ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                 "funclist", "\[LeftDoubleBracket]", "funcindex", 
                  "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", "Blue", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Length", "[", "eigenfunctions", "]"}], "}"}]}], 
                "]"}], "~", "Join", "~", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", "Red", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Length", "[", "eigenfunctions", "]"}], "}"}]}], 
                "]"}]}]}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "prec"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"funcindex", ",", "funcmax"}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "plot"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PrintEigenfunctions", "[", 
     RowBox[{"eqn_", ",", "spectrum_", ",", "Nmax_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
         "EigenfunctionOptions", ",", "BoundaryOptions", ",", 
          "NumericalOptions"}], "}"}], "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"PrintEigenfunctions", "[", 
     RowBox[{
      RowBox[{"{", "eqn", "}"}], ",", "spectrum", ",", "Nmax", ",", "opts"}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7614837417873716`*^9, 3.7614838187788067`*^9}, {
   3.7614838548783245`*^9, 3.761483875750904*^9}, {3.7614839630595074`*^9, 
   3.7614840110134625`*^9}, {3.761484129074749*^9, 3.7614841456390734`*^9}, {
   3.7614841965921206`*^9, 3.7614842015224004`*^9}, {3.761484609218443*^9, 
   3.761484653535022*^9}, {3.761485518007251*^9, 3.7614855188011312`*^9}, {
   3.761485554401492*^9, 3.7614855554965487`*^9}, {3.7614855895897107`*^9, 
   3.7614855956378503`*^9}, {3.761485655967285*^9, 3.761485859714944*^9}, {
   3.761485895720834*^9, 3.7614858979110875`*^9}, {3.761485935222334*^9, 
   3.7614859851400967`*^9}, {3.7614864723347116`*^9, 
   3.7614864753491364`*^9}, {3.7614871458549204`*^9, 3.761487147378168*^9}, {
   3.761487177560353*^9, 3.761487194030882*^9}, {3.7614872243706293`*^9, 
   3.7614872979150114`*^9}, {3.7614873641070986`*^9, 3.761487383395178*^9}, {
   3.761487418618783*^9, 3.7614874873603573`*^9}, {3.7614875670772195`*^9, 
   3.7614875946534986`*^9}, {3.7614877951706247`*^9, 
   3.7614878024752526`*^9}, {3.7614878602110605`*^9, 
   3.7614878641413355`*^9}, {3.7614879046187196`*^9, 
   3.7614879344499435`*^9}, {3.7614880043834248`*^9, 3.761488104462509*^9}, {
   3.7614881375022273`*^9, 3.7614882032843275`*^9}, {3.7614882477331657`*^9, 
   3.761488256487849*^9}, {3.761490316529086*^9, 3.761490493546587*^9}, {
   3.761492869450249*^9, 3.7614928857715673`*^9}, 3.7617911037015057`*^9, 
   3.7617938187652006`*^9, {3.761793904327586*^9, 3.761793909259985*^9}, 
   3.7617940581535735`*^9, {3.7617984763145885`*^9, 3.761798485511896*^9}, {
   3.7617986793710494`*^9, 3.7617986825025835`*^9}, {3.7617988554632807`*^9, 
   3.7617988557823105`*^9}, {3.7617989768558073`*^9, 
   3.7617989794722204`*^9}, {3.761799055236117*^9, 3.7617990553554153`*^9}, {
   3.761799099458469*^9, 3.761799102192422*^9}, {3.7617991338723345`*^9, 
   3.7617991347080927`*^9}, {3.7617991929081154`*^9, 3.761799195612796*^9}, {
   3.761799263944208*^9, 3.7617992640673914`*^9}, {3.761799332333437*^9, 
   3.7617993324459944`*^9}, {3.7617994336326394`*^9, 3.761799442283764*^9}, {
   3.7617994958896875`*^9, 3.761799502135078*^9}, 3.7617995794877644`*^9, {
   3.7618088450074425`*^9, 3.76180884572626*^9}, 3.7649967029985266`*^9, {
   3.765002827300124*^9, 3.765002858107318*^9}, {3.765013704582306*^9, 
   3.7650137146891403`*^9}, {3.765014034849308*^9, 3.765014143297959*^9}, {
   3.7650142529848795`*^9, 3.7650142852566137`*^9}, {3.765014445264558*^9, 
   3.7650145261712093`*^9}, {3.7650146020497885`*^9, 3.7650146409159*^9}, {
   3.7650148302583666`*^9, 3.765014840749303*^9}, {3.7650150273151145`*^9, 
   3.765015044552188*^9}, {3.7650153054947805`*^9, 3.765015397951969*^9}, {
   3.765015451734864*^9, 3.7650154927709656`*^9}, {3.765015898045974*^9, 
   3.7650159167479343`*^9}, {3.765016247535514*^9, 3.7650163403140144`*^9}, {
   3.7650163853477745`*^9, 3.765016391594079*^9}, {3.7650168232575903`*^9, 
   3.765016912554939*^9}, {3.765016953194589*^9, 3.7650170330117025`*^9}, 
   3.765017068078805*^9, {3.7661843369903655`*^9, 3.7661843409977336`*^9}, {
   3.7661843796686954`*^9, 3.7661844299997854`*^9}, {3.7661844646886206`*^9, 
   3.766184488948392*^9}, {3.7661845390136557`*^9, 3.7661845431575747`*^9}, {
   3.7661853585064664`*^9, 3.766185372072364*^9}, {3.7661854469822474`*^9, 
   3.766185473622319*^9}, {3.7661855199060555`*^9, 3.7661855376597147`*^9}, {
   3.7661856078272104`*^9, 3.766185702110191*^9}, {3.7661857375364757`*^9, 
   3.7661859280003576`*^9}, {3.766185960144867*^9, 3.766185986257036*^9}, {
   3.7661863802742057`*^9, 3.7661864721596603`*^9}, {3.766186518272093*^9, 
   3.7661865854714336`*^9}, {3.766186625861803*^9, 3.766186717151019*^9}, {
   3.7661867598855963`*^9, 3.766186836606818*^9}, {3.766186945780964*^9, 
   3.7661871460651784`*^9}, {3.7661871901259174`*^9, 
   3.7661872158015146`*^9}, {3.7661872500501175`*^9, 
   3.7661872899832244`*^9}, {3.7661873287704983`*^9, 
   3.7661873293600035`*^9}, {3.766187368321077*^9, 3.7661873941782484`*^9}, {
   3.766187464789317*^9, 3.7661874653048315`*^9}, {3.7661874981524363`*^9, 
   3.7661875093576756`*^9}, {3.766187539623079*^9, 3.7661876798067427`*^9}, {
   3.7661877371608152`*^9, 3.7661877648508806`*^9}, {3.7661878159136395`*^9, 
   3.7661878562392836`*^9}, {3.7661879725156612`*^9, 
   3.7661884257343616`*^9}, {3.766188488962836*^9, 3.766188520582616*^9}, {
   3.766188574527973*^9, 3.7661886220518913`*^9}, {3.7661886793451195`*^9, 
   3.7661886860663104`*^9}, {3.766188718521823*^9, 3.766188817795231*^9}, {
   3.7661889273220344`*^9, 3.766188958907173*^9}, {3.7661894376805177`*^9, 
   3.766189448804923*^9}, 3.7661895036559324`*^9, {3.7661896249123197`*^9, 
   3.766189653098482*^9}, {3.7661899856739893`*^9, 3.7661900775730453`*^9}, 
   3.7661903885609503`*^9, {3.766238728065036*^9, 3.766238729782443*^9}, 
   3.766238793530039*^9, {3.7665741586267514`*^9, 3.766574158642371*^9}, {
   3.766574422409479*^9, 3.766574447132695*^9}, 3.76684156915686*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"f43a173e-15bb-488d-ad33-a8adc9a294db"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GetEigenfunctions", "::", "novariables"}], "=", " ", 
  "\"\<No independent variables detected.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetEigenfunctions", "::", "manyvariables"}], " ", "=", " ", 
  "\"\<Too many independent variables detected. `1` detected, expecting \
1.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetEigenfunctions", "::", "underdetermined"}], " ", "=", " ", 
  "\"\<Problem is underdetermined. `1` dependent variables detected, \
expecting `2`.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetEigenfunctions", "::", "overdetermined"}], " ", "=", " ", 
  "\"\<Problem is overdetermined. `1` dependent variables detected, expecting \
`2`.\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7661888923275476`*^9, 3.7661889148504577`*^9}, {
  3.766574158642371*^9, 3.766574158642371*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"8c96c2fa-71bd-4e50-8441-94418af934bd"],

Cell[BoxData["\<\"No independent variables detected.\"\>"], "Output",
 CellChangeTimes->{{3.766196645473507*^9, 3.7661966467476635`*^9}, 
   3.7662383527404346`*^9, 3.766282269607094*^9, 3.7662828549357834`*^9, 
   3.766282976688345*^9, 3.766313464563689*^9, 3.766313761457911*^9, 
   3.7665744684008274`*^9, 3.766574523222555*^9, 3.766574668446581*^9, 
   3.766575181434767*^9, 3.766630272608205*^9, 3.766837787965354*^9, 
   3.766839888529202*^9, 3.7668494533214407`*^9, 3.766871191768626*^9, 
   3.766875247800782*^9, 3.766875357151698*^9, 3.7668754723386364`*^9, 
   3.7668755261037188`*^9, 3.7668755792301235`*^9, 3.7668767466576414`*^9, 
   3.7668833978317747`*^9, 3.7668865578914847`*^9, 3.7668866651794796`*^9, 
   3.766901961991602*^9, {3.7669019961908593`*^9, 3.766902000554166*^9}, 
   3.7669804027074986`*^9, 3.766980964916125*^9, 3.7669823225232315`*^9, 
   3.7670097717823763`*^9, 3.7904913837096605`*^9, 3.790556963172057*^9, 
   3.7924170112456245`*^9, 3.793263067014646*^9, 3.793263162288602*^9, 
   3.793263296941339*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"30980378-bfbf-4b9e-b7cc-60fa2ef3463b"],

Cell[BoxData["\<\"Too many independent variables detected. `1` detected, \
expecting 1.\"\>"], "Output",
 CellChangeTimes->{{3.766196645473507*^9, 3.7661966467476635`*^9}, 
   3.7662383527404346`*^9, 3.766282269607094*^9, 3.7662828549357834`*^9, 
   3.766282976688345*^9, 3.766313464563689*^9, 3.766313761457911*^9, 
   3.7665744684008274`*^9, 3.766574523222555*^9, 3.766574668446581*^9, 
   3.766575181434767*^9, 3.766630272608205*^9, 3.766837787965354*^9, 
   3.766839888529202*^9, 3.7668494533214407`*^9, 3.766871191768626*^9, 
   3.766875247800782*^9, 3.766875357151698*^9, 3.7668754723386364`*^9, 
   3.7668755261037188`*^9, 3.7668755792301235`*^9, 3.7668767466576414`*^9, 
   3.7668833978317747`*^9, 3.7668865578914847`*^9, 3.7668866651794796`*^9, 
   3.766901961991602*^9, {3.7669019961908593`*^9, 3.766902000554166*^9}, 
   3.7669804027074986`*^9, 3.766980964916125*^9, 3.7669823225232315`*^9, 
   3.7670097717823763`*^9, 3.7904913837096605`*^9, 3.790556963172057*^9, 
   3.7924170112456245`*^9, 3.793263067014646*^9, 3.793263162288602*^9, 
   3.7932632969462724`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"32969f07-4565-41d4-9102-2a72e275eb32"],

Cell[BoxData["\<\"Problem is underdetermined. `1` dependent variables \
detected, expecting `2`.\"\>"], "Output",
 CellChangeTimes->{{3.766196645473507*^9, 3.7661966467476635`*^9}, 
   3.7662383527404346`*^9, 3.766282269607094*^9, 3.7662828549357834`*^9, 
   3.766282976688345*^9, 3.766313464563689*^9, 3.766313761457911*^9, 
   3.7665744684008274`*^9, 3.766574523222555*^9, 3.766574668446581*^9, 
   3.766575181434767*^9, 3.766630272608205*^9, 3.766837787965354*^9, 
   3.766839888529202*^9, 3.7668494533214407`*^9, 3.766871191768626*^9, 
   3.766875247800782*^9, 3.766875357151698*^9, 3.7668754723386364`*^9, 
   3.7668755261037188`*^9, 3.7668755792301235`*^9, 3.7668767466576414`*^9, 
   3.7668833978317747`*^9, 3.7668865578914847`*^9, 3.7668866651794796`*^9, 
   3.766901961991602*^9, {3.7669019961908593`*^9, 3.766902000554166*^9}, 
   3.7669804027074986`*^9, 3.766980964916125*^9, 3.7669823225232315`*^9, 
   3.7670097717823763`*^9, 3.7904913837096605`*^9, 3.790556963172057*^9, 
   3.7924170112456245`*^9, 3.793263067014646*^9, 3.793263162288602*^9, 
   3.793263296950386*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"cdbc65c9-9a6e-4d81-ac3a-d69632d8f8e3"],

Cell[BoxData["\<\"Problem is overdetermined. `1` dependent variables \
detected, expecting `2`.\"\>"], "Output",
 CellChangeTimes->{{3.766196645473507*^9, 3.7661966467476635`*^9}, 
   3.7662383527404346`*^9, 3.766282269607094*^9, 3.7662828549357834`*^9, 
   3.766282976688345*^9, 3.766313464563689*^9, 3.766313761457911*^9, 
   3.7665744684008274`*^9, 3.766574523222555*^9, 3.766574668446581*^9, 
   3.766575181434767*^9, 3.766630272608205*^9, 3.766837787965354*^9, 
   3.766839888529202*^9, 3.7668494533214407`*^9, 3.766871191768626*^9, 
   3.766875247800782*^9, 3.766875357151698*^9, 3.7668754723386364`*^9, 
   3.7668755261037188`*^9, 3.7668755792301235`*^9, 3.7668767466576414`*^9, 
   3.7668833978317747`*^9, 3.7668865578914847`*^9, 3.7668866651794796`*^9, 
   3.766901961991602*^9, {3.7669019961908593`*^9, 3.766902000554166*^9}, 
   3.7669804027074986`*^9, 3.766980964916125*^9, 3.7669823225232315`*^9, 
   3.7670097717823763`*^9, 3.7904913837096605`*^9, 3.790556963172057*^9, 
   3.7924170112456245`*^9, 3.793263067014646*^9, 3.793263162288602*^9, 
   3.7932632969531956`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"63c53473-db89-4233-a037-e5336b5235db"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options, Error Handling, and Other Miscellaneous Functions", "Section",
 CellChangeTimes->{{3.76139479521495*^9, 3.7613948024565687`*^9}, {
  3.761431014050248*^9, 3.7614310179592247`*^9}, {3.7660960916925516`*^9, 
  3.766096109357294*^9}},ExpressionUUID->"13c71e43-daea-4b29-8239-\
f4bbbc6dc50a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "CatchAbort", "]"}], "=", 
   RowBox[{
    RowBox[{"Attributes", "[", "ThrowAbort", "]"}], "=", 
    RowBox[{"{", "HoldAll", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ThrowAbort", "[", 
   RowBox[{"message_", ",", "args___"}], "]"}], ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"message", ",", "args"}], "]"}], ";", 
    RowBox[{"Throw", "[", 
     RowBox[{
      RowBox[{"Abort", "[", "]"}], ",", "$Failed"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CatchAbort", "[", "exp_", "]"}], " ", ":=", " ", 
  RowBox[{"Catch", "[", 
   RowBox[{"exp", ",", "$Failed"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761394827648554*^9, 3.761394863636572*^9}, {
  3.761396154345508*^9, 3.761396155739815*^9}, {3.761396196856801*^9, 
  3.761396216550127*^9}, {3.761396521420678*^9, 3.7613965330376053`*^9}, {
  3.7613965673438473`*^9, 3.7613965685317016`*^9}, {3.761396614728133*^9, 
  3.761396665256957*^9}, {3.7614405548236156`*^9, 3.7614405609318385`*^9}, {
  3.7614408453637953`*^9, 3.7614408515840254`*^9}, {3.761442788336059*^9, 
  3.761442794960267*^9}, {3.7614453845443697`*^9, 3.761445420720188*^9}, {
  3.761445697768832*^9, 3.761445698658118*^9}, {3.761445875699806*^9, 
  3.76144588338726*^9}, {3.766574447148348*^9, 3.7665744551637373`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"42134c81-d4c2-4d07-b891-5a0ece353871"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "BoundaryOptions", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LowerBound", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"UpperBound", "\[Rule]", "1"}], ",", 
     RowBox[{"LBPower", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"UBPower", "\[Rule]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "NumericalOptions", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FunctionPrecision", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"CollocationGrid", "\[Rule]", "\"\<Chebyschev\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ComparisonOptions", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cutoff", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"TestMagnitude", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EigenCompOptions", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"L2Cutoff", "\[Rule]", " ", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EigenfunctionOptions", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Normalization", "\[Rule]", "\"\<UB\>\""}], ",", 
     RowBox[{"FinalAsymptotics", "\[Rule]", "\"\<Default\>\""}], ",", 
     RowBox[{"FunctionCutoff", "\[Rule]", "12"}], ",", 
     RowBox[{"MaxIteration", "\[Rule]", "50"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PrintOptions", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FreqName", " ", "\[Rule]", " ", "\"\<\[Omega]\>\""}], ",", 
     RowBox[{"NSpectrum", "\[Rule]", " ", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"NEigenFunc", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"ZeroCutoff", "\[Rule]", "20"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7921968429535475`*^9, 3.7921968447740264`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"4e23866d-3d8b-47bc-bbbc-dfd15ba2f453"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FilterEigenvalues", "[", 
   RowBox[{"spectrum_", ",", "tags_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"unique", "=", "spectrum"}], ",", 
      RowBox[{"conjugates1", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"conjugates2", "=", 
       RowBox[{"{", "}"}]}], ",", "testspec1", ",", "testspec2", ",", 
      "\[Omega]test", ",", "prec", ",", "agreedDigits", ",", "filteredspec"}],
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"\[Omega]", " ", "=", " ", 
      RowBox[{"-", 
       SuperscriptBox["\[Omega]", "*"]}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"testspec1", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"unique", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"testspec2", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"unique", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], "\[LessEqual]", " ", "0"}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "testspec1", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Length", "[", "testspec2", "]"}], ">", "0"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Omega]test", " ", "=", " ", 
          RowBox[{"First", "@", 
           RowBox[{"MinimalBy", "[", 
            RowBox[{"testspec2", ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"#", "-", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Conjugate", "[", 
                   RowBox[{
                   "testspec1", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "]"}]}], ")"}]}], "]"}], 
              "&"}]}], "]"}]}]}], ";", 
         RowBox[{"prec", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"Precision", "/@", 
            RowBox[{"{", 
             RowBox[{"\[Omega]test", ",", 
              RowBox[{
              "testspec1", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"agreedDigits", " ", "=", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"Log10", "[", 
                RowBox[{"Abs", "[", 
                 RowBox[{"\[Omega]test", "-", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Conjugate", "[", 
                    RowBox[{
                    "testspec1", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "]"}]}], ")"}]}], "]"}], "]"}],
                "/.", " ", 
               RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                RowBox[{"-", "prec"}]}]}], "]"}]}], "+", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"Log10", "[", 
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{"\[Omega]test", "+", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Conjugate", "[", 
                    RowBox[{
                    "testspec1", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "]"}]}], ")"}]}], "2"], "]"}], 
               "]"}], "/.", " ", 
              RowBox[{
               RowBox[{"-", "Infinity"}], "\[Rule]", "0"}]}], "]"}]}], 
           ")"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"agreedDigits", "\[GreaterEqual]", 
            FractionBox["prec", "2"]}], ",", 
           RowBox[{
            RowBox[{"conjugates1", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"conjugates1", ",", 
               RowBox[{
               "testspec1", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
            RowBox[{"testspec2", " ", "=", " ", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"testspec2", ",", "\[Omega]test"}], "]"}]}], ";"}]}], 
          "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"unique", " ", "=", " ", 
      RowBox[{
       RowBox[{"Complement", "[", 
        RowBox[{"testspec1", ",", "conjugates1"}], "]"}], "~", "Join", "~", 
       "testspec2"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"\[Omega]", " ", "=", " ", 
       SuperscriptBox["\[Omega]", "*"]}], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"testspec1", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"unique", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Im", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"testspec2", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"unique", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Im", "[", "#", "]"}], "\[LessEqual]", " ", "0"}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "testspec1", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Length", "[", "testspec2", "]"}], ">", "0"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Omega]test", " ", "=", " ", 
          RowBox[{"First", "@", 
           RowBox[{"MinimalBy", "[", 
            RowBox[{"testspec2", ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"#", "-", 
                RowBox[{"(", 
                 RowBox[{"Conjugate", "[", 
                  RowBox[{
                  "testspec1", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "]"}], ")"}]}], "]"}], "&"}]}], 
            "]"}]}]}], ";", 
         RowBox[{"prec", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"Precision", "/@", 
            RowBox[{"{", 
             RowBox[{"\[Omega]test", ",", 
              RowBox[{
              "testspec1", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"agreedDigits", " ", "=", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"Log10", "[", 
                RowBox[{"Abs", "[", 
                 RowBox[{"\[Omega]test", "-", 
                  RowBox[{"(", 
                   RowBox[{"Conjugate", "[", 
                    RowBox[{
                    "testspec1", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "]"}], ")"}]}], "]"}], "]"}], "/.",
                " ", 
               RowBox[{"Indeterminate", " ", "\[Rule]", " ", 
                RowBox[{"-", "prec"}]}]}], "]"}]}], " ", "+", " ", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"Log10", "[", 
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{"\[Omega]test", "+", 
                  RowBox[{"(", 
                   RowBox[{"Conjugate", "[", 
                    RowBox[{
                    "testspec1", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "]"}], ")"}]}], "2"], "]"}], 
               "]"}], "/.", " ", 
              RowBox[{
               RowBox[{"-", "Infinity"}], "\[Rule]", "0"}]}], "]"}]}], 
           ")"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"agreedDigits", "\[GreaterEqual]", 
            FractionBox["prec", "2"]}], ",", 
           RowBox[{
            RowBox[{"conjugates2", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"conjugates2", ",", 
               RowBox[{
               "testspec1", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
            RowBox[{"testspec2", " ", "=", " ", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"testspec2", ",", "\[Omega]test"}], "]"}]}], ";"}]}], 
          "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"unique", "=", 
      RowBox[{
       RowBox[{"Complement", "[", 
        RowBox[{"testspec1", ",", "conjugates2"}], "]"}], "~", "Join", "~", 
       "testspec2"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"filteredspec", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{"tags", ",", 
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<\[PlusMinus] \>\"", ",", "\"\<\>\"", ",", 
               RowBox[{
               "conjugates1", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "conjugates1", "]"}]}], "}"}]}], "]"}], 
           "~", "Join", "~", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\[PlusMinus] \>\"", ",", 
               RowBox[{
               "conjugates2", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "conjugates2", "]"}]}], "}"}]}], "]"}], 
           "~", "Join", "~", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", 
               RowBox[{
               "unique", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "unique", "]"}]}], "}"}]}], "]"}]}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{
             "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             "]"}], ">", 
            RowBox[{"Re", "[", 
             RowBox[{
             "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             "]"}]}], "&"}]}], "]"}], ",", 
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{
          "conjugates1", "~", "Join", "~", "conjugates2", "~", "Join", "~", 
           "unique"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "[", "#1", "]"}], ">", 
            RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "filteredspec"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767006835106805*^9, 3.7670068387134547`*^9}, {
  3.7670100738350763`*^9, 3.7670100826246853`*^9}, {3.76701036137639*^9, 
  3.7670103747828884`*^9}, {3.7670104664374123`*^9, 3.76701052744807*^9}, {
  3.7670105634626007`*^9, 3.767010571357502*^9}, {3.7670120916801786`*^9, 
  3.7670120966525154`*^9}, {3.76701237023104*^9, 3.7670123768637333`*^9}, {
  3.767012767429001*^9, 3.7670127684609632`*^9}, {3.76701288880977*^9, 
  3.7670130617401175`*^9}, {3.7670131638952866`*^9, 3.7670131664337177`*^9}, {
  3.767050943192587*^9, 3.767050948956787*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"e91cc2bc-12bb-4ed7-9000-b358b6534256"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"02", "/", "03"}], "/", "2019"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CleanDigits", "[", 
    RowBox[{"\[Omega]test_", ",", "\[Omega]ref_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Omega]same", ",", "re\[Omega]test", ",", "im\[Omega]test", ",", 
       "re\[Omega]same", ",", "im\[Omega]same", ",", "reave\[Omega]", " ", 
       ",", "imave\[Omega]", " ", ",", "result", ",", "prec"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Omega]same", " ", "=", " ", 
       RowBox[{
        RowBox[{"MinimalBy", "[", 
         RowBox[{"\[Omega]ref", ",", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#", "-", "\[Omega]test"}], "]"}], "&"}]}], "]"}], "//", 
        "First"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"prec", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"Precision", "/@", 
         RowBox[{"{", 
          RowBox[{"\[Omega]test", ",", "\[Omega]same"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"re\[Omega]test", " ", "=", " ", 
       RowBox[{"Re", "[", "\[Omega]test", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"im\[Omega]test", " ", "=", " ", 
       RowBox[{"Im", "[", "\[Omega]test", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"re\[Omega]same", " ", "=", " ", 
       RowBox[{"Re", "[", "\[Omega]same", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"im\[Omega]same", " ", "=", " ", 
       RowBox[{"Im", "[", "\[Omega]same", "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"reave\[Omega]", " ", "=", " ", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{"re\[Omega]test", "+", "re\[Omega]same"}], "2"], "]"}], 
          "]"}], "/.", " ", 
         RowBox[{
          RowBox[{"-", "Infinity"}], "\[Rule]", " ", "0"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"imave\[Omega]", " ", "=", " ", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{"im\[Omega]same", "+", "im\[Omega]test"}], "2"], "]"}], 
          "]"}], "/.", " ", 
         RowBox[{
          RowBox[{"-", "Infinity"}], " ", "\[Rule]", " ", "0"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", " ", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"re\[Omega]test", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Floor", "[", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{
                   RowBox[{"Log10", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"re\[Omega]test", "-", "re\[Omega]same"}], "]"}], 
                    "]"}], ",", "0.2"}], "]"}], "]"}]}], " ", "/.", " ", 
               RowBox[{"Indeterminate", " ", "\[Rule]", " ", "prec"}]}], 
              ")"}], " ", "+", "reave\[Omega]"}], ")"}], "/.", 
           RowBox[{
            RowBox[{"_", "?", "Negative"}], "\[Rule]", "0"}]}]}], "]"}], " ", 
        "+", " ", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{"im\[Omega]test", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Floor", "[", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{
                    RowBox[{"Log10", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"im\[Omega]test", "-", "im\[Omega]same"}], "]"}], 
                    "]"}], ",", "0.2"}], "]"}], "]"}]}], "/.", " ", 
                RowBox[{"Indeterminate", " ", "\[Rule]", " ", "prec"}]}], 
               ")"}], "+", "imave\[Omega]"}], " ", ")"}], "/.", 
            RowBox[{
             RowBox[{"_", "?", "Negative"}], "\[Rule]", "0"}]}]}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", "result"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7904817548642426`*^9, 3.7904817558535967`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"ac9b001a-5dbb-411f-a76d-6df39cf4f883"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7605108911258464`*^9, 3.760510897937086*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"16d55aa8-de04-4941-bb0d-091b9e75cf09"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 256, 4, 96, "Title",ExpressionUUID->"60066aca-edf5-4fec-8fdd-3defe3b5823d"],
Cell[839, 28, 370, 7, 44, "Input",ExpressionUUID->"6fd77285-1170-4c9f-a27b-55e81c756500",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1234, 39, 155, 3, 67, "Chapter",ExpressionUUID->"4b3f4772-91a9-405c-84e3-5f0b6593b0a4"],
Cell[CellGroupData[{
Cell[1414, 46, 258, 4, 53, "Subsection",ExpressionUUID->"e34c7213-76f6-47a3-ba87-2647a988e918"],
Cell[CellGroupData[{
Cell[1697, 54, 224, 4, 44, "Subsubsection",ExpressionUUID->"9489ad86-9586-4e10-9376-90f9b95ae0bf"],
Cell[CellGroupData[{
Cell[1946, 62, 1763, 31, 121, "Input",ExpressionUUID->"bcf3fe8b-b226-4c69-b39f-d954c0037178",
 InitializationCell->True],
Cell[3712, 95, 923, 13, 32, "Output",ExpressionUUID->"93e34cee-3c2b-461d-889e-9ee7c125ad10"],
Cell[4638, 110, 869, 12, 32, "Output",ExpressionUUID->"4d04fe34-cfbf-4f01-819d-b4e7aa65ab20"],
Cell[5510, 124, 896, 12, 32, "Output",ExpressionUUID->"c9206fe4-513f-4fbd-af48-14331a20d5d3"],
Cell[6409, 138, 938, 13, 32, "Output",ExpressionUUID->"f0c662ea-27bb-40b5-ad89-dfda56a9c8f2"],
Cell[7350, 153, 909, 12, 32, "Output",ExpressionUUID->"d6822eb4-0516-42ec-bf9e-c3f7501a8a74"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8308, 171, 222, 4, 44, "Subsubsection",ExpressionUUID->"c6d13de3-ad48-41dd-9b08-a8b32d3ccd06"],
Cell[CellGroupData[{
Cell[8555, 179, 2401, 40, 159, "Input",ExpressionUUID->"504c6edf-8ee0-4715-9cce-7325d3379f8c",
 InitializationCell->True],
Cell[10959, 221, 879, 12, 32, "Output",ExpressionUUID->"9e65b7e3-0506-4f5a-86a9-9fd775c613cb"],
Cell[11841, 235, 935, 13, 32, "Output",ExpressionUUID->"0647c1b3-4865-45aa-bc04-d6f5d8cc767a"],
Cell[12779, 250, 916, 13, 32, "Output",ExpressionUUID->"eb541917-c8dd-4662-99a3-aad6631c175e"],
Cell[13698, 265, 956, 13, 32, "Output",ExpressionUUID->"1a5c7ad9-58ae-4583-a5f4-6157f72885a2"],
Cell[14657, 280, 981, 13, 52, "Output",ExpressionUUID->"af954d3c-3eef-4e05-9a8f-62d1d523e3b9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15687, 299, 172, 3, 44, "Subsubsection",ExpressionUUID->"fc13ba7f-ebc0-4e02-8201-04227a8970be"],
Cell[CellGroupData[{
Cell[15884, 306, 1700, 29, 140, "Input",ExpressionUUID->"96420ae7-3cf1-4434-805e-ae15a65aca30",
 InitializationCell->True],
Cell[17587, 337, 999, 14, 52, "Output",ExpressionUUID->"47db8613-14a4-4ceb-86e3-4a7874aed6e9"],
Cell[18589, 353, 961, 14, 32, "Output",ExpressionUUID->"9a6f3fdc-68ed-4641-ab8b-d7387fa0afd6"],
Cell[19553, 369, 983, 14, 32, "Output",ExpressionUUID->"23e2166f-23e2-4db5-aaa7-6a582672930e"],
Cell[20539, 385, 949, 14, 32, "Output",ExpressionUUID->"321f86cd-3b25-4848-85b6-15e01f1ee4b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21525, 404, 1666, 30, 178, "Input",ExpressionUUID->"52b83ac6-e2f9-430b-8a92-fbaef1b932aa",
 InitializationCell->True],
Cell[23194, 436, 981, 13, 52, "Output",ExpressionUUID->"64545b22-41e3-41e1-9bf7-595f4b17d7f1"],
Cell[24178, 451, 860, 12, 32, "Output",ExpressionUUID->"61a225de-c00f-43ea-a6c4-cb0822e2f577"],
Cell[25041, 465, 973, 13, 52, "Output",ExpressionUUID->"d7a54e86-e24c-435b-b738-19adb4234176"],
Cell[26017, 480, 1012, 14, 52, "Output",ExpressionUUID->"fe3c309a-cb80-458f-ab3b-404c845cac83"],
Cell[27032, 496, 948, 13, 32, "Output",ExpressionUUID->"fea95aab-7982-4c23-aba8-a3472f753fc8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28029, 515, 192, 3, 44, "Subsubsection",ExpressionUUID->"e76cdf6b-1792-426f-bf50-92dc05a5ef97"],
Cell[CellGroupData[{
Cell[28246, 522, 481, 10, 64, "Input",ExpressionUUID->"f36e81bf-b4d5-428c-aab5-f88496834682",
 InitializationCell->True],
Cell[28730, 534, 813, 11, 32, "Output",ExpressionUUID->"21b88af3-1576-450b-9e3f-f9d9d8226bd0"],
Cell[29546, 547, 806, 11, 32, "Output",ExpressionUUID->"f96ca994-b407-4c55-8142-3d7ddadf480a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30413, 565, 164, 3, 53, "Subsection",ExpressionUUID->"14431fc1-2e2a-430a-ae65-719e32909d6a"],
Cell[30580, 570, 268, 5, 44, "Input",ExpressionUUID->"3252c71e-b011-419e-880c-9035380a8c55",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30897, 581, 262, 4, 67, "Chapter",ExpressionUUID->"4067eb94-9949-4a42-8e39-09a8960e6e8f"],
Cell[CellGroupData[{
Cell[31184, 589, 264, 4, 67, "Section",ExpressionUUID->"53d2a1a5-ba84-4d30-8a6e-924f5c6a2c92"],
Cell[31451, 595, 535, 9, 56, "Text",ExpressionUUID->"bd62bfeb-0cce-40c4-9ebc-94a58d20c3e6"],
Cell[31989, 606, 25544, 474, 1048, "Input",ExpressionUUID->"bdad043b-15b8-4717-ade8-160a72fd37af",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[57558, 1084, 1416, 27, 140, "Input",ExpressionUUID->"141a8396-d8dc-4ead-8786-790d2b20e4ea",
 InitializationCell->True],
Cell[58977, 1113, 2153, 29, 32, "Output",ExpressionUUID->"57dc71de-5899-43cf-976e-152838b22c17"],
Cell[61133, 1144, 2190, 30, 32, "Output",ExpressionUUID->"ae5cf457-289a-4beb-8ec9-cf01f8d10202"],
Cell[63326, 1176, 2148, 29, 32, "Output",ExpressionUUID->"deb0f434-9a21-4ea0-8d31-00dd8a87dd4d"],
Cell[65477, 1207, 2181, 30, 32, "Output",ExpressionUUID->"3a612038-1c94-456f-ac82-5c4a9c22f303"],
Cell[67661, 1239, 2197, 30, 32, "Output",ExpressionUUID->"3d58dd82-1cf6-4905-af74-a9249801124d"],
Cell[69861, 1271, 2196, 30, 32, "Output",ExpressionUUID->"92ddfbcb-7148-4a86-b58d-952b9f0727cb"]
}, Open  ]],
Cell[72072, 1304, 228, 5, 34, "Text",ExpressionUUID->"44f65038-704d-48e3-a07e-135320a47a20"],
Cell[72303, 1311, 9482, 197, 368, "Input",ExpressionUUID->"f1428181-71a8-423c-9910-b40bcd00c70f",
 InitializationCell->True],
Cell[81788, 1510, 2966, 69, 178, "Input",ExpressionUUID->"571d78b7-b44e-41e0-b21a-9226e506bf35",
 InitializationCell->True],
Cell[84757, 1581, 541, 16, 45, "Text",ExpressionUUID->"b1b91e9b-083e-4318-a7a2-179917598d83"],
Cell[85301, 1599, 11504, 244, 523, "Input",ExpressionUUID->"0de4f3dd-5b32-486e-9bc3-281fa584131c",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[96830, 1847, 1073, 18, 64, "Input",ExpressionUUID->"d1aa2970-ee3f-434b-a741-4123d94b1444",
 InitializationCell->True],
Cell[97906, 1867, 4821, 66, 32, "Output",ExpressionUUID->"21f1ffdc-8dbb-4b86-b5b7-e21db571e964"],
Cell[102730, 1935, 4898, 67, 32, "Output",ExpressionUUID->"3e9df26a-7cab-4937-9259-8c28309c55f7"]
}, Open  ]],
Cell[107643, 2005, 372, 8, 34, "Text",ExpressionUUID->"e41c8d68-bb69-4724-9856-07e7c1f52ff0"],
Cell[108018, 2015, 9319, 166, 311, "Input",ExpressionUUID->"bc753dd6-5cd5-4239-9acb-f59cdb438ae6",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[117362, 2185, 843, 15, 64, "Input",ExpressionUUID->"8aa23a2e-daa7-4f58-ad14-d2cce8fe0815",
 InitializationCell->True],
Cell[118208, 2202, 4063, 55, 32, "Output",ExpressionUUID->"0949a253-a4fc-46c6-a00f-a66f6aaeab91"],
Cell[122274, 2259, 4140, 56, 32, "Output",ExpressionUUID->"b234eace-d92c-4e29-a05e-db4365ea448f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126463, 2321, 218, 4, 67, "Section",ExpressionUUID->"c9c08da8-91a6-4361-964a-807bcf876088"],
Cell[126684, 2327, 681, 18, 34, "Text",ExpressionUUID->"97878f0b-3da8-410e-b139-a7fe86ee601b"],
Cell[127368, 2347, 7087, 146, 403, "Input",ExpressionUUID->"448b1ee7-7286-4548-97f4-626157fb4e92",
 InitializationCell->True],
Cell[134458, 2495, 540, 10, 44, "Input",ExpressionUUID->"d591e845-8790-43f6-9fc8-29f4fd8ea8e4",
 InitializationCell->True],
Cell[135001, 2507, 839, 28, 56, "Text",ExpressionUUID->"e0ff1748-95fd-4c9d-b7ff-dabdb94c0bda"],
Cell[135843, 2537, 5820, 127, 278, "Input",ExpressionUUID->"3492aa83-819a-42f7-bd21-2c5d96051f7a",
 InitializationCell->True],
Cell[141666, 2666, 513, 14, 56, "Text",ExpressionUUID->"4c35cdbc-f7fa-4de4-8ca5-6e6c547fc51d"],
Cell[142182, 2682, 5072, 109, 197, "Input",ExpressionUUID->"9864cbdb-d735-4384-aa01-3972c3e87b1e",
 InitializationCell->True],
Cell[147257, 2793, 454, 13, 34, "Text",ExpressionUUID->"aaed07fd-2e13-42f5-b8f6-ea57c6912c5b"],
Cell[147714, 2808, 3861, 88, 223, "Input",ExpressionUUID->"3a5de03d-6163-4b52-8c16-808c364bb9f4",
 InitializationCell->True],
Cell[151578, 2898, 491, 13, 34, "Text",ExpressionUUID->"9188bf04-b369-4b8e-bd90-82b21c945139"],
Cell[152072, 2913, 5652, 127, 384, "Input",ExpressionUUID->"d57082d7-06d4-407c-9e25-0e79601340d6",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[157761, 3045, 178, 3, 67, "Section",ExpressionUUID->"6e0bdf0a-b9b5-4fd8-a336-284f25c6c9ce"],
Cell[157942, 3050, 4709, 111, 288, "Input",ExpressionUUID->"9cb357af-ca6a-4390-bb04-a926156eab9f",
 InitializationCell->True],
Cell[162654, 3163, 499, 13, 64, "Input",ExpressionUUID->"75630a02-d80a-43bb-8ee4-c812e28eaf66",
 InitializationCell->True],
Cell[163156, 3178, 5394, 111, 235, "Input",ExpressionUUID->"5b38f932-f2d2-4709-b1e1-fca2f33809bb",
 InitializationCell->True],
Cell[168553, 3291, 15571, 311, 782, "Input",ExpressionUUID->"cd8398f0-ce0a-4b92-8a2d-2bf02ec91d74",
 InitializationCell->True],
Cell[184127, 3604, 1091, 24, 102, "Input",ExpressionUUID->"5e72fc5a-4994-49cd-b9d6-dfbb5f8f3231",
 InitializationCell->True],
Cell[185221, 3630, 9324, 193, 524, "Input",ExpressionUUID->"6fcaf081-4f83-4c57-93ba-442bfb0fec49",
 InitializationCell->True],
Cell[194548, 3825, 20181, 403, 923, "Input",ExpressionUUID->"0c9dd359-fe32-459f-be88-a6b4c0f85d11",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[214766, 4233, 154, 3, 67, "Section",ExpressionUUID->"e9e69417-5bc0-4ef1-9b74-6733d3a520aa"],
Cell[214923, 4238, 14470, 293, 767, "Input",ExpressionUUID->"affceb9d-42dc-4044-8b7c-225ec1ae0132",
 InitializationCell->True],
Cell[229396, 4533, 3217, 69, 140, "Input",ExpressionUUID->"9bc10933-445b-4843-b713-12ff27b4e05c",
 InitializationCell->True],
Cell[232616, 4604, 11744, 267, 577, "Input",ExpressionUUID->"d4f229af-fbba-49be-a796-2f9335d09941",
 InitializationCell->True],
Cell[244363, 4873, 16064, 325, 805, "Input",ExpressionUUID->"f43a173e-15bb-488d-ad33-a8adc9a294db",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[260452, 5202, 968, 19, 102, "Input",ExpressionUUID->"8c96c2fa-71bd-4e50-8441-94418af934bd",
 InitializationCell->True],
Cell[261423, 5223, 1118, 15, 32, "Output",ExpressionUUID->"30980378-bfbf-4b9e-b7cc-60fa2ef3463b"],
Cell[262544, 5240, 1155, 16, 32, "Output",ExpressionUUID->"32969f07-4565-41d4-9102-2a72e275eb32"],
Cell[263702, 5258, 1162, 16, 32, "Output",ExpressionUUID->"cdbc65c9-9a6e-4d81-ac3a-d69632d8f8e3"],
Cell[264867, 5276, 1163, 16, 32, "Output",ExpressionUUID->"63c53473-db89-4233-a037-e5336b5235db"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266079, 5298, 303, 4, 67, "Section",ExpressionUUID->"13c71e43-daea-4b29-8239-f4bbbc6dc50a"],
Cell[266385, 5304, 1498, 32, 83, "Input",ExpressionUUID->"42134c81-d4c2-4d07-b891-5a0ece353871",
 InitializationCell->True],
Cell[267886, 5338, 2125, 56, 140, "Input",ExpressionUUID->"4e23866d-3d8b-47bc-bbbc-dfd15ba2f453",
 InitializationCell->True],
Cell[270014, 5396, 12009, 297, 860, "Input",ExpressionUUID->"e91cc2bc-12bb-4ed7-9000-b358b6534256",
 InitializationCell->True],
Cell[282026, 5695, 4542, 108, 403, "Input",ExpressionUUID->"ac9b001a-5dbb-411f-a76d-6df39cf4f883",
 InitializationCell->True],
Cell[286571, 5805, 322, 7, 64, "Input",ExpressionUUID->"16d55aa8-de04-4941-bb0d-091b9e75cf09",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

